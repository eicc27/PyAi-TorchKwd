{
    "compat": {
        "tests": {
            "test_compat": {
                "test_isfileobj": "function"
            }
        },
        "compat3k": {
            "__all__": "variable",
            "long": "variable",
            "integer_types": "variable",
            "basestring": "variable",
            "unicode": "variable",
            "bytes": "variable",
            "asunicode": "function",
            "asbytes": "function",
            "asstr": "function",
            "isfileobj": "function",
            "open_latin1": "function",
            "sixu": "function",
            "strchar": "variable",
            "getexception": "function",
            "asbytes_nested": "function",
            "asunicode_nested": "function",
            "is_pathlib_path": "function",
            "contextlib_nullcontext": "class",
            "npy_load_module": "function",
            "os_fspath": "variable",
            "os_PathLike": "variable"
        },
        "setup": {
            "configuration": "function"
        },
        "_inspect": {
            "__all__": "variable",
            "ismethod": "function",
            "isfunction": "function",
            "iscode": "function",
            "getargs": "function",
            "getargspec": "function",
            "getargvalues": "function",
            "joinseq": "function",
            "strseq": "function",
            "formatargspec": "function",
            "formatargvalues": "function"
        },
        "": {
            "__all__": "variable"
        }
    },
    "core": {
        "tests": {
            "examples": {
                "setup": {
                    "macros": "variable",
                    "checks": "variable",
                    "extensions": "variable"
                }
            },
            "test_abc": {
                "TestABC": "class"
            },
            "test_api": {
                "NPY_RELAXED_STRIDES_CHECKING": "variable",
                "test_array_array": "function",
                "test_array_impossible_casts": "function",
                "test_fastCopyAndTranspose": "function",
                "test_array_astype": "function",
                "test_array_astype_to_void": "function",
                "test_object_array_astype_to_void": "function",
                "test_array_astype_warning": "function",
                "test_string_to_boolean_cast": "function",
                "test_string_to_boolean_cast_errors": "function",
                "test_string_to_complex_cast": "function",
                "test_none_to_nan_cast": "function",
                "test_copyto_fromscalar": "function",
                "test_copyto": "function",
                "test_copyto_permut": "function",
                "test_copy_order": "function",
                "test_contiguous_flags": "function",
                "test_broadcast_arrays": "function",
                "test_full_from_list": "function"
            },
            "test_arrayprint": {
                "TestArrayRepr": "class",
                "TestComplexArray": "class",
                "TestArray2String": "class",
                "TestPrintOptions": "class",
                "test_unicode_object_array": "function",
                "TestContextManager": "class"
            },
            "test_array_coercion": {
                "arraylikes": "function",
                "scalar_instances": "function",
                "is_parametric_dtype": "function",
                "TestStringDiscovery": "class",
                "TestScalarDiscovery": "class",
                "TestTimeScalars": "class",
                "TestNested": "class",
                "TestBadSequences": "class",
                "TestArrayLikes": "class"
            },
            "test_casting_unittests": {
                "simple_dtypes": "variable",
                "simple_dtype_instances": "function",
                "get_expected_stringlength": "function",
                "Casting": "class",
                "_get_cancast_table": "function",
                "CAST_TABLE": "variable",
                "TestChanges": "class",
                "TestCasting": "class"
            },
            "test_conversion_utils": {
                "StringConverterTestCase": "class",
                "TestByteorderConverter": "class",
                "TestSortkindConverter": "class",
                "TestSelectkindConverter": "class",
                "TestSearchsideConverter": "class",
                "TestOrderConverter": "class",
                "TestClipmodeConverter": "class",
                "TestCastingConverter": "class",
                "TestIntpConverter": "class"
            },
            "test_cpu_dispatcher": {
                "test_dispatcher": "function"
            },
            "test_cpu_features": {
                "assert_features_equal": "function",
                "AbstractTest": "class",
                "is_linux": "variable",
                "Test_X86_Features": "class",
                "is_power": "variable",
                "Test_POWER_Features": "class",
                "is_arm": "variable",
                "Test_ARM_Features": "class"
            },
            "test_cython": {
                "pytestmark": "variable",
                "install_temp": "function",
                "test_is_timedelta64_object": "function",
                "test_is_datetime64_object": "function",
                "test_get_datetime64_value": "function",
                "test_get_timedelta64_value": "function",
                "test_get_datetime64_unit": "function",
                "test_abstract_scalars": "function"
            },
            "test_datetime": {
                "TestDateTime": "class",
                "TestDateTimeData": "class"
            },
            "test_defchararray": {
                "kw_unicode_true": "variable",
                "kw_unicode_false": "variable",
                "TestBasic": "class",
                "TestVecString": "class",
                "TestWhitespace": "class",
                "TestChar": "class",
                "TestComparisons": "class",
                "TestComparisonsMixed1": "class",
                "TestComparisonsMixed2": "class",
                "TestInformation": "class",
                "TestMethods": "class",
                "TestOperations": "class",
                "test_empty_indexing": "function"
            },
            "test_deprecations": {
                "_DeprecationTestCase": "class",
                "_VisibleDeprecationTestCase": "class",
                "TestNonTupleNDIndexDeprecation": "class",
                "TestComparisonDeprecations": "class",
                "TestDatetime64Timezone": "class",
                "TestNonCContiguousViewDeprecation": "class",
                "TestArrayDataAttributeAssignmentDeprecation": "class",
                "TestBinaryReprInsufficientWidthParameterForRepresentation": "class",
                "TestNumericStyleTypecodes": "class",
                "TestTestDeprecated": "class",
                "TestNonNumericConjugate": "class",
                "TestNPY_CHAR": "class",
                "TestPyArray_AS1D": "class",
                "TestPyArray_AS2D": "class",
                "Test_UPDATEIFCOPY": "class",
                "TestDatetimeEvent": "class",
                "TestTruthTestingEmptyArrays": "class",
                "TestBincount": "class",
                "TestAlen": "class",
                "TestGeneratorSum": "class",
                "TestPositiveOnNonNumerical": "class",
                "TestFromstring": "class",
                "TestFromStringAndFileInvalidData": "class",
                "Test_GetSet_NumericOps": "class",
                "TestShape1Fields": "class",
                "TestNonZero": "class",
                "test_deprecate_ragged_arrays": "function",
                "TestTooDeepDeprecation": "class",
                "TestToString": "class",
                "TestDTypeCoercion": "class",
                "BuiltInRoundComplexDType": "class",
                "TestIncorrectAdvancedIndexWithEmptyResult": "class",
                "TestNonExactMatchDeprecation": "class",
                "TestDeprecatedGlobals": "class",
                "TestMatrixInOuter": "class",
                "TestRaggedArray": "class",
                "FlatteningConcatenateUnsafeCast": "class",
                "TestDeprecateSubarrayDTypeDuringArrayCoercion": "class",
                "TestFutureWarningArrayLikeNotIterable": "class",
                "TestDeprecatedUnpickleObjectScalar": "class"
            },
            "test_dtype": {
                "assert_dtype_equal": "function",
                "assert_dtype_not_equal": "function",
                "TestBuiltin": "class",
                "TestRecord": "class",
                "TestSubarray": "class",
                "iter_struct_object_dtypes": "function",
                "TestStructuredObjectRefcounting": "class",
                "TestStructuredDtypeSparseFields": "class",
                "TestMonsterType": "class",
                "TestMetadata": "class",
                "TestString": "class",
                "TestDtypeAttributeDeletion": "class",
                "TestDtypeAttributes": "class",
                "TestPickling": "class",
                "test_rational_dtype": "function",
                "test_dtypes_are_true": "function",
                "test_invalid_dtype_string": "function",
                "test_keyword_argument": "function",
                "TestFromDTypeAttribute": "class",
                "TestDTypeClasses": "class",
                "TestFromCTypes": "class",
                "TestUserDType": "class"
            },
            "test_einsum": {
                "chars": "variable",
                "sizes": "variable",
                "global_size_dict": "variable",
                "TestEinsum": "class",
                "TestEinsumPath": "class",
                "test_overlap": "function"
            },
            "test_errstate": {
                "hosttype": "variable",
                "arm_softfloat": "variable",
                "TestErrstate": "class"
            },
            "test_extint128": {
                "INT64_MAX": "variable",
                "INT64_MIN": "variable",
                "INT64_MID": "variable",
                "INT128_MAX": "variable",
                "INT128_MIN": "variable",
                "INT128_MID": "variable",
                "INT64_VALUES": "variable",
                "INT128_VALUES": "variable",
                "INT64_POS_VALUES": "variable",
                "exc_iter": "function",
                "test_safe_binop": "function",
                "test_to_128": "function",
                "test_to_64": "function",
                "test_mul_64_64": "function",
                "test_add_128": "function",
                "test_sub_128": "function",
                "test_neg_128": "function",
                "test_shl_128": "function",
                "test_shr_128": "function",
                "test_gt_128": "function",
                "test_divmod_128_64": "function",
                "test_floordiv_128_64": "function",
                "test_ceildiv_128_64": "function"
            },
            "test_function_base": {
                "PhysicalQuantity": "class",
                "PhysicalQuantity2": "class",
                "TestLogspace": "class",
                "TestGeomspace": "class",
                "TestLinspace": "class"
            },
            "test_getlimits": {
                "TestPythonFloat": "class",
                "TestHalf": "class",
                "TestSingle": "class",
                "TestDouble": "class",
                "TestLongdouble": "class",
                "TestFinfo": "class",
                "TestIinfo": "class",
                "TestRepr": "class",
                "test_instances": "function",
                "assert_ma_equal": "function",
                "test_known_types": "function",
                "test_plausible_finfo": "function"
            },
            "test_half": {
                "assert_raises_fpe": "function",
                "TestHalf": "class"
            },
            "test_indexerrors": {
                "TestIndexErrors": "class"
            },
            "test_indexing": {
                "TestIndexing": "class",
                "TestFieldIndexing": "class",
                "TestBroadcastedAssignments": "class",
                "TestSubclasses": "class",
                "TestFancyIndexingCast": "class",
                "TestFancyIndexingEquivalence": "class",
                "TestMultiIndexingAutomated": "class",
                "TestFloatNonIntegerArgument": "class",
                "TestBooleanIndexing": "class",
                "TestArrayToIndexDeprecation": "class",
                "TestNonIntegerArrayLike": "class",
                "TestMultipleEllipsisError": "class",
                "TestCApiAccess": "class"
            },
            "test_item_selection": {
                "TestTake": "class"
            },
            "test_longdouble": {
                "LD_INFO": "variable",
                "longdouble_longer_than_double": "variable",
                "_o": "variable",
                "string_to_longdouble_inaccurate": "variable",
                "test_scalar_extraction": "function",
                "repr_precision": "variable",
                "test_repr_roundtrip": "function",
                "test_repr_roundtrip_bytes": "function",
                "test_array_and_stringlike_roundtrip": "function",
                "test_bogus_string": "function",
                "test_fromstring": "function",
                "test_fromstring_complex": "function",
                "test_fromstring_bogus": "function",
                "test_fromstring_empty": "function",
                "test_fromstring_missing": "function",
                "TestFileBased": "class",
                "test_repr_exact": "function",
                "test_format": "function",
                "test_percent": "function",
                "test_array_repr": "function",
                "TestCommaDecimalPointLocale": "class",
                "test_longdouble_from_int": "function",
                "test_longdouble_from_bool": "function"
            },
            "test_machar": {
                "TestMachAr": "class"
            },
            "test_memmap": {
                "TestMemmap": "class"
            },
            "test_mem_overlap": {
                "ndims": "variable",
                "size": "variable",
                "shape": "variable",
                "MAY_SHARE_BOUNDS": "variable",
                "MAY_SHARE_EXACT": "variable",
                "_indices_for_nelems": "function",
                "_indices_for_axis": "function",
                "_indices": "function",
                "_check_assignment": "function",
                "test_overlapping_assignments": "function",
                "test_diophantine_fuzz": "function",
                "test_diophantine_overflow": "function",
                "check_may_share_memory_exact": "function",
                "test_may_share_memory_manual": "function",
                "iter_random_view_pairs": "function",
                "check_may_share_memory_easy_fuzz": "function",
                "test_may_share_memory_easy_fuzz": "function",
                "test_may_share_memory_harder_fuzz": "function",
                "test_shares_memory_api": "function",
                "test_may_share_memory_bad_max_work": "function",
                "test_internal_overlap_diophantine": "function",
                "test_internal_overlap_slices": "function",
                "check_internal_overlap": "function",
                "test_internal_overlap_manual": "function",
                "test_internal_overlap_fuzz": "function",
                "test_non_ndarray_inputs": "function",
                "view_element_first_byte": "function",
                "assert_copy_equivalent": "function",
                "TestUFunc": "class"
            },
            "test_multiarray": {
                "_aligned_zeros": "function",
                "TestFlags": "class",
                "TestHash": "class",
                "TestAttributes": "class",
                "TestArrayConstruction": "class",
                "TestAssignment": "class",
                "TestDtypedescr": "class",
                "TestZeroRank": "class",
                "TestScalarIndexing": "class",
                "TestCreation": "class",
                "TestStructured": "class",
                "TestBool": "class",
                "TestZeroSizeFlexible": "class",
                "TestMethods": "class",
                "TestCequenceMethods": "class",
                "TestBinop": "class",
                "TestTemporaryElide": "class",
                "TestCAPI": "class",
                "TestSubscripting": "class",
                "TestPickling": "class",
                "TestFancyIndexing": "class",
                "TestStringCompare": "class",
                "TestArgmax": "class",
                "TestArgmin": "class",
                "TestMinMax": "class",
                "TestNewaxis": "class",
                "TestClip": "class",
                "TestCompress": "class",
                "TestPutmask": "class",
                "TestTake": "class",
                "TestLexsort": "class",
                "TestIO": "class",
                "TestFromBuffer": "class",
                "TestFlat": "class",
                "TestResize": "class",
                "TestRecord": "class",
                "TestView": "class",
                "_mean": "function",
                "_var": "function",
                "_std": "function",
                "TestStats": "class",
                "TestVdot": "class",
                "TestDot": "class",
                "MatmulCommon": "class",
                "TestMatmul": "class",
                "TestMatmulOperator": "class",
                "test_matmul_inplace": "function",
                "test_matmul_axes": "function",
                "TestInner": "class",
                "TestAlen": "class",
                "TestChoose": "class",
                "TestRepeat": "class",
                "NEIGH_MODE": "variable",
                "TestNeighborhoodIter": "class",
                "TestStackedNeighborhoodIter": "class",
                "TestWarnings": "class",
                "TestMinScalarType": "class",
                "TestPEP3118Dtype": "class",
                "TestNewBufferProtocol": "class",
                "TestArrayAttributeDeletion": "class",
                "TestArrayInterface": "class",
                "test_interface_no_shape": "function",
                "test_array_interface_itemsize": "function",
                "test_array_interface_empty_shape": "function",
                "test_array_interface_offset": "function",
                "test_array_interface_unicode_typestr": "function",
                "test_flat_element_deletion": "function",
                "test_scalar_element_deletion": "function",
                "TestMemEventHook": "class",
                "TestMapIter": "class",
                "TestAsCArray": "class",
                "TestConversion": "class",
                "TestWhere": "class",
                "TestHashing": "class",
                "TestArrayPriority": "class",
                "TestBytestringArrayNonzero": "class",
                "TestUnicodeEncoding": "class",
                "TestUnicodeArrayNonzero": "class",
                "TestFormat": "class",
                "TestCTypes": "class",
                "TestWritebackIfCopy": "class",
                "TestArange": "class",
                "TestArrayFinalize": "class",
                "test_orderconverter_with_nonASCII_unicode_ordering": "function",
                "test_equal_override": "function",
                "test_npymath_complex": "function",
                "test_npymath_real": "function",
                "test_uintalignment_and_alignment": "function",
                "TestAlignment": "class",
                "test_getfield": "function"
            },
            "test_nditer": {
                "iter_multi_index": "function",
                "iter_indices": "function",
                "iter_iterindices": "function",
                "test_iter_refcount": "function",
                "test_iter_best_order": "function",
                "test_iter_c_order": "function",
                "test_iter_f_order": "function",
                "test_iter_c_or_f_order": "function",
                "test_iter_best_order_multi_index_1d": "function",
                "test_iter_best_order_multi_index_2d": "function",
                "test_iter_best_order_multi_index_3d": "function",
                "test_iter_best_order_c_index_1d": "function",
                "test_iter_best_order_c_index_2d": "function",
                "test_iter_best_order_c_index_3d": "function",
                "test_iter_best_order_f_index_1d": "function",
                "test_iter_best_order_f_index_2d": "function",
                "test_iter_best_order_f_index_3d": "function",
                "test_iter_no_inner_full_coalesce": "function",
                "test_iter_no_inner_dim_coalescing": "function",
                "test_iter_dim_coalescing": "function",
                "test_iter_broadcasting": "function",
                "test_iter_itershape": "function",
                "test_iter_broadcasting_errors": "function",
                "test_iter_flags_errors": "function",
                "test_iter_slice": "function",
                "test_iter_assign_mapping": "function",
                "test_iter_nbo_align_contig": "function",
                "test_iter_array_cast": "function",
                "test_iter_array_cast_errors": "function",
                "test_iter_scalar_cast": "function",
                "test_iter_scalar_cast_errors": "function",
                "test_iter_object_arrays_basic": "function",
                "test_iter_object_arrays_conversions": "function",
                "test_iter_common_dtype": "function",
                "test_iter_copy_if_overlap": "function",
                "test_iter_op_axes": "function",
                "test_iter_op_axes_errors": "function",
                "test_iter_copy": "function",
                "test_iter_allocate_output_simple": "function",
                "test_iter_allocate_output_buffered_readwrite": "function",
                "test_iter_allocate_output_itorder": "function",
                "test_iter_allocate_output_opaxes": "function",
                "test_iter_allocate_output_types_promotion": "function",
                "test_iter_allocate_output_types_byte_order": "function",
                "test_iter_allocate_output_types_scalar": "function",
                "test_iter_allocate_output_subtype": "function",
                "test_iter_allocate_output_errors": "function",
                "test_iter_remove_axis": "function",
                "test_iter_remove_multi_index_inner_loop": "function",
                "test_iter_iterindex": "function",
                "test_iter_iterrange": "function",
                "test_iter_buffering": "function",
                "test_iter_write_buffering": "function",
                "test_iter_buffering_delayed_alloc": "function",
                "test_iter_buffered_cast_simple": "function",
                "test_iter_buffered_cast_byteswapped": "function",
                "test_iter_buffered_cast_byteswapped_complex": "function",
                "test_iter_buffered_cast_structured_type": "function",
                "test_iter_buffered_cast_subarray": "function",
                "test_iter_buffering_badwriteback": "function",
                "test_iter_buffering_string": "function",
                "test_iter_buffering_growinner": "function",
                "test_iter_buffered_reduce_reuse": "function",
                "test_iter_no_broadcast": "function",
                "TestIterNested": "class",
                "test_iter_reduction_error": "function",
                "test_iter_reduction": "function",
                "test_iter_buffering_reduction": "function",
                "test_iter_buffering_reduction_reuse_reduce_loops": "function",
                "test_iter_writemasked_badinput": "function",
                "test_iter_writemasked": "function",
                "test_iter_non_writable_attribute_deletion": "function",
                "test_iter_writable_attribute_deletion": "function",
                "test_iter_element_deletion": "function",
                "test_iter_allocated_array_dtypes": "function",
                "test_0d_iter": "function",
                "test_object_iter_cleanup": "function",
                "test_object_iter_cleanup_reduce": "function",
                "test_object_iter_cleanup_large_reduce": "function",
                "test_iter_too_large": "function",
                "test_iter_too_large_with_multiindex": "function",
                "test_writebacks": "function",
                "test_close_equivalent": "function",
                "test_close_raises": "function",
                "test_warn_noclose": "function",
                "test_partial_iteration_cleanup": "function",
                "test_partial_iteration_error": "function"
            },
            "test_numeric": {
                "TestResize": "class",
                "TestNonarrayArgs": "class",
                "TestIsscalar": "class",
                "TestBoolScalar": "class",
                "TestBoolArray": "class",
                "TestBoolCmp": "class",
                "TestSeterr": "class",
                "TestFloatExceptions": "class",
                "TestTypes": "class",
                "NIterError": "class",
                "TestFromiter": "class",
                "TestNonzero": "class",
                "TestIndex": "class",
                "TestBinaryRepr": "class",
                "TestBaseRepr": "class",
                "TestArrayComparisons": "class",
                "assert_array_strict_equal": "function",
                "TestClip": "class",
                "TestAllclose": "class",
                "TestIsclose": "class",
                "TestStdVar": "class",
                "TestStdVarComplex": "class",
                "TestCreationFuncs": "class",
                "TestLikeFuncs": "class",
                "TestCorrelate": "class",
                "TestConvolve": "class",
                "TestArgwhere": "class",
                "TestStringFunction": "class",
                "TestRoll": "class",
                "TestRollaxis": "class",
                "TestMoveaxis": "class",
                "TestCross": "class",
                "test_outer_out_param": "function",
                "TestIndices": "class",
                "TestRequire": "class",
                "TestBroadcast": "class",
                "TestKeepdims": "class",
                "TestTensordot": "class"
            },
            "test_numerictypes": {
                "Pdescr": "variable",
                "PbufferT": "variable",
                "Ndescr": "variable",
                "NbufferT": "variable",
                "byteorder": "variable",
                "normalize_descr": "function",
                "CreateZeros": "class",
                "TestCreateZerosPlain": "class",
                "TestCreateZerosNested": "class",
                "CreateValues": "class",
                "TestCreateValuesPlainSingle": "class",
                "TestCreateValuesPlainMultiple": "class",
                "TestCreateValuesNestedSingle": "class",
                "TestCreateValuesNestedMultiple": "class",
                "ReadValuesPlain": "class",
                "TestReadValuesPlainSingle": "class",
                "TestReadValuesPlainMultiple": "class",
                "ReadValuesNested": "class",
                "TestReadValuesNestedSingle": "class",
                "TestReadValuesNestedMultiple": "class",
                "TestEmptyField": "class",
                "TestCommonType": "class",
                "TestMultipleFields": "class",
                "TestIsSubDType": "class",
                "TestSctypeDict": "class",
                "TestBitName": "class",
                "TestMaximumSctype": "class",
                "Test_sctype2char": "class",
                "test_issctype": "function",
                "TestDocStrings": "class",
                "TestScalarTypeNames": "class"
            },
            "test_overrides": {
                "requires_array_function": "variable",
                "_return_not_implemented": "function",
                "dispatched_one_arg": "function",
                "dispatched_two_arg": "function",
                "TestGetImplementingArgs": "class",
                "TestNDArrayArrayFunction": "class",
                "TestArrayFunctionDispatch": "class",
                "TestVerifyMatchingSignatures": "class",
                "_new_duck_type_and_implements": "function",
                "TestArrayFunctionImplementation": "class",
                "TestNDArrayMethods": "class",
                "TestNumPyFunctions": "class",
                "TestArrayLike": "class"
            },
            "test_print": {
                "_REF": "variable",
                "test_float_types": "function",
                "test_nan_inf_float": "function",
                "test_complex_types": "function",
                "test_complex_inf_nan": "function",
                "_test_redirected_print": "function",
                "test_float_type_print": "function",
                "test_complex_type_print": "function",
                "test_scalar_format": "function",
                "TestCommaDecimalPointLocale": "class"
            },
            "test_protocols": {
                "test_getattr_warning": "function",
                "test_array_called": "function"
            },
            "test_records": {
                "TestFromrecords": "class",
                "TestPathUsage": "class",
                "TestRecord": "class",
                "test_find_duplicate": "function"
            },
            "test_regression": {
                "TestRegression": "class"
            },
            "test_scalarbuffer": {
                "scalars_and_codes": "variable",
                "TestScalarPEP3118": "class"
            },
            "test_scalarinherit": {
                "A": "class",
                "B": "class",
                "C": "class",
                "D": "class",
                "B0": "class",
                "C0": "class",
                "HasNew": "class",
                "B1": "class",
                "TestInherit": "class",
                "TestCharacter": "class"
            },
            "test_scalarmath": {
                "types": "variable",
                "floating_types": "variable",
                "complex_floating_types": "variable",
                "TestTypes": "class",
                "TestBaseMath": "class",
                "TestPower": "class",
                "floordiv_and_mod": "function",
                "_signs": "function",
                "TestModulus": "class",
                "TestComplexDivision": "class",
                "TestConversion": "class",
                "TestRepr": "class",
                "TestMultiply": "class",
                "TestNegative": "class",
                "TestSubtract": "class",
                "TestAbs": "class",
                "TestBitShifts": "class",
                "recursionlimit": "function",
                "objecty_things": "variable",
                "reasonable_operators_for_scalars": "variable",
                "test_operator_object_left": "function",
                "test_operator_object_right": "function",
                "test_operator_scalars": "function",
                "test_longdouble_inf_loop": "function",
                "test_clongdouble_inf_loop": "function"
            },
            "test_scalarprint": {
                "TestRealScalars": "class"
            },
            "test_scalar_ctors": {
                "TestFromString": "class",
                "TestExtraArgs": "class",
                "TestFromInt": "class",
                "int_types": "variable",
                "uint_types": "variable",
                "float_types": "variable",
                "cfloat_types": "variable",
                "TestArrayFromScalar": "class"
            },
            "test_scalar_methods": {
                "TestAsIntegerRatio": "class"
            },
            "test_shape_base": {
                "TestAtleast1d": "class",
                "TestAtleast2d": "class",
                "TestAtleast3d": "class",
                "TestHstack": "class",
                "TestVstack": "class",
                "TestConcatenate": "class",
                "test_stack": "function",
                "TestBlock": "class",
                "test_block_dispatcher": "function"
            },
            "test_simd": {
                "_Test_Utility": "class",
                "_SIMD_INT": "class",
                "_SIMD_FP": "class",
                "_SIMD_ALL": "class",
                "int_sfx": "variable",
                "all_sfx": "variable",
                "tests_registry": "variable"
            },
            "test_simd_module": {
                "npyvs": "variable",
                "unsigned_sfx": "variable",
                "signed_sfx": "variable",
                "fp_sfx": "variable",
                "int_sfx": "variable",
                "all_sfx": "variable",
                "Test_SIMD_MODULE": "class"
            },
            "test_ufunc": {
                "UNARY_UFUNCS": "variable",
                "UNARY_OBJECT_UFUNCS": "variable",
                "TestUfuncKwargs": "class",
                "TestUfuncGenericLoops": "class",
                "_pickleable_module_global": "function",
                "TestUfunc": "class",
                "test_ufunc_types": "function",
                "test_ufunc_noncontiguous": "function",
                "test_ufunc_warn_with_nan": "function",
                "test_ufunc_casterrors": "function",
                "test_reduce_casterrors": "function"
            },
            "test_umath": {
                "on_powerpc": "function",
                "bad_arcsinh": "function",
                "_FilterInvalids": "class",
                "TestConstants": "class",
                "TestOut": "class",
                "TestComparisons": "class",
                "TestAdd": "class",
                "TestDivision": "class",
                "floor_divide_and_remainder": "function",
                "_signs": "function",
                "TestRemainder": "class",
                "TestCbrt": "class",
                "TestPower": "class",
                "TestFloat_power": "class",
                "TestLog2": "class",
                "TestExp2": "class",
                "TestLogAddExp2": "class",
                "TestLog": "class",
                "TestExp": "class",
                "TestSpecialFloats": "class",
                "TestFPClass": "class",
                "TestLDExp": "class",
                "TestFRExp": "class",
                "avx_ufuncs": "variable",
                "TestAVXUfuncs": "class",
                "TestAVXFloat32Transcendental": "class",
                "TestLogAddExp": "class",
                "TestLog1p": "class",
                "TestExpm1": "class",
                "TestHypot": "class",
                "assert_hypot_isnan": "function",
                "assert_hypot_isinf": "function",
                "TestHypotSpecialValues": "class",
                "assert_arctan2_isnan": "function",
                "assert_arctan2_ispinf": "function",
                "assert_arctan2_isninf": "function",
                "assert_arctan2_ispzero": "function",
                "assert_arctan2_isnzero": "function",
                "TestArctan2SpecialValues": "class",
                "TestLdexp": "class",
                "TestMaximum": "class",
                "TestMinimum": "class",
                "TestFmax": "class",
                "TestFmin": "class",
                "TestBool": "class",
                "TestBitwiseUFuncs": "class",
                "TestInt": "class",
                "TestFloatingPoint": "class",
                "TestDegrees": "class",
                "TestRadians": "class",
                "TestHeavside": "class",
                "TestSign": "class",
                "TestMinMax": "class",
                "TestAbsoluteNegative": "class",
                "TestPositive": "class",
                "TestSpecialMethods": "class",
                "TestChoose": "class",
                "TestRationalFunctions": "class",
                "TestRoundingFunctions": "class",
                "TestComplexFunctions": "class",
                "TestAttributes": "class",
                "TestSubclass": "class",
                "TestFrompyfunc": "class",
                "_check_branch_cut": "function",
                "test_copysign": "function",
                "_test_nextafter": "function",
                "test_nextafter": "function",
                "test_nextafterf": "function",
                "@pytest.mark.skipif(np.finfo(np.double)": "variable",
                "test_nextafterl": "function",
                "test_nextafter_0": "function",
                "_test_spacing": "function",
                "test_spacing": "function",
                "test_spacingf": "function",
                "test_spacingl": "function",
                "test_spacing_gfortran": "function",
                "test_nextafter_vs_spacing": "function",
                "test_pos_nan": "function",
                "test_reduceat": "function",
                "test_reduceat_empty": "function",
                "test_complex_nan_comparisons": "function",
                "test_rint_big_int": "function",
                "test_memoverlap_accumulate": "function",
                "test_signaling_nan_exceptions": "function",
                "test_outer_subclass_preserve": "function",
                "test_outer_bad_subclass": "function",
                "test_outer_exceeds_maxdims": "function"
            },
            "test_umath_accuracy": {
                "IS_AVX": "variable",
                "runtest": "variable",
                "platform_skip": "variable",
                "convert": "function",
                "str_to_float": "variable",
                "files": "variable",
                "TestAccuracy": "class"
            },
            "test_umath_complex": {
                "xfail_complex_tests": "variable",
                "platform_skip": "variable",
                "TestCexp": "class",
                "TestClog": "class",
                "TestCsqrt": "class",
                "TestCpow": "class",
                "TestCabs": "class",
                "TestCarg": "class",
                "check_real_value": "function",
                "check_complex_value": "function",
                "TestSpecialComplexAVX": "class",
                "TestComplexAbsoluteAVX": "class",
                "TestComplexAbsoluteMixedDTypes": "class"
            },
            "test_unicode": {
                "buffer_length": "function",
                "ucs2_value": "variable",
                "ucs4_value": "variable",
                "test_string_cast": "function",
                "CreateZeros": "class",
                "TestCreateZeros_1": "class",
                "TestCreateZeros_2": "class",
                "TestCreateZeros_1009": "class",
                "CreateValues": "class",
                "TestCreateValues_1_UCS2": "class",
                "TestCreateValues_1_UCS4": "class",
                "TestCreateValues_2_UCS2": "class",
                "TestCreateValues_2_UCS4": "class",
                "TestCreateValues_1009_UCS2": "class",
                "TestCreateValues_1009_UCS4": "class",
                "AssignValues": "class",
                "TestAssignValues_1_UCS2": "class",
                "TestAssignValues_1_UCS4": "class",
                "TestAssignValues_2_UCS2": "class",
                "TestAssignValues_2_UCS4": "class",
                "TestAssignValues_1009_UCS2": "class",
                "TestAssignValues_1009_UCS4": "class",
                "ByteorderValues": "class",
                "TestByteorder_1_UCS2": "class",
                "TestByteorder_1_UCS4": "class",
                "TestByteorder_2_UCS2": "class",
                "TestByteorder_2_UCS4": "class",
                "TestByteorder_1009_UCS2": "class",
                "TestByteorder_1009_UCS4": "class"
            },
            "test__exceptions": {
                "_ArrayMemoryError": "variable",
                "_UFuncNoLoopError": "variable",
                "TestArrayMemoryError": "class",
                "TestUFuncNoLoopError": "class"
            },
            "_locales": {
                "__ALL__": "variable",
                "find_comma_decimal_point_locale": "function",
                "CommaDecimalPointLocale": "class"
            }
        },
        "arrayprint": {
            "__all__": "variable",
            "__docformat__": "variable",
            "_format_options": "variable",
            "_make_options_dict": "function",
            "set_printoptions": "function",
            "get_printoptions": "function",
            "printoptions": "function",
            "_leading_trailing": "function",
            "_object_format": "function",
            "repr_format": "function",
            "str_format": "function",
            "_get_formatdict": "function",
            "_get_format_function": "function",
            "_recursive_guard": "function",
            "_array2string": "function",
            "_array2string_dispatcher": "function",
            "array2string": "function",
            "_extendLine": "function",
            "_extendLine_pretty": "function",
            "_formatArray": "function",
            "_none_or_positive_arg": "function",
            "FloatingFormat": "class",
            "format_float_scientific": "function",
            "format_float_positional": "function",
            "IntegerFormat": "class",
            "BoolFormat": "class",
            "ComplexFloatingFormat": "class",
            "_TimelikeFormat": "class",
            "DatetimeFormat": "class",
            "TimedeltaFormat": "class",
            "SubArrayFormat": "class",
            "StructuredVoidFormat": "class",
            "_void_scalar_repr": "function",
            "_typelessdata": "variable",
            "dtype_is_implied": "function",
            "dtype_short_repr": "function",
            "_array_repr_implementation": "function",
            "_array_repr_dispatcher": "function",
            "array_repr": "function",
            "_guarded_repr_or_str": "function",
            "_array_str_implementation": "function",
            "_array_str_dispatcher": "function",
            "array_str": "function",
            "_array2string_impl": "variable",
            "_default_array_str": "variable",
            "_default_array_repr": "variable",
            "set_string_function": "function"
        },
        "defchararray": {
            "__all__": "variable",
            "_globalvar": "variable",
            "array_function_dispatch": "variable",
            "_use_unicode": "function",
            "_to_string_or_unicode_array": "function",
            "_clean_args": "function",
            "_get_num_chars": "function",
            "_binary_op_dispatcher": "function",
            "equal": "function",
            "not_equal": "function",
            "greater_equal": "function",
            "less_equal": "function",
            "greater": "function",
            "less": "function",
            "_unary_op_dispatcher": "function",
            "str_len": "function",
            "add": "function",
            "_multiply_dispatcher": "function",
            "multiply": "function",
            "_mod_dispatcher": "function",
            "mod": "function",
            "capitalize": "function",
            "_center_dispatcher": "function",
            "center": "function",
            "_count_dispatcher": "function",
            "count": "function",
            "_code_dispatcher": "function",
            "decode": "function",
            "encode": "function",
            "_endswith_dispatcher": "function",
            "endswith": "function",
            "_expandtabs_dispatcher": "function",
            "expandtabs": "function",
            "find": "function",
            "index": "function",
            "isalnum": "function",
            "isalpha": "function",
            "isdigit": "function",
            "islower": "function",
            "isspace": "function",
            "istitle": "function",
            "isupper": "function",
            "_join_dispatcher": "function",
            "join": "function",
            "_just_dispatcher": "function",
            "ljust": "function",
            "lower": "function",
            "_strip_dispatcher": "function",
            "lstrip": "function",
            "_partition_dispatcher": "function",
            "partition": "function",
            "_replace_dispatcher": "function",
            "replace": "function",
            "rfind": "function",
            "rindex": "function",
            "rjust": "function",
            "rpartition": "function",
            "_split_dispatcher": "function",
            "rsplit": "function",
            "rstrip": "function",
            "split": "function",
            "_splitlines_dispatcher": "function",
            "splitlines": "function",
            "_startswith_dispatcher": "function",
            "startswith": "function",
            "strip": "function",
            "swapcase": "function",
            "title": "function",
            "_translate_dispatcher": "function",
            "translate": "function",
            "upper": "function",
            "_zfill_dispatcher": "function",
            "zfill": "function",
            "isnumeric": "function",
            "isdecimal": "function",
            "chararray": "class",
            "array": "function",
            "asarray": "function"
        },
        "einsumfunc": {
            "__all__": "variable",
            "einsum_symbols": "variable",
            "einsum_symbols_set": "variable",
            "_flop_count": "function",
            "_compute_size_by_dict": "function",
            "_find_contraction": "function",
            "_optimal_path": "function",
            "_parse_possible_contraction": "function",
            "_update_other_results": "function",
            "_greedy_path": "function",
            "_can_dot": "function",
            "_parse_einsum_input": "function",
            "_einsum_path_dispatcher": "function",
            "einsum_path": "function",
            "_einsum_dispatcher": "function",
            "einsum": "function"
        },
        "fromnumeric": {
            "_dt_": "variable",
            "__all__": "variable",
            "_gentype": "variable",
            "_sum_": "variable",
            "array_function_dispatch": "variable",
            "_wrapit": "function",
            "_wrapfunc": "function",
            "_wrapreduction": "function",
            "_take_dispatcher": "function",
            "take": "function",
            "_reshape_dispatcher": "function",
            "reshape": "function",
            "_choose_dispatcher": "function",
            "choose": "function",
            "_repeat_dispatcher": "function",
            "repeat": "function",
            "_put_dispatcher": "function",
            "put": "function",
            "_swapaxes_dispatcher": "function",
            "swapaxes": "function",
            "_transpose_dispatcher": "function",
            "transpose": "function",
            "_partition_dispatcher": "function",
            "partition": "function",
            "_argpartition_dispatcher": "function",
            "argpartition": "function",
            "_sort_dispatcher": "function",
            "sort": "function",
            "_argsort_dispatcher": "function",
            "argsort": "function",
            "_argmax_dispatcher": "function",
            "argmax": "function",
            "_argmin_dispatcher": "function",
            "argmin": "function",
            "_searchsorted_dispatcher": "function",
            "searchsorted": "function",
            "_resize_dispatcher": "function",
            "resize": "function",
            "_squeeze_dispatcher": "function",
            "squeeze": "function",
            "_diagonal_dispatcher": "function",
            "diagonal": "function",
            "_trace_dispatcher": "function",
            "trace": "function",
            "_ravel_dispatcher": "function",
            "ravel": "function",
            "_nonzero_dispatcher": "function",
            "nonzero": "function",
            "_shape_dispatcher": "function",
            "shape": "function",
            "_compress_dispatcher": "function",
            "compress": "function",
            "_clip_dispatcher": "function",
            "clip": "function",
            "_sum_dispatcher": "function",
            "sum": "function",
            "_any_dispatcher": "function",
            "any": "function",
            "_all_dispatcher": "function",
            "all": "function",
            "_cumsum_dispatcher": "function",
            "cumsum": "function",
            "_ptp_dispatcher": "function",
            "ptp": "function",
            "_amax_dispatcher": "function",
            "amax": "function",
            "_amin_dispatcher": "function",
            "amin": "function",
            "_alen_dispathcer": "function",
            "alen": "function",
            "_prod_dispatcher": "function",
            "prod": "function",
            "_cumprod_dispatcher": "function",
            "cumprod": "function",
            "_ndim_dispatcher": "function",
            "ndim": "function",
            "_size_dispatcher": "function",
            "size": "function",
            "_around_dispatcher": "function",
            "around": "function",
            "_mean_dispatcher": "function",
            "mean": "function",
            "_std_dispatcher": "function",
            "std": "function",
            "_var_dispatcher": "function",
            "var": "function",
            "round_": "function",
            "product": "function",
            "cumproduct": "function",
            "sometrue": "function",
            "alltrue": "function"
        },
        "function_base": {
            "__all__": "variable",
            "array_function_dispatch": "variable",
            "_linspace_dispatcher": "function",
            "linspace": "function",
            "_logspace_dispatcher": "function",
            "logspace": "function",
            "_geomspace_dispatcher": "function",
            "geomspace": "function",
            "_needs_add_docstring": "function",
            "_add_docstring": "function",
            "add_newdoc": "function"
        },
        "generate_numpy_api": {
            "h_template": "variable",
            "c_api_header": "variable"
        },
        "getlimits": {
            "__all__": "variable",
            "_fr0": "function",
            "_fr1": "function",
            "MachArLike": "class",
            "_convert_to_float": "variable",
            "_title_fmt": "variable",
            "_MACHAR_PARAMS": "variable",
            "_KNOWN_TYPES": "variable",
            "_register_type": "function",
            "_float_ma": "variable",
            "_register_known_types": "function",
            "_get_machar": "function",
            "_discovered_machar": "function",
            "finfo": "class",
            "iinfo": "class"
        },
        "machar": {
            "__all__": "variable",
            "MachAr": "class"
        },
        "memmap": {
            "__all__": "variable",
            "dtypedescr": "variable",
            "valid_filemodes": "variable",
            "writeable_filemodes": "variable",
            "mode_equivalents": "variable",
            "memmap": "class"
        },
        "multiarray": {
            "__all__": "variable",
            "_reconstruct.__module__": "variable",
            "scalar.__module__": "variable",
            "arange.__module__": "variable",
            "array.__module__": "variable",
            "datetime_data.__module__": "variable",
            "empty.__module__": "variable",
            "frombuffer.__module__": "variable",
            "fromfile.__module__": "variable",
            "fromiter.__module__": "variable",
            "frompyfunc.__module__": "variable",
            "fromstring.__module__": "variable",
            "geterrobj.__module__": "variable",
            "may_share_memory.__module__": "variable",
            "nested_iters.__module__": "variable",
            "promote_types.__module__": "variable",
            "set_numeric_ops.__module__": "variable",
            "seterrobj.__module__": "variable",
            "zeros.__module__": "variable",
            "array_function_from_c_func_and_dispatcher": "variable",
            "empty_like": "function",
            "concatenate": "function",
            "inner": "function",
            "where": "function",
            "lexsort": "function",
            "can_cast": "function",
            "min_scalar_type": "function",
            "result_type": "function",
            "dot": "function",
            "vdot": "function",
            "bincount": "function",
            "ravel_multi_index": "function",
            "unravel_index": "function",
            "copyto": "function",
            "putmask": "function",
            "packbits": "function",
            "unpackbits": "function",
            "shares_memory": "function",
            "may_share_memory": "function",
            "is_busday": "function",
            "busday_offset": "function",
            "busday_count": "function",
            "datetime_as_string": "function"
        },
        "numeric": {
            "bitwise_not": "variable",
            "ufunc": "variable",
            "newaxis": "variable",
            "array_function_dispatch": "variable",
            "__all__": "variable",
            "ComplexWarning": "class",
            "_zeros_like_dispatcher": "function",
            "zeros_like": "function",
            "_ones_dispatcher": "function",
            "ones": "function",
            "_ones_with_like": "variable",
            "_ones_like_dispatcher": "function",
            "ones_like": "function",
            "_full_dispatcher": "function",
            "full": "function",
            "_full_with_like": "variable",
            "_full_like_dispatcher": "function",
            "full_like": "function",
            "_count_nonzero_dispatcher": "function",
            "count_nonzero": "function",
            "isfortran": "function",
            "_argwhere_dispatcher": "function",
            "argwhere": "function",
            "_flatnonzero_dispatcher": "function",
            "flatnonzero": "function",
            "_mode_from_name_dict": "variable",
            "_mode_from_name": "function",
            "_correlate_dispatcher": "function",
            "correlate": "function",
            "_convolve_dispatcher": "function",
            "convolve": "function",
            "_outer_dispatcher": "function",
            "outer": "function",
            "_tensordot_dispatcher": "function",
            "tensordot": "function",
            "_roll_dispatcher": "function",
            "roll": "function",
            "_rollaxis_dispatcher": "function",
            "rollaxis": "function",
            "normalize_axis_tuple": "function",
            "_moveaxis_dispatcher": "function",
            "moveaxis": "function",
            "_move_axis_to_0": "function",
            "_cross_dispatcher": "function",
            "cross": "function",
            "little_endian": "variable",
            "indices": "function",
            "_fromfunction_dispatcher": "function",
            "fromfunction": "function",
            "_fromfunction_with_like": "variable",
            "_frombuffer": "function",
            "isscalar": "function",
            "binary_repr": "function",
            "base_repr": "function",
            "_maketup": "function",
            "_identity_dispatcher": "function",
            "identity": "function",
            "_identity_with_like": "variable",
            "_allclose_dispatcher": "function",
            "allclose": "function",
            "_isclose_dispatcher": "function",
            "isclose": "function",
            "_array_equal_dispatcher": "function",
            "array_equal": "function",
            "_array_equiv_dispatcher": "function",
            "array_equiv": "function",
            "Inf": "variable",
            "nan": "variable",
            "False_": "variable",
            "True_": "variable",
            "extend_all": "function"
        },
        "numerictypes": {
            "__all__": "variable",
            "generic": "variable",
            "genericTypeRank": "variable",
            "maximum_sctype": "function",
            "issctype": "function",
            "obj2sctype": "function",
            "issubclass_": "function",
            "issubsctype": "function",
            "issubdtype": "function",
            "_typedict": "class",
            "nbytes": "variable",
            "_alignment": "variable",
            "_maxvals": "variable",
            "_minvals": "variable",
            "_construct_lookups": "function",
            "sctype2char": "function",
            "cast": "variable",
            "ScalarType": "variable",
            "typecodes": "variable",
            "typeDict": "variable",
            "_kind_list": "variable",
            "__test_types": "variable",
            "__len_test_types": "variable",
            "_find_common_coerce": "function",
            "_can_coerce_all": "function",
            "_register_types": "function",
            "find_common_type": "function"
        },
        "records": {
            "__all__": "variable",
            "ndarray": "variable",
            "_byteorderconv": "variable",
            "numfmt": "variable",
            "_OrderedCounter": "class",
            "find_duplicate": "function",
            "format_parser": "class",
            "record": "class",
            "recarray": "class",
            "_deprecate_shape_0_as_None": "function",
            "fromarrays": "function",
            "fromrecords": "function",
            "fromstring": "function",
            "get_remaining_size": "function",
            "fromfile": "function",
            "array": "function"
        },
        "setup": {
            "NPY_RELAXED_STRIDES_CHECKING": "variable",
            "NPY_RELAXED_STRIDES_DEBUG": "variable",
            "NPY_USE_NEW_CASTINGIMPL": "variable",
            "CallOnceOnly": "class",
            "pythonlib_dir": "function",
            "is_npy_no_signal": "function",
            "is_npy_no_smp": "function",
            "win32_checks": "function",
            "check_math_capabilities": "function",
            "check_complex": "function",
            "check_ieee_macros": "function",
            "check_types": "function",
            "check_mathlib": "function",
            "visibility_define": "function",
            "configuration": "function"
        },
        "setup_common": {
            "C_ABI_VERSION": "variable",
            "C_API_VERSION": "variable",
            "MismatchCAPIWarning": "class",
            "is_released": "function",
            "get_api_versions": "function",
            "check_api_version": "function",
            "MANDATORY_FUNCS": "variable",
            "OPTIONAL_STDFUNCS": "variable",
            "OPTIONAL_HEADERS": "variable",
            "OPTIONAL_INTRINSICS": "variable",
            "OPTIONAL_FUNCTION_ATTRIBUTES": "variable",
            "OPTIONAL_FUNCTION_ATTRIBUTES_WITH_INTRINSICS": "variable",
            "OPTIONAL_VARIABLE_ATTRIBUTES": "variable",
            "OPTIONAL_STDFUNCS_MAYBE": "variable",
            "C99_FUNCS": "variable",
            "C99_FUNCS_SINGLE": "variable",
            "C99_FUNCS_EXTENDED": "variable",
            "C99_COMPLEX_TYPES": "variable",
            "C99_COMPLEX_FUNCS": "variable",
            "fname2def": "function",
            "sym2def": "function",
            "type2def": "function",
            "check_long_double_representation": "function",
            "LONG_DOUBLE_REPRESENTATION_SRC": "variable"
        },
        "shape_base": {
            "__all__": "variable",
            "array_function_dispatch": "variable",
            "_atleast_1d_dispatcher": "function",
            "atleast_1d": "function",
            "_atleast_2d_dispatcher": "function",
            "atleast_2d": "function",
            "_atleast_3d_dispatcher": "function",
            "atleast_3d": "function",
            "_arrays_for_stack_dispatcher": "function",
            "_vhstack_dispatcher": "function",
            "vstack": "function",
            "hstack": "function",
            "_stack_dispatcher": "function",
            "stack": "function",
            "_size": "variable",
            "_ndim": "variable",
            "_concatenate": "variable",
            "_block_format_index": "function",
            "_block_check_depths_match": "function",
            "_atleast_nd": "function",
            "_accumulate": "function",
            "_concatenate_shapes": "function",
            "_block_info_recursion": "function",
            "_block": "function",
            "_block_dispatcher": "function",
            "block": "function",
            "_block_setup": "function",
            "_block_slicing": "function",
            "_block_concatenate": "function"
        },
        "umath": {
            "__all__": "variable"
        },
        "_add_newdocs": {
            "refer_to_array_attribute": "function"
        },
        "_add_newdocs_scalars": {
            "numeric_type_aliases": "function",
            "possible_aliases": "variable",
            "add_newdoc_for_scalar_type": "function"
        },
        "_asarray": {
            "__all__": "variable",
            "_asarray_dispatcher": "function",
            "asarray": "function",
            "_asarray_with_like": "variable",
            "asanyarray": "function",
            "_asanyarray_with_like": "variable",
            "_asarray_contiguous_fortran_dispatcher": "function",
            "ascontiguousarray": "function",
            "_ascontiguousarray_with_like": "variable",
            "asfortranarray": "function",
            "_asfortranarray_with_like": "variable",
            "_require_dispatcher": "function",
            "require": "function",
            "_require_with_like": "variable"
        },
        "_dtype": {
            "_kind_to_stem": "variable",
            "_kind_name": "function",
            "__str__": "function",
            "__repr__": "function",
            "_unpack_field": "function",
            "_isunsized": "function",
            "_construction_repr": "function",
            "_scalar_str": "function",
            "_byte_order_str": "function",
            "_datetime_metadata_str": "function",
            "_struct_dict_str": "function",
            "_is_packed": "function",
            "_struct_list_str": "function",
            "_struct_str": "function",
            "_subarray_str": "function",
            "_name_includes_bit_suffix": "function",
            "_name_get": "function"
        },
        "_dtype_ctypes": {
            "_from_ctypes_array": "function",
            "_from_ctypes_structure": "function",
            "_from_ctypes_scalar": "function",
            "_from_ctypes_union": "function",
            "dtype_from_ctypes_type": "function"
        },
        "_exceptions": {
            "_unpack_tuple": "function",
            "_display_as_base": "function",
            "UFuncTypeError": "class",
            "_UFuncBinaryResolutionError": "class",
            "_UFuncNoLoopError": "class",
            "_UFuncCastingError": "class",
            "_UFuncInputCastingError": "class",
            "_UFuncOutputCastingError": "class",
            "TooHardError": "class",
            "AxisError": "class",
            "_ArrayMemoryError": "class"
        },
        "_internal": {
            "IS_PYPY": "variable",
            "_makenames_list": "function",
            "_usefields": "function",
            "_array_descr": "function",
            "_reconstruct": "function",
            "format_re": "variable",
            "sep_re": "variable",
            "space_re": "variable",
            "_convorder": "variable",
            "_commastring": "function",
            "dummy_ctype": "class",
            "_getintp_ctype": "function",
            "_getintp_ctype.cache": "variable",
            "_missing_ctypes": "class",
            "_ctypes": "class",
            "_newnames": "function",
            "_copy_fields": "function",
            "_getfield_is_safe": "function",
            "_view_is_safe": "function",
            "_pep3118_native_map": "variable",
            "_pep3118_native_typechars": "variable",
            "_pep3118_standard_map": "variable",
            "_pep3118_standard_typechars": "variable",
            "_pep3118_unsupported_map": "variable",
            "_Stream": "class",
            "_dtype_from_pep3118": "function",
            "__dtype_from_pep3118": "function",
            "_fix_names": "function",
            "_add_trailing_padding": "function",
            "_prod": "function",
            "_gcd": "function",
            "_lcm": "function",
            "array_ufunc_errmsg_formatter": "function",
            "array_function_errmsg_formatter": "function",
            "_ufunc_doc_signature_formatter": "function",
            "npy_ctypes_check": "function",
            "recursive": "class"
        },
        "_methods": {
            "umr_maximum": "variable",
            "umr_minimum": "variable",
            "umr_sum": "variable",
            "umr_prod": "variable",
            "umr_any": "variable",
            "umr_all": "variable",
            "_complex_to_float": "variable",
            "_amax": "function",
            "_amin": "function",
            "_sum": "function",
            "_prod": "function",
            "_any": "function",
            "_all": "function",
            "_count_reduce_items": "function",
            "_clip_dep_is_scalar_nan": "function",
            "_clip_dep_is_byte_swapped": "function",
            "_clip_dep_invoke_with_casting": "function",
            "_clip": "function",
            "_mean": "function",
            "_var": "function",
            "_std": "function",
            "_ptp": "function",
            "_dump": "function",
            "_dumps": "function"
        },
        "_string_helpers": {
            "_all_chars": "variable",
            "_ascii_upper": "variable",
            "_ascii_lower": "variable",
            "LOWER_TABLE": "variable",
            "UPPER_TABLE": "variable",
            "english_lower": "function",
            "english_upper": "function",
            "english_capitalize": "function"
        },
        "_type_aliases": {
            "sctypeDict": "variable",
            "allTypes": "variable",
            "_abstract_types": "variable",
            "_concrete_typeinfo": "variable",
            "_concrete_types": "variable",
            "_bits_of": "function",
            "bitname": "function",
            "_add_types": "function",
            "_int_ctypes": "variable",
            "_uint_ctypes": "variable",
            "_add_aliases": "function",
            "_add_integer_aliases": "function",
            "void": "variable",
            "_set_up_aliases": "function",
            "sctypes": "variable",
            "_add_array_type": "function",
            "_set_array_types": "function",
            "_toadd": "variable"
        },
        "_ufunc_config": {
            "__all__": "variable",
            "_errdict": "variable",
            "_errdict_rev": "variable",
            "seterr": "function",
            "geterr": "function",
            "setbufsize": "function",
            "getbufsize": "function",
            "seterrcall": "function",
            "geterrcall": "function",
            "_unspecified": "class",
            "_Unspecified": "variable",
            "errstate": "class",
            "_setdef": "function"
        },
        "": {
            "env_added": "variable"
        }
    },
    "distutils": {
        "command": {
            "autodist": {
                "check_inline": "function",
                "check_restrict": "function",
                "check_compiler_gcc": "function",
                "check_gcc_version_at_least": "function",
                "check_gcc_function_attribute": "function",
                "check_gcc_function_attribute_with_intrinsics": "function",
                "check_gcc_variable_attribute": "function"
            },
            "bdist_rpm": {
                "bdist_rpm": "class"
            },
            "build": {
                "build": "class"
            },
            "build_clib": {
                "_l": "variable",
                "build_clib": "class"
            },
            "build_ext": {
                "build_ext ": "class"
            },
            "build_py": {
                "build_py": "class"
            },
            "build_scripts": {
                "build_scripts": "class"
            },
            "build_src": {
                "subst_vars": "function",
                "build_src": "class",
                "_f_pyf_ext_match": "variable",
                "_header_ext_match": "variable",
                "_swig_module_name_match": "variable",
                "_has_c_header": "variable",
                "_has_cpp_header": "variable",
                "get_swig_target": "function",
                "get_swig_modulename": "function",
                "_find_swig_target": "function",
                "_f2py_module_name_match": "variable",
                "_f2py_user_module_name_match": "variable",
                "get_f2py_modulename": "function"
            },
            "config": {
                "LANG_EXT['f77']": "variable",
                "LANG_EXT['f90']": "variable",
                "config": "class",
                "GrabStdout": "class"
            },
            "config_compiler": {
                "show_fortran_compilers": "function",
                "config_fc": "class",
                "config_cc": "class"
            },
            "develop": {
                "develop": "class"
            },
            "egg_info": {
                "egg_info": "class"
            },
            "install": {
                "old_install": "variable",
                "install": "class"
            },
            "install_clib": {
                "install_clib": "class"
            },
            "install_data": {
                "have_setuptools": "variable",
                "install_data ": "class"
            },
            "install_headers": {
                "install_headers ": "class"
            },
            "sdist": {
                "sdist": "class"
            },
            "": {
                "test_na_writable_attributes_deletion": "function",
                "__revision__": "variable",
                "distutils_all": "variable",
                "__all__": "variable"
            }
        },
        "fcompiler": {
            "absoft": {
                "compilers": "variable",
                "AbsoftFCompiler": "class"
            },
            "compaq": {
                "compilers": "variable",
                "CompaqFCompiler": "class",
                "CompaqVisualFCompiler": "class"
            },
            "environment": {
                "__metaclass__": "variable",
                "EnvironmentConfig": "class"
            },
            "fujitsu": {
                "compilers": "variable",
                "FujitsuFCompiler": "class"
            },
            "g95": {
                "compilers": "variable",
                "G95FCompiler": "class"
            },
            "gnu": {
                "compilers": "variable",
                "TARGET_R": "variable",
                "is_win64": "function",
                "GnuFCompiler": "class",
                "Gnu95FCompiler": "class",
                "_can_target": "function"
            },
            "hpux": {
                "compilers": "variable",
                "HPUXFCompiler": "class"
            },
            "ibm": {
                "compilers": "variable",
                "IBMFCompiler": "class"
            },
            "intel": {
                "compilers": "variable",
                "intel_version_match": "function",
                "BaseIntelFCompiler": "class",
                "IntelFCompiler": "class",
                "IntelItaniumFCompiler": "class",
                "IntelEM64TFCompiler": "class",
                "IntelVisualFCompiler": "class",
                "IntelItaniumVisualFCompiler": "class",
                "IntelEM64VisualFCompiler": "class"
            },
            "lahey": {
                "compilers": "variable",
                "LaheyFCompiler": "class"
            },
            "mips": {
                "compilers": "variable",
                "MIPSFCompiler": "class"
            },
            "nag": {
                "compilers": "variable",
                "BaseNAGFCompiler": "class",
                "NAGFCompiler": "class",
                "NAGFORCompiler": "class"
            },
            "none": {
                "compilers": "variable",
                "NoneFCompiler": "class"
            },
            "nv": {
                "compilers": "variable",
                "NVHPCFCompiler": "class"
            },
            "pathf95": {
                "compilers": "variable",
                "PathScaleFCompiler": "class"
            },
            "pg": {
                "compilers": "variable",
                "PGroupFCompiler": "class",
                "PGroupFlangCompiler": "class"
            },
            "sun": {
                "compilers": "variable",
                "SunFCompiler": "class"
            },
            "vast": {
                "compilers": "variable",
                "VastFCompiler": "class"
            },
            "": {
                "__all__": "variable",
                "__metaclass__": "variable",
                "CompilerNotFound": "class",
                "flaglist": "function",
                "str2bool": "function",
                "is_sequence_of_strings": "function",
                "FCompiler": "class",
                "_default_compilers": "variable",
                "fcompiler_class": "variable",
                "fcompiler_aliases": "variable",
                "load_all_fcompiler_classes": "function",
                "_find_existing_fcompiler": "function",
                "available_fcompilers_for_platform": "function",
                "get_default_fcompiler": "function",
                "failed_fcompilers": "variable",
                "new_fcompiler": "function",
                "show_fcompilers": "function",
                "dummy_fortran_file": "function",
                "is_f_file": "variable",
                "_has_f_header": "variable",
                "_has_f90_header": "variable",
                "_has_fix_header": "variable",
                "_free_f90_start": "variable",
                "is_free_format": "function",
                "has_f90_header": "function",
                "_f77flags_re": "variable",
                "get_f77flags": "function"
            }
        },
        "tests": {
            "test_ccompiler_opt": {
                "is_standalone": "variable",
                "arch_compilers": "variable",
                "FakeCCompilerOpt": "class",
                "_Test_CCompilerOpt": "class",
                "new_test": "function"
            },
            "test_ccompiler_opt_conf": {
                "is_standalone": "variable",
                "arch_compilers": "variable",
                "FakeCCompilerOpt": "class",
                "_TestConfFeatures": "class",
                "TestConfFeatures": "class"
            },
            "test_exec_command": {
                "redirect_stdout": "class",
                "redirect_stderr": "class",
                "emulate_nonposix": "class",
                "test_exec_command_stdout": "function",
                "test_exec_command_stderr": "function",
                "TestExecCommand": "class"
            },
            "test_fcompiler": {
                "customizable_flags": "variable",
                "test_fcompiler_flags": "function"
            },
            "test_fcompiler_gnu": {
                "g77_version_strings": "variable",
                "gfortran_version_strings": "variable",
                "TestG77Versions": "class",
                "TestGFortranVersions": "class"
            },
            "test_fcompiler_intel": {
                "intel_32bit_version_strings": "variable",
                "intel_64bit_version_strings": "variable",
                "TestIntelFCompilerVersions": "class",
                "TestIntelEM64TFCompilerVersions": "class"
            },
            "test_fcompiler_nagfor": {
                "nag_version_strings": "variable",
                "TestNagFCompilerVersions": "class"
            },
            "test_from_template": {
                "pyf_src": "variable",
                "normalize_whitespace": "function",
                "test_from_template": "function"
            },
            "test_mingw32ccompiler": {
                "test_build_import": "function"
            },
            "test_misc_util": {
                "ajoin": "variable",
                "TestAppendpath": "class",
                "TestMinrelpath": "class",
                "TestGpaths": "class",
                "TestSharedExtension": "class",
                "test_installed_npymath_ini": "function"
            },
            "test_npy_pkg_config": {
                "simple": "variable",
                "Name": "variable",
                "Description": "variable",
                "Version": "variable",
                "cflags": "variable",
                "libs": "variable",
                "simple_variable_d": "variable",
                "TestLibraryInfo": "class",
                "TestParseFlags": "class"
            },
            "test_shell_utils": {
                "argv_cases": "variable",
                "Parser": "function",
                "runner": "function",
                "test_join_matches_subprocess": "function",
                "test_roundtrip": "function"
            },
            "test_system_info": {
                "get_class": "function",
                "simple_site": "variable",
                "library_dirs": "variable",
                "libraries": "variable",
                "extra_compile_args": "variable",
                "runtime_library_dirs": "variable",
                "extra_link_args": "variable",
                "rpath": "variable",
                "mylib_libs": "variable",
                "have_compiler": "function",
                "HAVE_COMPILER": "variable",
                "_system_info": "class",
                "Temp1Info": "class",
                "Temp2Info": "class",
                "DuplicateOptionInfo": "class",
                "TestSystemInfoReading": "class",
                "test_distutils_parse_env_order": "function"
            }
        },
        "ccompiler": {
            "_job_semaphore": "variable",
            "_global_lock": "variable",
            "_processing_files": "variable",
            "_needs_build": "function",
            "replace_method": "function",
            "CCompiler_find_executables": "function",
            "CCompiler_spawn": "function",
            "CCompiler_object_filenames": "function",
            "CCompiler_compile": "function",
            "CCompiler_customize_cmd": "function",
            "_compiler_to_string": "function",
            "CCompiler_show_customization": "function",
            "CCompiler_customize": "function",
            "simple_version_match": "function",
            "CCompiler_get_version": "function",
            "CCompiler_cxx_compiler": "function",
            "compiler_class['intel']": "variable",
            "compiler_class['intele']": "variable",
            "compiler_class['intelem']": "variable",
            "compiler_class['intelw']": "variable",
            "compiler_class['intelemw']": "variable",
            "compiler_class['pathcc']": "variable",
            "_distutils_new_compiler": "variable",
            "new_compiler ": "function",
            "ccompiler.new_compiler": "variable",
            "_distutils_gen_lib_options": "variable",
            "gen_lib_options": "function",
            "ccompiler.gen_lib_options": "variable"
        },
        "conv_template": {
            "__all__": "variable",
            "global_names": "variable",
            "header": "variable",
            "parse_structure": "function",
            "paren_repl": "function",
            "parenrep": "variable",
            "plainrep": "variable",
            "parse_values": "function",
            "stripast": "variable",
            "named_re": "variable",
            "exclude_vars_re": "variable",
            "exclude_re": "variable",
            "parse_loop_header": "function",
            "replace_re": "variable",
            "parse_string": "function",
            "process_str": "function",
            "include_src_re": "variable",
            "resolve_includes": "function",
            "process_file": "function",
            "unique_key": "function",
            "main": "function"
        },
        "core": {
            "numpy_cmdclass": "variable",
            "_dict_append": "function",
            "_command_line_ok": "function",
            "get_distribution": "function",
            "setup": "function",
            "_check_append_library": "function",
            "_check_append_ext_library": "function"
        },
        "cpuinfo": {
            "__all__": "variable",
            "getoutput": "function",
            "command_info": "function",
            "command_by_line": "function",
            "key_value_from_command": "function",
            "CPUInfoBase": "class",
            "LinuxCPUInfo": "class",
            "IRIXCPUInfo": "class",
            "DarwinCPUInfo": "class",
            "SunOSCPUInfo": "class",
            "Win32CPUInfo": "class",
            "cpu": "variable"
        },
        "exec_command": {
            "__all__": "variable",
            "filepath_from_subprocess_output": "function",
            "forward_bytes_to_stdout": "function",
            "temp_file_name": "function",
            "get_pythonexe": "function",
            "find_executable": "function",
            "_preserve_environment": "function",
            "_update_environment": "function",
            "exec_command": "function",
            "_exec_command": "function",
            "_quote_arg": "function"
        },
        "extension": {
            "cxx_ext_re": "variable",
            "fortran_pyf_ext_re": "variable",
            "Extension": "class"
        },
        "from_template": {
            "__all__": "variable",
            "routine_start_re": "variable",
            "routine_end_re": "variable",
            "function_start_re": "variable",
            "parse_structure": "function",
            "template_re": "variable",
            "named_re": "variable",
            "list_re": "variable",
            "find_repl_patterns": "function",
            "find_and_remove_repl_patterns": "function",
            "item_re": "variable",
            "conv": "function",
            "unique_key": "function",
            "template_name_re": "variable",
            "expand_sub": "function",
            "process_str": "function",
            "include_src_re": "variable",
            "resolve_includes": "function",
            "process_file": "function",
            "_special_names": "variable"
        },
        "intelccompiler": {
            "IntelCCompiler": "class",
            "IntelItaniumCCompiler": "class",
            "IntelEM64TCCompiler": "class"
        },
        "lib2def": {
            "__doc__": "variable",
            "FUNC_RE": "variable",
            "DATA_RE": "variable",
            "parse_cmd": "function",
            "getnm": "function",
            "nm_output": "variable",
            "parse_nm": "function",
            "output_def": "function"
        },
        "line_endings": {
            "dos2unix": "function",
            "dos2unix_one_dir": "function",
            "dos2unix_dir": "function",
            "unix2dos": "function",
            "unix2dos_one_dir": "function",
            "unix2dos_dir": "function"
        },
        "log": {
            "_fix_args": "function",
            "Log": "class",
            "_global_log.__class__": "variable",
            "good": "variable",
            "set_threshold": "function",
            "get_threshold": "function",
            "set_verbosity": "function",
            "_global_color_map": "variable"
        },
        "mingw32ccompiler": {
            "get_msvcr_replacement": "function",
            "distutils.cygwinccompiler.get_msvcr": "variable",
            "_START": "variable",
            "_TABLE": "variable",
            "Mingw32CCompiler": "class",
            "find_python_dll": "function",
            "dump_table": "function",
            "generate_def": "function",
            "find_dll": "function",
            "build_msvcr_library": "function",
            "build_import_library": "function",
            "_check_for_import_lib": "function",
            "_build_import_library_amd64": "function",
            "_build_import_library_x86": "function",
            "_MSVCRVER_TO_FULLVER": "variable",
            "msvc_manifest_xml": "function",
            "manifest_rc": "function",
            "check_embedded_msvcr_match_linked": "function",
            "configtest_name": "function",
            "manifest_name": "function",
            "rc_name": "function",
            "generate_manifest": "function"
        },
        "misc_util": {
            "_tdata": "variable",
            "_tmpdirs": "variable",
            "clean_up_temporary_directory": "function",
            "__all__": "variable",
            "InstallableLib": "class",
            "get_num_build_jobs": "function",
            "quote_args": "function",
            "allpath": "function",
            "rel_path": "function",
            "get_path_from_frame": "function",
            "njoin": "function",
            "get_mathlibs": "function",
            "minrelpath": "function",
            "sorted_glob": "function",
            "_fix_paths": "function",
            "gpaths": "function",
            "make_temp_file": "function",
            "terminal_has_colors": "function",
            "default_text": "function",
            "red_text": "function",
            "green_text": "function",
            "yellow_text": "function",
            "cyan_text": "function",
            "blue_text": "function",
            "cyg2win32": "function",
            "mingw32": "function",
            "msvc_runtime_version": "function",
            "msvc_runtime_library": "function",
            "msvc_runtime_major": "function",
            "cxx_ext_match": "variable",
            "fortran_ext_match": "variable",
            "f90_ext_match": "variable",
            "f90_module_name_match": "variable",
            "_get_f90_modules": "function",
            "is_string": "function",
            "all_strings": "function",
            "is_sequence": "function",
            "is_glob_pattern": "function",
            "as_list": "function",
            "get_language": "function",
            "has_f_sources": "function",
            "has_cxx_sources": "function",
            "filter_sources": "function",
            "_get_headers": "function",
            "_get_directories": "function",
            "_commandline_dep_string": "function",
            "get_dependencies": "function",
            "is_local_src_dir": "function",
            "general_source_files": "function",
            "general_source_directories_files": "function",
            "get_ext_source_files": "function",
            "get_script_files": "function",
            "get_lib_source_files": "function",
            "get_shared_lib_extension": "function",
            "get_data_files": "function",
            "dot_join": "function",
            "get_frame": "function",
            "Configuration": "class",
            "get_cmd": "function",
            "get_numpy_include_dirs": "function",
            "get_npy_pkg_dir": "function",
            "get_pkg_info": "function",
            "get_info": "function",
            "is_bootstrapping": "function",
            "default_config_dict": "function",
            "dict_append": "function",
            "appendpath": "function",
            "generate_config_py": "function",
            "msvc_version": "function",
            "get_build_architecture": "function"
        },
        "msvc9compiler": {
            "_merge": "function",
            "MSVCCompiler": "class"
        },
        "msvccompiler": {
            "_merge": "function",
            "MSVCCompiler": "class"
        },
        "npy_pkg_config": {
            "__all__": "variable",
            "_VAR": "variable",
            "FormatError": "class",
            "PkgNotFound": "class",
            "parse_flags": "function",
            "_escape_backslash": "function",
            "LibraryInfo": "class",
            "VariableSet": "class",
            "parse_meta": "function",
            "parse_variables": "function",
            "parse_sections": "function",
            "pkg_to_filename": "function",
            "parse_config": "function",
            "_read_config_imp": "function",
            "_CACHE": "variable",
            "read_config": "function"
        },
        "numpy_distribution": {
            "NumpyDistribution": "class"
        },
        "pathccompiler": {
            "PathScaleCCompiler": "class"
        },
        "setup": {
            "configuration": "function"
        },
        "system_info": {
            "__all__": "variable",
            "_bits": "variable",
            "platform_bits": "variable",
            "global_compiler": "variable",
            "customized_ccompiler": "function",
            "_c_string_literal": "function",
            "libpaths": "function",
            "default_lib_dirs": "variable",
            "default_runtime_dirs": "variable",
            "default_include_dirs": "variable",
            "default_src_dirs": "variable",
            "so_ext": "variable",
            "is_symlink_to_accelerate": "function",
            "_accel_msg": "variable",
            "get_standard_file": "function",
            "_parse_env_order": "function",
            "get_info": "function",
            "NotFoundError": "class",
            "AliasedOptionError": "class",
            "AtlasNotFoundError": "class",
            "FlameNotFoundError": "class",
            "LapackNotFoundError": "class",
            "LapackSrcNotFoundError": "class",
            "LapackILP64NotFoundError": "class",
            "BlasOptNotFoundError": "class",
            "BlasNotFoundError": "class",
            "BlasILP64NotFoundError": "class",
            "BlasSrcNotFoundError": "class",
            "FFTWNotFoundError": "class",
            "DJBFFTNotFoundError": "class",
            "NumericNotFoundError": "class",
            "X11NotFoundError": "class",
            "UmfpackNotFoundError": "class",
            "system_info": "class",
            "fft_opt_info": "class",
            "fftw_info": "class",
            "fftw2_info": "class",
            "fftw3_info": "class",
            "dfftw_info": "class",
            "sfftw_info": "class",
            "fftw_threads_info": "class",
            "dfftw_threads_info": "class",
            "sfftw_threads_info": "class",
            "djbfft_info": "class",
            "mkl_info": "class",
            "lapack_mkl_info": "class",
            "blas_mkl_info": "class",
            "atlas_info": "class",
            "atlas_blas_info": "class",
            "atlas_threads_info": "class",
            "atlas_blas_threads_info": "class",
            "lapack_atlas_info": "class",
            "lapack_atlas_threads_info": "class",
            "atlas_3_10_info": "class",
            "atlas_3_10_blas_info": "class",
            "atlas_3_10_threads_info": "class",
            "atlas_3_10_blas_threads_info": "class",
            "lapack_atlas_3_10_info": "class",
            "lapack_atlas_3_10_threads_info": "class",
            "lapack_info": "class",
            "lapack_src_info": "class",
            "atlas_version_c_text": "variable"
        },
        "unixccompiler": {
            "UnixCCompiler__compile": "function",
            "UnixCCompiler_create_static_lib": "function"
        },
        "_shell_utils": {
            "__all__": "variable",
            "CommandLineParser": "class",
            "WindowsParser": "class",
            "PosixParser": "class"
        },
        "__config__": {
            "__all__": "variable",
            "extra_dll_dir": "variable",
            "get_info": "function",
            "show": "function"
        },
        "": {
            "customized_fcompiler": "function",
            "customized_ccompiler": "function"
        }
    },
    "doc": {
        "constants": {
            "constants": "variable",
            "add_newdoc": "function"
        },
        "": {
            "ref_dir": "variable",
            "__all__": "variable",
            "__doc__": "variable"
        }
    },
    "f2py": {
        "tests": {
            "test_array_from_pyobj": {
                "wrap": "variable",
                "setup_module": "function",
                "flags_info": "function",
                "flags2names": "function",
                "Intent": "class",
                "intent": "variable",
                "_type_names": "variable",
                "_cast_dict": "variable",
                "_cast_dict['BYTE']": "variable",
                "_cast_dict['UBYTE']": "variable",
                "_cast_dict['SHORT']": "variable",
                "_cast_dict['USHORT']": "variable",
                "_cast_dict['INT']": "variable",
                "_cast_dict['UINT']": "variable",
                "_cast_dict['LONG']": "variable",
                "_cast_dict['ULONG']": "variable",
                "_cast_dict['LONGLONG']": "variable",
                "_cast_dict['ULONGLONG']": "variable",
                "_cast_dict['FLOAT']": "variable",
                "_cast_dict['DOUBLE']": "variable",
                "_cast_dict['CFLOAT']": "variable",
                "Type": "class",
                "Array": "class",
                "TestIntent": "class",
                "TestSharedMemory": "class"
            },
            "test_assumed_shape": {
                "_path": "function",
                "TestAssumedShapeSumExample": "class",
                "TestF2cmapOption": "class"
            },
            "test_block_docstring": {
                "TestBlockDocString": "class"
            },
            "test_callback": {
                "TestF77Callback": "class",
                "TestF77CallbackPythonTLS": "class",
                "TestF90Callback": "class",
                "TestGH18335": "class"
            },
            "test_common": {
                "_path": "function",
                "TestCommonBlock": "class"
            },
            "test_compile_function": {
                "setup_module": "function",
                "test_f2py_init_compile": "function",
                "test_f2py_init_compile_failure": "function",
                "test_f2py_init_compile_bad_cmd": "function",
                "test_compile_from_strings": "function"
            },
            "test_crackfortran": {
                "TestNoSpace": "class",
                "TestPublicPrivate": "class",
                "TestExternal": "class"
            },
            "test_kind": {
                "_path": "function",
                "TestKind": "class"
            },
            "test_mixed": {
                "_path": "function",
                "TestMixed": "class"
            },
            "test_module_doc": {
                "_path": "function",
                "TestModuleDocString": "class"
            },
            "test_parameter": {
                "_path": "function",
                "TestParameters": "class"
            },
            "test_quoted_character": {
                "TestQuotedCharacter": "class"
            },
            "test_regression": {
                "_path": "function",
                "TestIntentInOut": "class",
                "TestNumpyVersionAttribute": "class"
            },
            "test_return_character": {
                "IS_S390X": "variable",
                "TestReturnCharacter": "class",
                "TestF77ReturnCharacter": "class",
                "TestF90ReturnCharacter": "class"
            },
            "test_return_complex": {
                "TestReturnComplex": "class",
                "TestF77ReturnComplex": "class",
                "TestF90ReturnComplex": "class"
            },
            "test_return_integer": {
                "TestReturnInteger": "class",
                "TestF77ReturnInteger": "class",
                "TestF90ReturnInteger": "class"
            },
            "test_return_logical": {
                "TestReturnLogical": "class",
                "TestF77ReturnLogical": "class",
                "TestF90ReturnLogical": "class"
            },
            "test_return_real": {
                "TestReturnReal": "class",
                "TestCReturnReal": "class",
                "TestF77ReturnReal": "class",
                "TestF90ReturnReal": "class"
            },
            "test_semicolon_split": {
                "TestMultiline": "class"
            },
            "test_size": {
                "_path": "function",
                "TestSizeSumExample": "class"
            },
            "test_string": {
                "_path": "function",
                "TestString": "class"
            },
            "util": {
                "_module_dir": "variable",
                "_module_num": "variable",
                "_cleanup": "function",
                "get_module_dir": "function",
                "get_temp_module_name": "function",
                "_memoize": "function",
                "build_module": "function",
                "build_code": "function",
                "_compiler_status": "variable",
                "_get_compiler_status": "function",
                "has_c_compiler": "function",
                "has_f77_compiler": "function",
                "has_f90_compiler": "function",
                "build_module_distutils": "function",
                "F2PyTest": "class"
            }
        },
        "auxfuncs": {
            "__all__": "variable",
            "f2py_version": "variable",
            "errmess": "variable",
            "show": "variable",
            "options": "variable",
            "debugoptions": "variable",
            "wrapfuncs": "variable",
            "outmess": "function",
            "debugcapi": "function",
            "_isstring": "function",
            "isstring": "function",
            "ischaracter": "function",
            "isstringarray": "function",
            "isarrayofstrings": "function",
            "isarray": "function",
            "isscalar": "function",
            "iscomplex": "function",
            "islogical": "function",
            "isinteger": "function",
            "isreal": "function",
            "get_kind": "function",
            "islong_long": "function",
            "isunsigned_char": "function",
            "isunsigned_short": "function",
            "isunsigned": "function",
            "isunsigned_long_long": "function",
            "isdouble": "function",
            "islong_double": "function",
            "islong_complex": "function",
            "iscomplexarray": "function",
            "isint1array": "function",
            "isunsigned_chararray": "function",
            "isunsigned_shortarray": "function",
            "isunsignedarray": "function",
            "isunsigned_long_longarray": "function",
            "issigned_chararray": "function",
            "issigned_shortarray": "function",
            "issigned_array": "function",
            "issigned_long_longarray": "function",
            "isallocatable": "function",
            "ismutable": "function",
            "ismoduleroutine": "function",
            "ismodule": "function",
            "isfunction": "function",
            "isfunction_wrap": "function",
            "issubroutine": "function",
            "issubroutine_wrap": "function",
            "hasassumedshape": "function",
            "requiresf90wrapper": "function",
            "isroutine": "function",
            "islogicalfunction": "function",
            "islong_longfunction": "function",
            "islong_doublefunction": "function",
            "iscomplexfunction": "function",
            "iscomplexfunction_warn": "function",
            "isstringfunction": "function",
            "hasexternals": "function",
            "isthreadsafe": "function",
            "hasvariables": "function",
            "isoptional": "function",
            "isexternal": "function",
            "isrequired": "function",
            "isintent_in": "function",
            "isintent_inout": "function",
            "isintent_out": "function",
            "isintent_hide": "function",
            "isintent_nothide": "function",
            "isintent_c": "function",
            "isintent_cache": "function",
            "isintent_copy": "function",
            "isintent_overwrite": "function",
            "isintent_callback": "function",
            "isintent_inplace": "function",
            "isintent_aux": "function",
            "isintent_aligned4": "function",
            "isintent_aligned8": "function",
            "isintent_aligned16": "function",
            "isintent_dict": "variable",
            "isprivate": "function",
            "hasinitvalue": "function",
            "hasinitvalueasstring": "function",
            "hasnote": "function",
            "hasresultnote": "function",
            "hascommon": "function",
            "containscommon": "function",
            "containsmodule": "function",
            "hasbody": "function",
            "hascallstatement": "function",
            "istrue": "function",
            "isfalse": "function",
            "F2PYError": "class",
            "throw_error": "class",
            "l_and": "function",
            "l_or": "function",
            "l_not": "function",
            "isdummyroutine": "function",
            "getfortranname": "function",
            "getmultilineblock": "function",
            "getcallstatement": "function",
            "getcallprotoargument": "function",
            "getusercode": "function",
            "getusercode1": "function",
            "getpymethoddef": "function",
            "getargs": "function",
            "getargs2": "function",
            "getrestdoc": "function",
            "gentitle": "function",
            "flatlist": "function",
            "stripcomma": "function",
            "replace": "function",
            "dictappend": "function",
            "applyrules": "function"
        },
        "capi_maps": {
            "f2py_version": "variable",
            "__all__": "variable",
            "using_newcore": "variable",
            "depargs": "variable",
            "lcb_map": "variable",
            "lcb2_map": "variable",
            "c2py_map": "variable",
            "c2capi_map": "variable",
            "c2pycode_map": "variable",
            "c2buildvalue_map": "variable",
            "f2cmap_all": "variable",
            "f2cmap_default": "variable",
            "load_f2cmap_file": "function",
            "cformat_map": "variable",
            "getctype": "function",
            "getstrlength": "function",
            "getarrdims": "function",
            "getpydocsign": "function",
            "getarrdocsign": "function",
            "getinit": "function",
            "sign2map": "function",
            "routsign2map": "function",
            "modsign2map": "function",
            "cb_sign2map": "function",
            "cb_routsign2map": "function",
            "common_sign2map": "function"
        },
        "cb_rules": {
            "f2py_version": "variable",
            "cb_routine_rules": "variable",
            "cb_arg_rules": "variable",
            "cb_map": "variable",
            "buildcallbacks": "function",
            "buildcallback": "function"
        },
        "cfuncs": {
            "f2py_version": "variable",
            "errmess": "variable",
            "outneeds": "variable",
            "needs": "variable",
            "includes0": "variable",
            "includes": "variable",
            "userincludes": "variable",
            "typedefs": "variable",
            "typedefs_generated": "variable",
            "cppmacros": "variable",
            "cfuncs": "variable",
            "callbacks": "variable",
            "f90modhooks": "variable",
            "commonhooks": "variable",
            "includes0['math.h']": "variable",
            "includes0['string.h']": "variable",
            "includes0['setjmp.h']": "variable",
            "includes['Python.h']": "variable",
            "needs['arrayobject.h']": "variable",
            "includes['arrayobject.h']": "variable",
            "includes['stdarg.h']": "variable",
            "typedefs['unsigned_char']": "variable",
            "typedefs['unsigned_short']": "variable",
            "typedefs['unsigned_long']": "variable",
            "typedefs['signed_char']": "variable",
            "typedefs['long_long']": "variable",
            "typedefs['long_double']": "variable",
            "cppmacros['F_FUNC']": "variable",
            "cppmacros['F_MODFUNC']": "variable",
            "cppmacros['SWAP']": "variable",
            "cppmacros['MINMAX']": "variable",
            "needs['f2py_size']": "variable",
            "cfuncs['f2py_size']": "variable",
            "needs['pyobj_from_long_double1']": "variable",
            "needs['pyobj_from_complex_long_double1']": "variable",
            "needs['pyobj_from_complex_double1']": "variable",
            "needs['pyobj_from_complex_float1']": "variable",
            "needs['pyobj_from_string1']": "variable",
            "needs['pyobj_from_string1size']": "variable",
            "needs['TRYPYARRAYTEMPLATE']": "variable",
            "cppmacros['TRYPYARRAYTEMPLATE']": "variable",
            "needs['GETSTRFROMPYTUPLE']": "variable",
            "cppmacros['GETSTRFROMPYTUPLE']": "variable",
            "cppmacros['FAILNULL']": "variable",
            "cppmacros['STRINGMALLOC']": "variable",
            "needs['STRINGCOPYN']": "variable",
            "cppmacros['STRINGCOPYN']": "variable",
            "cppmacros['CHECKGENERIC']": "variable",
            "cppmacros['CHECKARRAY']": "variable",
            "cppmacros['CHECKSTRING']": "variable",
            "cppmacros['CHECKSCALAR']": "variable",
            "cppmacros['OLDPYNUM']": "variable",
            "cfuncs['calcarrindex']": "variable",
            "cfuncs['calcarrindextr']": "variable",
            "cfuncs['forcomb']": "variable",
            "needs['try_pyarr_from_string']": "variable",
            "cfuncs['try_pyarr_from_string']": "variable",
            "needs['char_from_pyobj']": "variable",
            "cfuncs['char_from_pyobj']": "variable",
            "needs['short_from_pyobj']": "variable",
            "cfuncs['short_from_pyobj']": "variable",
            "cfuncs['long_from_pyobj']": "variable",
            "needs['long_double_from_pyobj']": "variable",
            "cfuncs['long_double_from_pyobj']": "variable",
            "needs['float_from_pyobj']": "variable",
            "cfuncs['float_from_pyobj']": "variable",
            "needs['complex_double_from_pyobj']": "variable",
            "cfuncs['complex_double_from_pyobj']": "variable",
            "needs['try_pyarr_from_char']": "variable",
            "needs['try_pyarr_from_signed_char']": "variable",
            "needs['try_pyarr_from_short']": "variable",
            "needs['try_pyarr_from_int']": "variable",
            "needs['try_pyarr_from_long']": "variable",
            "needs['try_pyarr_from_long_long']": "variable",
            "needs['try_pyarr_from_float']": "variable",
            "needs['try_pyarr_from_double']": "variable",
            "needs['try_pyarr_from_complex_float']": "variable",
            "needs['try_pyarr_from_complex_double']": "variable",
            "needs['create_cb_arglist']": "variable",
            "cfuncs['create_cb_arglist']": "variable"
        },
        "common_rules": {
            "f2py_version": "variable",
            "findcommonblocks": "function",
            "buildhooks": "function"
        },
        "crackfortran": {
            "f2py_version": "variable",
            "strictf77": "variable",
            "sourcecodeform": "variable",
            "quiet": "variable",
            "verbose": "variable",
            "tabchar": "variable",
            "pyffilename": "variable",
            "f77modulename": "variable",
            "skipemptyends": "variable",
            "ignorecontains": "variable",
            "dolowercase": "variable",
            "debug": "variable",
            "beginpattern": "variable",
            "currentfilename": "variable",
            "expectbegin": "variable",
            "f90modulevars": "variable",
            "filepositiontext": "variable",
            "gotnextfile": "variable",
            "groupcache": "variable",
            "groupcounter": "variable",
            "grouplist": "variable",
            "groupname": "variable",
            "include_paths": "variable",
            "neededmodule": "variable",
            "onlyfuncs": "variable",
            "previous_context": "variable",
            "skipblocksuntil": "variable",
            "skipfuncs": "variable",
            "skipfunctions": "variable",
            "usermodules": "variable",
            "reset_global_f2py_vars": "function",
            "outmess": "function",
            "re._MAXCACHE": "variable",
            "defaultimplicitrules": "variable",
            "badnames": "variable",
            "invbadnames": "variable",
            "rmbadname1": "function",
            "rmbadname": "function",
            "undo_rmbadname1": "function",
            "undo_rmbadname": "function",
            "getextension": "function",
            "is_f_file": "variable",
            "_has_f_header": "variable",
            "_has_f90_header": "variable",
            "_has_fix_header": "variable",
            "_free_f90_start": "variable",
            "is_free_format": "function",
            "readfortrancode": "function",
            "beforethisafter": "variable",
            "fortrantypes": "variable",
            "typespattern": "variable",
            "typespattern4implicit": "variable",
            "functionpattern": "variable",
            "subroutinepattern": "variable",
            "groupbegins77": "variable",
            "beginpattern77": "variable",
            "groupbegins90": "variable",
            "beginpattern90": "variable",
            "groupends": "variable",
            "endpattern": "variable",
            "endifs": "variable",
            "endifpattern": "variable",
            "implicitpattern": "variable",
            "dimensionpattern": "variable",
            "externalpattern": "variable",
            "optionalpattern": "variable",
            "requiredpattern": "variable",
            "publicpattern": "variable",
            "privatepattern": "variable",
            "intrinsicpattern": "variable",
            "intentpattern": "variable",
            "parameterpattern": "variable",
            "datapattern": "variable",
            "callpattern": "variable",
            "entrypattern": "variable",
            "callfunpattern": "variable",
            "commonpattern": "variable",
            "usepattern": "variable",
            "containspattern": "variable",
            "formatpattern": "variable",
            "f2pyenhancementspattern": "variable",
            "multilinepattern": "variable",
            "split_by_unquoted": "function",
            "_simplifyargs": "function",
            "crackline_re_1": "variable",
            "crackline": "function",
            "markouterparen": "function",
            "markoutercomma": "function",
            "unmarkouterparen": "function",
            "appenddecl": "function",
            "selectpattern": "variable",
            "nameargspattern": "variable",
            "callnameargspattern": "variable",
            "real16pattern": "variable",
            "real8pattern": "variable",
            "_intentcallbackpattern": "variable",
            "_is_intent_callback": "function",
            "_resolvenameargspattern": "function",
            "analyzeline": "function",
            "appendmultiline": "function",
            "cracktypespec0": "function",
            "namepattern": "variable",
            "kindselector": "variable",
            "charselector": "variable",
            "lenkindpattern": "variable",
            "lenarraypattern": "variable",
            "removespaces": "function",
            "markinnerspaces": "function",
            "updatevars": "function",
            "cracktypespec": "function",
            "setattrspec": "function",
            "setkindselector": "function",
            "setcharselector": "function",
            "getblockname": "function",
            "setmesstext": "function",
            "get_usedict": "function",
            "get_useparameters": "function",
            "postcrack2": "function",
            "postcrack": "function",
            "sortvarnames": "function",
            "analyzecommon": "function",
            "analyzebody": "function",
            "buildimplicitrules": "function",
            "myeval": "function",
            "getlincoef_re_1": "variable",
            "getlincoef": "function",
            "_varname_match": "variable",
            "getarrlen": "function",
            "word_pattern": "variable",
            "_get_depend_dict": "function",
            "_calc_depend_dict": "function",
            "get_sorted_names": "function",
            "_kind_func": "function",
            "_selected_int_kind_func": "function",
            "_selected_real_kind_func": "function",
            "get_parameters": "function",
            "_eval_length": "function",
            "_is_kind_number": "variable",
            "_eval_scalar": "function",
            "analyzevars": "function",
            "analyzeargs_re_1": "variable",
            "expr2name": "function",
            "analyzeargs": "function",
            "determineexprtype_re_1": "variable",
            "determineexprtype_re_2": "variable",
            "determineexprtype_re_3": "variable",
            "determineexprtype_re_4": "variable",
            "determineexprtype_re_5": "variable",
            "_ensure_exprdict": "function",
            "determineexprtype": "function",
            "crack2fortrangen": "function",
            "common2fortran": "function",
            "use2fortran": "function",
            "true_intent_list": "function",
            "vars2fortran": "function",
            "crackfortran": "function",
            "crack2fortran": "function"
        },
        "diagnose": {
            "run_command": "function",
            "run": "function"
        },
        "f2py2e": {
            "f2py_version": "variable",
            "numpy_version": "variable",
            "errmess": "variable",
            "show": "variable",
            "outmess": "variable",
            "__usage__": "variable",
            "scaninputline": "function",
            "callcrackfortran": "function",
            "buildmodules": "function",
            "dict_append": "function",
            "run_main": "function",
            "filter_files": "function",
            "get_prefix": "function",
            "run_compile": "function",
            "main": "function"
        },
        "f2py_testing": {
            "cmdline": "function",
            "run": "function"
        },
        "f90mod_rules": {
            "__version__": "variable",
            "f2py_version": "variable",
            "options": "variable",
            "findf90modules": "function",
            "fgetdims1": "variable",
            "fgetdims2": "variable",
            "fgetdims2_sa": "variable",
            "buildhooks": "function"
        },
        "func2subr": {
            "__version__": "variable",
            "f2py_version": "variable",
            "var2fixfortran": "function",
            "createfuncwrapper": "function",
            "createsubrwrapper": "function",
            "assubr": "function"
        },
        "rules": {
            "f2py_version": "variable",
            "numpy_version": "variable",
            "options": "variable",
            "sepdict": "variable",
            "generationtime": "variable",
            "module_rules": "variable",
            "defmod_rules": "variable",
            "routine_rules": "variable",
            "rout_rules": "variable",
            "\\t\\t\\tf2py_success": "variable",
            "\\t\\tf2py_success": "variable",
            "/*\\t#name#_return_value": "variable",
            "typedef_need_dict": "variable",
            "aux_rules": "variable",
            "arg_rules": "variable",
            "\\t\\t\\t\\t#varname#[capi_i++]": "variable",
            "check_rules": "variable",
            "buildmodule": "function",
            "stnd": "variable",
            "buildapi": "function"
        },
        "setup": {
            "configuration": "function"
        },
        "use_rules": {
            "__version__": "variable",
            "f2py_version": "variable",
            "usemodule_rules": "variable"
        },
        "": {
            "__all__": "variable",
            "run_main": "variable",
            "main": "variable",
            "compile": "function"
        }
    },
    "fft": {
        "tests": {
            "test_helper": {
                "TestFFTShift": "class",
                "TestFFTFreq": "class",
                "TestRFFTFreq": "class",
                "TestIRFFTN": "class"
            },
            "test_pocketfft": {
                "fft1": "function",
                "TestFFTShift": "class",
                "TestFFT1D": "class",
                "test_fft_with_order": "function",
                "TestFFTThreadSafe": "class"
            }
        },
        "helper": {
            "__all__": "variable",
            "integer_types": "variable",
            "_fftshift_dispatcher": "function",
            "fftshift": "function",
            "ifftshift": "function",
            "fftfreq": "function",
            "rfftfreq": "function"
        },
        "setup": {
            "configuration": "function"
        },
        "_pocketfft": {
            "__all__": "variable",
            "array_function_dispatch": "variable",
            "_raw_fft": "function",
            "_get_forward_norm": "function",
            "_get_backward_norm": "function",
            "_SWAP_DIRECTION_MAP": "variable",
            "_swap_direction": "function",
            "_fft_dispatcher": "function",
            "fft": "function",
            "ifft": "function",
            "rfft": "function",
            "irfft": "function",
            "hfft": "function",
            "ihfft": "function",
            "_cook_nd_args": "function",
            "_raw_fftnd": "function",
            "_fftn_dispatcher": "function",
            "fftn": "function",
            "ifftn": "function",
            "fft2": "function",
            "ifft2": "function",
            "rfftn": "function",
            "rfft2": "function",
            "irfftn": "function",
            "irfft2": "function"
        },
        "": {
            "test": "variable"
        }
    },
    "lib": {
        "tests": {
            "test_arraypad": {
                "_numeric_dtypes": "variable",
                "_all_modes": "variable",
                "TestAsPairs": "class",
                "TestConditionalShortcuts": "class",
                "TestStatistic": "class",
                "TestConstant": "class",
                "TestLinearRamp": "class",
                "TestReflect": "class",
                "TestEmptyArray": "class",
                "TestSymmetric": "class",
                "TestWrap": "class",
                "TestEdge": "class",
                "TestEmpty": "class",
                "test_legacy_vector_functionality": "function",
                "test_unicode_mode": "function",
                "test_object_input": "function",
                "TestPadWidth": "class",
                "test_kwargs": "function",
                "test_constant_zero_default": "function",
                "test_unsupported_mode": "function",
                "test_non_contiguous_array": "function",
                "test_memory_layout_persistence": "function",
                "test_dtype_persistence": "function"
            },
            "test_arraysetops": {
                "TestSetOps": "class",
                "TestUnique": "class"
            },
            "test_arrayterator": {
                "test": "function"
            },
            "test_financial_expired": {
                "test_financial_expired": "function"
            },
            "test_format": {
                "scalars": "variable",
                "basic_arrays": "variable",
                "Pdescr": "variable",
                "PbufferT": "variable",
                "Ndescr": "variable",
                "NbufferT": "variable",
                "record_arrays": "variable",
                "BytesIOSRandomSize": "class",
                "roundtrip": "function",
                "roundtrip_randsize": "function",
                "roundtrip_truncated": "function",
                "assert_equal_": "function",
                "test_roundtrip": "function",
                "test_roundtrip_randsize": "function",
                "test_roundtrip_truncated": "function",
                "test_long_str": "function",
                "test_memmap_roundtrip": "function",
                "test_compressed_roundtrip": "function",
                "dt1": "variable",
                "dt2": "variable",
                "dt3": "variable",
                "dt4": "variable",
                "dt5": "variable",
                "dt6": "variable",
                "test_load_padded_dtype": "function",
                "test_python2_python3_interoperability": "function",
                "test_pickle_python2_python3": "function",
                "test_pickle_disallow": "function",
                "test_descr_to_dtype": "function",
                "test_version_2_0": "function",
                "test_version_2_0_memmap": "function",
                "test_write_version": "function",
                "bad_version_magic": "variable",
                "malformed_magic": "variable",
                "test_read_magic": "function",
                "test_read_magic_bad_magic": "function",
                "test_read_version_1_0_bad_magic": "function",
                "test_bad_magic_args": "function",
                "test_large_header": "function",
                "test_read_array_header_1_0": "function",
                "test_read_array_header_2_0": "function",
                "test_bad_header": "function",
                "test_large_file_support": "function",
                "test_large_archive": "function",
                "test_empty_npz": "function",
                "test_unicode_field_names": "function",
                "test_metadata_dtype": "function"
            },
            "test_function_base": {
                "get_mat": "function",
                "_make_complex": "function",
                "TestRot90": "class",
                "TestFlip": "class",
                "TestAny": "class",
                "TestAll": "class",
                "TestCopy": "class",
                "TestAverage": "class",
                "TestSelect": "class",
                "TestInsert": "class",
                "TestAmax": "class",
                "TestAmin": "class",
                "TestPtp": "class",
                "TestCumsum": "class",
                "TestProd": "class",
                "TestCumprod": "class",
                "TestDiff": "class",
                "TestDelete": "class",
                "TestGradient": "class",
                "TestAngle": "class",
                "TestTrimZeros": "class",
                "TestExtins": "class",
                "_foo1": "function",
                "_foo2": "function",
                "TestVectorize": "class",
                "TestLeaks": "class",
                "TestDigitize": "class",
                "TestUnwrap": "class",
                "TestFilterwindows": "class",
                "TestTrapz": "class",
                "TestSinc": "class",
                "TestUnique": "class",
                "TestCheckFinite": "class",
                "TestCorrCoef": "class",
                "TestCov": "class",
                "Test_I0": "class",
                "TestKaiser": "class",
                "TestMsort": "class",
                "TestMeshgrid": "class",
                "TestPiecewise": "class",
                "TestBincount": "class",
                "TestInterp": "class",
                "compare_results": "function",
                "TestPercentile": "class",
                "TestQuantile": "class",
                "TestLerp": "class",
                "TestMedian": "class",
                "TestAdd_newdoc_ufunc": "class",
                "TestAdd_newdoc": "class",
                "TestAddDocstring": "class",
                "TestSortComplex": "class"
            },
            "test_histograms": {
                "TestHistogram": "class",
                "TestHistogramOptimBinNums": "class",
                "TestHistogramdd": "class"
            },
            "test_index_tricks": {
                "TestRavelUnravelIndex": "class",
                "TestGrid": "class",
                "TestConcatenator": "class",
                "TestNdenumerate": "class",
                "TestIndexExpression": "class",
                "TestIx_": "class",
                "test_c_": "function",
                "TestFillDiagonal": "class",
                "test_diag_indices": "function",
                "TestDiagIndicesFrom": "class",
                "test_ndindex": "function"
            },
            "test_io": {
                "TextIO": "class",
                "IS_64BIT": "variable",
                "strptime": "function",
                "RoundtripTest": "class",
                "TestSaveLoad": "class",
                "TestSavezLoad": "class",
                "TestSaveTxt": "class",
                "LoadTxtBase": "class",
                "TestLoadTxt": "class",
                "Testfromregex": "class",
                "TestFromTxt": "class",
                "TestPathUsage": "class",
                "test_gzip_load": "function",
                "JustWriter": "class",
                "JustReader": "class",
                "test_ducktyping": "function",
                "test_gzip_loadtxt": "function",
                "test_gzip_loadtxt_from_string": "function",
                "test_npzfile_dict": "function",
                "test_load_refcount": "function"
            },
            "test_mixins": {
                "ArrayLike": "class",
                "wrap_array_like": "function",
                "_assert_equal_type_and_value": "function",
                "_ALL_BINARY_OPERATORS": "variable",
                "TestNDArrayOperatorsMixin": "class"
            },
            "test_nanfunctions": {
                "_ndat": "variable",
                "_rdat": "variable",
                "_ndat_ones": "variable",
                "_ndat_zeros": "variable",
                "TestNanFunctions_MinMax": "class",
                "TestNanFunctions_ArgminArgmax": "class",
                "TestNanFunctions_IntTypes": "class",
                "SharedNanFunctionsTestsMixin": "class",
                "TestNanFunctions_SumProd": "class",
                "TestNanFunctions_CumSumProd": "class",
                "TestNanFunctions_MeanVarStd": "class",
                "TestNanFunctions_Median": "class",
                "TestNanFunctions_Percentile": "class",
                "TestNanFunctions_Quantile": "class",
                "test__nan_mask": "function",
                "test__replace_nan": "function"
            },
            "test_packbits": {
                "test_packbits": "function",
                "test_packbits_empty": "function",
                "test_packbits_empty_with_axis": "function",
                "test_packbits_large": "function",
                "test_packbits_very_large": "function",
                "test_unpackbits": "function",
                "test_pack_unpack_order": "function",
                "test_unpackbits_empty": "function",
                "test_unpackbits_empty_with_axis": "function",
                "test_unpackbits_large": "function",
                "TestCount": "class"
            },
            "test_polynomial": {
                "TestPolynomial": "class"
            },
            "test_recfunctions": {
                "get_fieldspec": "variable",
                "get_names": "variable",
                "get_names_flat": "variable",
                "zip_descr": "variable",
                "zip_dtype": "variable",
                "TestRecFunctions": "class",
                "TestRecursiveFillFields": "class",
                "TestMergeArrays": "class",
                "TestAppendFields": "class",
                "TestStackArrays": "class",
                "TestJoinBy": "class",
                "TestJoinBy2": "class",
                "TestAppendFieldsObj": "class"
            },
            "test_regression": {
                "TestRegression": "class"
            },
            "test_shape_base": {
                "IS_64BIT": "variable",
                "_add_keepdims": "function",
                "TestTakeAlongAxis": "class",
                "TestPutAlongAxis": "class",
                "TestApplyAlongAxis": "class",
                "TestApplyOverAxes": "class",
                "TestExpandDims": "class",
                "TestArraySplit": "class",
                "TestSplit": "class",
                "TestColumnStack": "class",
                "TestDstack": "class",
                "TestHsplit": "class",
                "TestVsplit": "class",
                "TestDsplit": "class",
                "TestSqueeze": "class",
                "TestKron": "class",
                "TestTile": "class",
                "TestMayShareMemory": "class",
                "compare_results": "function"
            },
            "test_stride_tricks": {
                "assert_shapes_correct": "function",
                "assert_incompatible_shapes_raise": "function",
                "assert_same_as_ufunc": "function",
                "test_same": "function",
                "test_broadcast_kwargs": "function",
                "test_one_off": "function",
                "test_same_input_shapes": "function",
                "test_two_compatible_by_ones_input_shapes": "function",
                "test_two_compatible_by_prepending_ones_input_shapes": "function",
                "test_incompatible_shapes_raise_valueerror": "function",
                "test_same_as_ufunc": "function",
                "test_broadcast_to_succeeds": "function",
                "test_broadcast_to_raises": "function",
                "test_broadcast_shape": "function",
                "test_broadcast_shapes_succeeds": "function",
                "test_broadcast_shapes_raises": "function",
                "test_as_strided": "function",
                "TestSlidingWindowView": "class",
                "as_strided_writeable": "function",
                "VerySimpleSubClass": "class",
                "SimpleSubClass": "class",
                "test_subclasses": "function",
                "test_writeable": "function",
                "test_writeable_memoryview": "function",
                "test_reference_types": "function"
            },
            "test_twodim_base": {
                "get_mat": "function",
                "TestEye": "class",
                "TestDiag": "class",
                "TestFliplr": "class",
                "TestFlipud": "class",
                "TestHistogram2d": "class",
                "TestTri": "class",
                "test_tril_triu_ndim2": "function",
                "test_tril_triu_ndim3": "function",
                "test_tril_triu_with_inf": "function",
                "test_tril_triu_dtype": "function",
                "test_mask_indices": "function",
                "test_tril_indices": "function",
                "TestTriuIndices": "class",
                "TestTrilIndicesFrom": "class",
                "TestTriuIndicesFrom": "class",
                "TestVander": "class"
            },
            "test_type_check": {
                "assert_all": "function",
                "TestCommonType": "class",
                "TestMintypecode": "class",
                "TestIsscalar": "class",
                "TestReal": "class",
                "TestImag": "class",
                "TestIscomplex": "class",
                "TestIsreal": "class",
                "TestIscomplexobj": "class",
                "TestIsrealobj": "class",
                "TestIsnan": "class",
                "TestIsfinite": "class",
                "TestIsinf": "class",
                "TestIsposinf": "class",
                "TestIsneginf": "class",
                "TestNanToNum": "class",
                "TestRealIfClose": "class",
                "TestArrayConversion": "class"
            },
            "test_ufunclike": {
                "TestUfunclike": "class"
            },
            "test_utils": {
                "@pytest.mark.skipif(sys.flags.optimize": "variable",
                "test_lookfor": "function",
                "old_func": "function",
                "old_func2": "function",
                "old_func3": "function",
                "new_func3": "variable",
                "old_func4": "function",
                "new_func4": "variable",
                "old_func5": "function",
                "new_func5": "variable",
                "old_func6": "function",
                "new_func6": "variable",
                "test_deprecate_decorator": "function",
                "test_deprecate_decorator_message": "function",
                "test_deprecate_fn": "function",
                "test_deprecate_help_indentation": "function",
                "_compare_docs": "function",
                "test_deprecate_preserve_whitespace": "function",
                "test_safe_eval_nameconstant": "function",
                "TestByteBounds": "class",
                "test_assert_raises_regex_context_manager": "function",
                "test_info_method_heading": "function"
            },
            "test__datasource": {
                "urlopen_stub": "function",
                "old_urlopen": "variable",
                "setup_module": "function",
                "teardown_module": "function",
                "http_path": "variable",
                "http_file": "variable",
                "http_fakepath": "variable",
                "http_fakefile": "variable",
                "malicious_files": "variable",
                "magic_line": "variable",
                "valid_textfile": "function",
                "invalid_textfile": "function",
                "valid_httpurl": "function",
                "invalid_httpurl": "function",
                "valid_baseurl": "function",
                "invalid_baseurl": "function",
                "valid_httpfile": "function",
                "invalid_httpfile": "function",
                "TestDataSourceOpen": "class",
                "TestDataSourceExists": "class",
                "TestDataSourceAbspath": "class",
                "TestRepositoryAbspath": "class",
                "TestRepositoryExists": "class",
                "TestOpenFunc": "class",
                "test_del_attr_handling": "function"
            },
            "test__iotools": {
                "TestLineSplitter": "class",
                "TestNameValidator": "class",
                "_bytes_to_date": "function",
                "TestStringConverter": "class",
                "TestMiscFunctions": "class"
            },
            "test__version": {
                "test_main_versions": "function",
                "test_version_1_point_10": "function",
                "test_alpha_beta_rc": "function",
                "test_dev_version": "function",
                "test_dev_a_b_rc_mixed": "function",
                "test_dev0_version": "function",
                "test_dev0_a_b_rc_mixed": "function",
                "test_raises": "function"
            }
        },
        "arraypad": {
            "__all__": "variable",
            "_round_if_needed": "function",
            "_slice_at_axis": "function",
            "_view_roi": "function",
            "_pad_simple": "function",
            "_set_pad_area": "function",
            "_get_edges": "function",
            "_get_linear_ramps": "function",
            "_get_stats": "function",
            "_set_reflect_both": "function",
            "_set_wrap_both": "function",
            "_as_pairs": "function",
            "_pad_dispatcher": "function",
            "pad": "function"
        },
        "arraysetops": {
            "array_function_dispatch": "variable",
            "__all__": "variable",
            "_ediff1d_dispatcher": "function",
            "ediff1d": "function",
            "_unpack_tuple": "function",
            "_unique_dispatcher": "function",
            "unique": "function",
            "_unique1d": "function",
            "_intersect1d_dispatcher": "function",
            "intersect1d": "function",
            "_setxor1d_dispatcher": "function",
            "setxor1d": "function",
            "_in1d_dispatcher": "function",
            "in1d": "function",
            "_isin_dispatcher": "function",
            "isin": "function",
            "_union1d_dispatcher": "function",
            "union1d": "function",
            "_setdiff1d_dispatcher": "function",
            "setdiff1d": "function"
        },
        "arrayterator": {
            "__all__": "variable",
            "Arrayterator": "class"
        },
        "format": {
            "__all__": "variable",
            "MAGIC_PREFIX": "variable",
            "MAGIC_LEN": "variable",
            "ARRAY_ALIGN": "variable",
            "BUFFER_SIZE": "variable",
            "_header_size_info": "variable",
            "_check_version": "function",
            "magic": "function",
            "read_magic": "function",
            "_has_metadata": "function",
            "dtype_to_descr": "function",
            "descr_to_dtype": "function",
            "header_data_from_array_1_0": "function",
            "_wrap_header": "function",
            "_wrap_header_guess_version": "function",
            "_write_array_header": "function",
            "write_array_header_1_0": "function",
            "write_array_header_2_0": "function",
            "read_array_header_1_0": "function",
            "read_array_header_2_0": "function",
            "_filter_header": "function",
            "_read_array_header": "function",
            "write_array": "function",
            "read_array": "function",
            "open_memmap": "function",
            "_read_bytes": "function"
        },
        "function_base": {
            "array_function_dispatch": "variable",
            "__all__": "variable",
            "_rot90_dispatcher": "function",
            "rot90": "function",
            "_flip_dispatcher": "function",
            "flip": "function",
            "iterable": "function",
            "_average_dispatcher": "function",
            "average": "function",
            "asarray_chkfinite": "function",
            "_piecewise_dispatcher": "function",
            "piecewise": "function",
            "_select_dispatcher": "function",
            "select": "function",
            "_copy_dispatcher": "function",
            "copy": "function",
            "_gradient_dispatcher": "function",
            "gradient": "function",
            "_diff_dispatcher": "function",
            "diff": "function",
            "_interp_dispatcher": "function",
            "interp": "function",
            "_angle_dispatcher": "function",
            "angle": "function",
            "_unwrap_dispatcher": "function",
            "unwrap": "function",
            "_sort_complex": "function",
            "sort_complex": "function",
            "_trim_zeros": "function",
            "trim_zeros": "function",
            "_extract_dispatcher": "function",
            "extract": "function",
            "_place_dispatcher": "function",
            "place": "function",
            "disp": "function",
            "_DIMENSION_NAME": "variable",
            "_CORE_DIMENSION_LIST": "variable",
            "_ARGUMENT": "variable",
            "_ARGUMENT_LIST": "variable",
            "_SIGNATURE": "variable",
            "_parse_gufunc_signature": "function",
            "_update_dim_sizes": "function",
            "_parse_input_dimensions": "function",
            "_calculate_shapes": "function",
            "_create_arrays": "function",
            "vectorize": "class",
            "_cov_dispatcher": "function",
            "cov": "function",
            "_corrcoef_dispatcher": "function",
            "corrcoef": "function",
            "blackman": "function",
            "bartlett": "function",
            "hanning": "function",
            "hamming": "function",
            "_i0A": "variable",
            "_i0B": "variable",
            "_chbevl": "function",
            "_i0_1": "function",
            "_i0_2": "function",
            "_i0_dispatcher": "function",
            "i0": "function",
            "kaiser": "function",
            "_sinc_dispatcher": "function",
            "sinc": "function",
            "_msort_dispatcher": "function",
            "msort": "function",
            "_ureduce": "function",
            "_median_dispatcher": "function",
            "median": "function",
            "_median": "function",
            "_percentile_dispatcher": "function",
            "percentile": "function",
            "_quantile_dispatcher": "function",
            "quantile": "function",
            "_quantile_unchecked": "function",
            "_quantile_is_valid": "function",
            "_lerp": "function",
            "_quantile_ureduce_func": "function",
            "_trapz_dispatcher": "function",
            "trapz": "function",
            "_meshgrid_dispatcher": "function",
            "meshgrid": "function",
            "_delete_dispatcher": "function",
            "delete": "function",
            "_insert_dispatcher": "function",
            "insert": "function",
            "_append_dispatcher": "function",
            "append": "function",
            "_digitize_dispatcher": "function",
            "digitize": "function"
        },
        "histograms": {
            "__all__": "variable",
            "array_function_dispatch": "variable",
            "_range": "variable",
            "_ptp": "function",
            "_hist_bin_sqrt": "function",
            "_hist_bin_sturges": "function",
            "_hist_bin_rice": "function",
            "_hist_bin_scott": "function",
            "_hist_bin_stone": "function",
            "_hist_bin_doane": "function",
            "_hist_bin_fd": "function",
            "_hist_bin_auto": "function",
            "_hist_bin_selectors": "variable",
            "_ravel_and_check_weights": "function",
            "_get_outer_edges": "function",
            "_unsigned_subtract": "function",
            "_get_bin_edges": "function",
            "_search_sorted_inclusive": "function",
            "_histogram_bin_edges_dispatcher": "function",
            "histogram_bin_edges": "function",
            "_histogram_dispatcher": "function",
            "histogram": "function",
            "_histogramdd_dispatcher": "function",
            "histogramdd": "function"
        },
        "index_tricks": {
            "array_function_dispatch": "variable",
            "__all__": "variable",
            "_ix__dispatcher": "function",
            "ix_": "function",
            "nd_grid": "class",
            "MGridClass": "class",
            "mgrid": "variable",
            "OGridClass": "class",
            "ogrid": "variable",
            "AxisConcatenator": "class",
            "RClass": "class",
            "r_": "variable",
            "CClass": "class",
            "c_": "variable",
            "ndenumerate": "class",
            "ndindex": "class",
            "IndexExpression": "class",
            "index_exp": "variable",
            "s_": "variable",
            "_fill_diagonal_dispatcher": "function",
            "fill_diagonal": "function",
            "diag_indices": "function",
            "_diag_indices_from": "function",
            "diag_indices_from": "function"
        },
        "nanfunctions": {
            "array_function_dispatch": "variable",
            "__all__": "variable",
            "_nan_mask": "function",
            "_replace_nan": "function",
            "_copyto": "function",
            "_remove_nan_1d": "function",
            "_divide_by_count": "function",
            "_nanmin_dispatcher": "function",
            "nanmin": "function",
            "_nanmax_dispatcher": "function",
            "nanmax": "function",
            "_nanargmin_dispatcher": "function",
            "nanargmin": "function",
            "_nanargmax_dispatcher": "function",
            "nanargmax": "function",
            "_nansum_dispatcher": "function",
            "nansum": "function",
            "_nanprod_dispatcher": "function",
            "nanprod": "function",
            "_nancumsum_dispatcher": "function",
            "nancumsum": "function",
            "_nancumprod_dispatcher": "function",
            "nancumprod": "function",
            "_nanmean_dispatcher": "function",
            "nanmean": "function",
            "_nanmedian1d": "function",
            "_nanmedian": "function",
            "_nanmedian_small": "function",
            "_nanmedian_dispatcher": "function",
            "nanmedian": "function",
            "_nanpercentile_dispatcher": "function",
            "nanpercentile": "function",
            "_nanquantile_dispatcher": "function",
            "nanquantile": "function",
            "_nanquantile_unchecked": "function",
            "_nanquantile_ureduce_func": "function",
            "_nanquantile_1d": "function",
            "_nanvar_dispatcher": "function",
            "nanvar": "function",
            "_nanstd_dispatcher": "function",
            "nanstd": "function"
        },
        "npyio": {
            "loads": "function",
            "__all__": "variable",
            "array_function_dispatch": "variable",
            "BagObj": "class",
            "zipfile_factory": "function",
            "NpzFile": "class",
            "load": "function",
            "_save_dispatcher": "function",
            "save": "function",
            "_savez_dispatcher": "function",
            "savez": "function",
            "_savez_compressed_dispatcher": "function",
            "savez_compressed": "function",
            "_savez": "function",
            "_getconv": "function",
            "_loadtxt_chunksize": "variable",
            "_loadtxt_dispatcher": "function",
            "loadtxt": "function",
            "_loadtxt_with_like": "variable",
            "_savetxt_dispatcher": "function",
            "savetxt": "function",
            "fromregex": "function",
            "_genfromtxt_dispatcher": "function",
            "genfromtxt": "function",
            "_genfromtxt_with_like": "variable",
            "ndfromtxt": "function",
            "mafromtxt": "function",
            "recfromtxt": "function",
            "recfromcsv": "function"
        },
        "polynomial": {
            "__all__": "variable",
            "array_function_dispatch": "variable",
            "RankWarning": "class",
            "_poly_dispatcher": "function",
            "poly": "function",
            "_roots_dispatcher": "function",
            "roots": "function",
            "_polyint_dispatcher": "function",
            "polyint": "function",
            "_polyder_dispatcher": "function",
            "polyder": "function",
            "_polyfit_dispatcher": "function",
            "polyfit": "function",
            "_polyval_dispatcher": "function",
            "polyval": "function",
            "_binary_op_dispatcher": "function",
            "polyadd": "function",
            "polysub": "function",
            "polymul": "function",
            "_polydiv_dispatcher": "function",
            "polydiv": "function",
            "_poly_mat": "variable",
            "_raise_power": "function",
            "poly1d": "class"
        },
        "recfunctions": {
            "_check_fill_value": "variable",
            "__all__": "variable",
            "_recursive_fill_fields_dispatcher": "function",
            "recursive_fill_fields": "function",
            "_get_fieldspec": "function",
            "get_names": "function",
            "get_names_flat": "function",
            "flatten_descr": "function",
            "_zip_dtype": "function",
            "_zip_descr": "function",
            "get_fieldstructure": "function",
            "_izip_fields_flat": "function",
            "_izip_fields": "function",
            "_izip_records": "function",
            "_fix_output": "function",
            "_fix_defaults": "function",
            "_merge_arrays_dispatcher": "function",
            "merge_arrays": "function",
            "_drop_fields_dispatcher": "function",
            "drop_fields": "function",
            "_keep_fields": "function",
            "_rec_drop_fields_dispatcher": "function",
            "rec_drop_fields": "function",
            "_rename_fields_dispatcher": "function",
            "rename_fields": "function",
            "_append_fields_dispatcher": "function",
            "append_fields": "function",
            "_rec_append_fields_dispatcher": "function",
            "rec_append_fields": "function",
            "_repack_fields_dispatcher": "function",
            "repack_fields": "function",
            "_get_fields_and_offsets": "function",
            "_structured_to_unstructured_dispatcher": "function",
            "structured_to_unstructured": "function",
            "_unstructured_to_structured_dispatcher": "function",
            "unstructured_to_structured": "function",
            "_apply_along_fields_dispatcher": "function",
            "apply_along_fields": "function",
            "_assign_fields_by_name_dispatcher": "function",
            "assign_fields_by_name": "function",
            "_require_fields_dispatcher": "function",
            "require_fields": "function",
            "_stack_arrays_dispatcher": "function",
            "stack_arrays": "function",
            "_find_duplicates_dispatcher": "function",
            "find_duplicates": "function",
            "_join_by_dispatcher": "function",
            "join_by": "function",
            "_rec_join_dispatcher": "function",
            "rec_join": "function"
        },
        "scimath": {
            "__all__": "variable",
            "_ln2": "variable",
            "_tocomplex": "function",
            "_fix_real_lt_zero": "function",
            "_fix_int_lt_zero": "function",
            "_fix_real_abs_gt_1": "function",
            "_unary_dispatcher": "function",
            "sqrt": "function",
            "log": "function",
            "log10": "function",
            "_logn_dispatcher": "function",
            "logn": "function",
            "log2": "function",
            "_power_dispatcher": "function",
            "power": "function",
            "arccos": "function",
            "arcsin": "function",
            "arctanh": "function"
        },
        "setup": {
            "configuration": "function"
        },
        "shape_base": {
            "__all__": "variable",
            "array_function_dispatch": "variable",
            "_make_along_axis_idx": "function",
            "_take_along_axis_dispatcher": "function",
            "take_along_axis": "function",
            "_put_along_axis_dispatcher": "function",
            "put_along_axis": "function",
            "_apply_along_axis_dispatcher": "function",
            "apply_along_axis": "function",
            "_apply_over_axes_dispatcher": "function",
            "apply_over_axes": "function",
            "_expand_dims_dispatcher": "function",
            "expand_dims": "function",
            "row_stack": "variable",
            "_column_stack_dispatcher": "function",
            "column_stack": "function",
            "_dstack_dispatcher": "function",
            "dstack": "function",
            "_replace_zero_by_x_arrays": "function",
            "_array_split_dispatcher": "function",
            "array_split": "function",
            "_split_dispatcher": "function",
            "split": "function",
            "_hvdsplit_dispatcher": "function",
            "hsplit": "function",
            "vsplit": "function",
            "dsplit": "function",
            "get_array_prepare": "function",
            "get_array_wrap": "function",
            "_kron_dispatcher": "function",
            "kron": "function",
            "_tile_dispatcher": "function",
            "tile": "function"
        },
        "stride_tricks": {
            "__all__": "variable",
            "DummyArray": "class",
            "_maybe_view_as_subclass": "function",
            "as_strided": "function",
            "_sliding_window_view_dispatcher": "function",
            "sliding_window_view": "function",
            "_broadcast_to": "function",
            "_broadcast_to_dispatcher": "function",
            "broadcast_to": "function",
            "_broadcast_shape": "function",
            "broadcast_shapes": "function",
            "_broadcast_arrays_dispatcher": "function",
            "broadcast_arrays": "function"
        },
        "twodim_base": {
            "__all__": "variable",
            "array_function_dispatch": "variable",
            "i1": "variable",
            "i2": "variable",
            "i4": "variable",
            "_min_int": "function",
            "_flip_dispatcher": "function",
            "fliplr": "function",
            "flipud": "function",
            "_eye_dispatcher": "function",
            "eye": "function",
            "_eye_with_like": "variable",
            "_diag_dispatcher": "function",
            "diag": "function",
            "diagflat": "function",
            "_tri_dispatcher": "function",
            "tri": "function",
            "_tri_with_like": "variable",
            "_trilu_dispatcher": "function",
            "tril": "function",
            "triu": "function",
            "_vander_dispatcher": "function",
            "vander": "function",
            "_histogram2d_dispatcher": "function",
            "histogram2d": "function",
            "mask_indices": "function",
            "tril_indices": "function",
            "_trilu_indices_form_dispatcher": "function",
            "tril_indices_from": "function",
            "triu_indices": "function",
            "triu_indices_from": "function"
        },
        "type_check": {
            "__all__": "variable",
            "array_function_dispatch": "variable",
            "_typecodes_by_elsize": "variable",
            "mintypecode": "function",
            "_asfarray_dispatcher": "function",
            "asfarray": "function",
            "_real_dispatcher": "function",
            "real": "function",
            "_imag_dispatcher": "function",
            "imag": "function",
            "_is_type_dispatcher": "function",
            "iscomplex": "function",
            "isreal": "function",
            "iscomplexobj": "function",
            "isrealobj": "function",
            "_getmaxmin": "function",
            "_nan_to_num_dispatcher": "function",
            "nan_to_num": "function",
            "_real_if_close_dispatcher": "function",
            "real_if_close": "function",
            "_asscalar_dispatcher": "function",
            "asscalar": "function",
            "_namefromtype": "variable",
            "typename": "function",
            "array_type": "variable",
            "array_precision": "variable",
            "_common_type_dispatcher": "function",
            "common_type": "function"
        },
        "ufunclike": {
            "__all__": "variable",
            "_deprecate_out_named_y": "function",
            "_fix_out_named_y": "function",
            "_fix_and_maybe_deprecate_out_named_y": "function",
            "_dispatcher": "function",
            "fix": "function",
            "isposinf": "function",
            "isneginf": "function"
        },
        "user_array": {
            "container": "class"
        },
        "utils": {
            "__all__": "variable",
            "get_include": "function",
            "_set_function_name": "function",
            "_Deprecate": "class",
            "_get_indent": "function",
            "deprecate": "function",
            "deprecate_with_doc": "variable",
            "byte_bounds": "function",
            "who": "function",
            "_split_line": "function",
            "_namedict": "variable",
            "_dictlist": "variable",
            "_makenamedict": "function",
            "_info": "function",
            "info": "function",
            "source": "function",
            "_lookfor_caches": "variable",
            "_function_signature_re": "variable",
            "lookfor": "function",
            "_lookfor_generate_cache": "function",
            "_getmembers": "function",
            "safe_eval": "function",
            "_median_nancheck": "function"
        },
        "_datasource": {
            "_open": "variable",
            "_check_mode": "function",
            "_FileOpeners": "class",
            "_file_openers": "variable",
            "open": "function",
            "DataSource": "class",
            "Repository ": "class"
        },
        "_iotools": {
            "__docformat__": "variable",
            "_decode_line": "function",
            "_is_string_like": "function",
            "_is_bytes_like": "function",
            "has_nested_fields": "function",
            "flatten_dtype": "function",
            "LineSplitter": "class",
            "NameValidator": "class",
            "str2bool": "function",
            "ConverterError": "class",
            "ConverterLockError": "class",
            "ConversionWarning": "class",
            "StringConverter": "class",
            "easy_dtype": "function"
        },
        "_version": {
            "__all__": "variable",
            "NumpyVersion": "class"
        },
        "": {
            "__all__": "variable",
            "test": "variable"
        }
    },
    "linalg": {
        "tests": {
            "test_build": {
                "FindDependenciesLdd": "class",
                "TestF77Mismatch": "class"
            },
            "test_deprecations": {
                "test_qr_mode_full_future_warning": "function"
            },
            "test_linalg": {
                "consistent_subclass": "function",
                "old_assert_almost_equal": "variable",
                "assert_almost_equal": "function",
                "get_real_dtype": "function",
                "get_complex_dtype": "function",
                "get_rtol": "function",
                "all_tags": "variable",
                "LinalgCase": "class",
                "apply_tag": "function",
                "CASES": "variable",
                "_make_generalized_cases": "function",
                "_stride_comb_iter": "function",
                "_make_strided_cases": "function",
                "LinalgTestCase": "class",
                "LinalgSquareTestCase": "class",
                "LinalgNonsquareTestCase": "class",
                "HermitianTestCase": "class",
                "LinalgGeneralizedSquareTestCase": "class",
                "LinalgGeneralizedNonsquareTestCase": "class",
                "HermitianGeneralizedTestCase": "class",
                "dot_generalized": "function",
                "identity_like_generalized": "function",
                "SolveCases": "class",
                "TestSolve": "class",
                "InvCases": "class",
                "TestInv": "class",
                "EigvalsCases": "class",
                "TestEigvals": "class",
                "EigCases": "class",
                "TestEig": "class",
                "SVDBaseTests": "class",
                "SVDCases": "class",
                "TestSVD": "class",
                "SVDHermitianCases": "class",
                "TestSVDHermitian": "class",
                "CondCases": "class",
                "TestCond": "class",
                "PinvCases": "class",
                "TestPinv": "class",
                "PinvHermitianCases": "class",
                "TestPinvHermitian": "class",
                "DetCases": "class",
                "TestDet": "class",
                "LstsqCases": "class",
                "TestLstsq": "class",
                "TestMatrixPower": "class",
                "TestEigvalshCases": "class",
                "TestEigvalsh": "class",
                "TestEighCases": "class",
                "TestEigh": "class",
                "_TestNormBase": "class",
                "_TestNormGeneral": "class",
                "_TestNorm2D": "class",
                "_TestNorm": "class",
                "TestNorm_NonSystematic": "class",
                "_TestNormDoubleBase": "class",
                "_TestNormSingleBase": "class",
                "_TestNormInt64Base": "class",
                "TestNormDouble": "class",
                "TestNormSingle": "class",
                "TestNormInt64": "class",
                "TestMatrixRank": "class",
                "test_reduced_rank": "function",
                "TestQR": "class",
                "TestCholesky": "class",
                "test_byteorder_check": "function",
                "test_generalized_raise_multiloop": "function",
                "test_xerbla_override": "function",
                "test_sdot_bug_8577": "function",
                "TestMultiDot": "class",
                "TestTensorinv": "class",
                "test_unsupported_commontype": "function",
                "test_blas64_dot": "function",
                "test_blas64_geqrf_lwork_smoketest": "function"
            },
            "test_regression": {
                "TestRegression": "class"
            }
        },
        "linalg": {
            "__all__": "variable",
            "array_function_dispatch": "variable",
            "fortran_int": "variable",
            "LinAlgError": "class",
            "_determine_error_states": "function",
            "_linalg_error_extobj": "variable",
            "_raise_linalgerror_singular": "function",
            "_raise_linalgerror_nonposdef": "function",
            "_raise_linalgerror_eigenvalues_nonconvergence": "function",
            "_raise_linalgerror_svd_nonconvergence": "function",
            "_raise_linalgerror_lstsq": "function",
            "get_linalg_error_extobj": "function",
            "_makearray": "function",
            "isComplexType": "function",
            "_real_types_map": "variable",
            "_complex_types_map": "variable",
            "_realType": "function",
            "_complexType": "function",
            "_linalgRealType": "function",
            "_commonType": "function",
            "_fastCT": "variable",
            "_to_native_byte_order": "function",
            "_fastCopyAndTranspose": "function",
            "_assert_2d": "function",
            "_assert_stacked_2d": "function",
            "_assert_stacked_square": "function",
            "_assert_finite": "function",
            "_is_empty_2d": "function",
            "transpose": "function",
            "_tensorsolve_dispatcher": "function",
            "tensorsolve": "function",
            "_solve_dispatcher": "function",
            "solve": "function",
            "_tensorinv_dispatcher": "function",
            "tensorinv": "function",
            "_unary_dispatcher": "function",
            "inv": "function",
            "_matrix_power_dispatcher": "function",
            "matrix_power": "function",
            "cholesky": "function",
            "_qr_dispatcher": "function",
            "qr": "function",
            "eigvals": "function",
            "_eigvalsh_dispatcher": "function",
            "eigvalsh": "function",
            "_convertarray": "function",
            "eig": "function",
            "eigh": "function",
            "_svd_dispatcher": "function",
            "svd": "function",
            "_cond_dispatcher": "function",
            "cond": "function",
            "_matrix_rank_dispatcher": "function",
            "matrix_rank": "function",
            "_pinv_dispatcher": "function",
            "pinv": "function",
            "slogdet": "function",
            "det": "function",
            "_lstsq_dispatcher": "function",
            "lstsq": "function",
            "_multi_svd_norm": "function",
            "_norm_dispatcher": "function",
            "norm": "function",
            "_multidot_dispatcher": "function",
            "multi_dot": "function",
            "_multi_dot_three": "function",
            "_multi_dot_matrix_chain_order": "function",
            "_multi_dot": "function"
        },
        "setup": {
            "configuration": "function"
        },
        "": {
            "test": "variable"
        }
    },
    "ma": {
        "tests": {
            "test_core": {
                "__author__": "variable",
                "pi": "variable",
                "suppress_copy_mask_on_assignment": "variable",
                "num_dts": "variable",
                "num_ids": "variable",
                "TestMaskedArray": "class",
                "TestMaskedArrayArithmetic": "class",
                "TestMaskedArrayAttributes": "class",
                "TestFillingValues": "class",
                "TestUfuncs": "class",
                "TestMaskedArrayInPlaceArithmetics": "class",
                "TestMaskedArrayMethods": "class",
                "TestMaskedArrayMathMethods": "class",
                "TestMaskedArrayMathMethodsComplex": "class",
                "TestMaskedArrayFunctions": "class",
                "TestMaskedFields": "class",
                "TestMaskedObjectArray": "class",
                "TestMaskedView": "class",
                "TestOptionalArgs": "class",
                "TestMaskedConstant": "class",
                "TestMaskedWhereAliases": "class",
                "test_masked_array": "function",
                "test_append_masked_array": "function",
                "test_append_masked_array_along_axis": "function",
                "test_default_fill_value_complex": "function",
                "test_ufunc_with_output": "function",
                "test_ufunc_with_out_varied": "function",
                "test_astype_mask_ordering": "function",
                "test_astype_basic": "function",
                "test_fieldless_void": "function",
                "test_mask_shape_assignment_does_not_break_masked": "function",
                "test_doc_note": "function"
            },
            "test_deprecations": {
                "TestArgsort": "class",
                "TestMinimumMaximum": "class"
            },
            "test_extras": {
                "TestGeneric": "class",
                "TestAverage": "class",
                "TestConcatenator": "class",
                "TestNotMasked": "class",
                "TestCompressFunctions": "class",
                "TestApplyAlongAxis": "class",
                "TestApplyOverAxes": "class",
                "TestMedian": "class",
                "TestCov": "class",
                "TestCorrcoef": "class",
                "TestPolynomial": "class",
                "TestArraySetOps": "class",
                "TestShapeBase": "class",
                "TestStack": "class"
            },
            "test_mrecords": {
                "TestMRecords": "class",
                "TestView": "class",
                "TestMRecordsImport": "class",
                "test_record_array_with_object_field": "function"
            },
            "test_old_ma": {
                "pi": "variable",
                "eq": "function",
                "TestMa": "class",
                "TestUfuncs": "class",
                "TestArrayMethods": "class",
                "eqmask": "function"
            },
            "test_regression": {
                "TestRegression": "class"
            },
            "test_subclassing": {
                "assert_startswith": "function",
                "SubArray": "class",
                "subarray": "variable",
                "SubMaskedArray": "class",
                "MSubArray": "class",
                "msubarray": "variable",
                "CSAIterator": "class",
                "ComplicatedSubArray": "class",
                "TestSubclassing": "class"
            }
        },
        "bench": {
            "xs": "variable",
            "ys": "variable",
            "zs": "variable",
            "m1": "variable",
            "m2": "variable",
            "nmxs": "variable",
            "nmys": "variable",
            "nmzs": "variable",
            "xl": "variable",
            "yl": "variable",
            "zl": "variable",
            "maskx": "variable",
            "masky": "variable",
            "nmxl": "variable",
            "nmyl": "variable",
            "nmzl": "variable",
            "timer": "function",
            "compare_functions_1v": "function",
            "compare_methods": "function",
            "compare_functions_2v": "function"
        },
        "core": {
            "__all__": "variable",
            "MaskType": "variable",
            "nomask": "variable",
            "MaskedArrayFutureWarning": "class",
            "_deprecate_argsort_axis": "function",
            "doc_note": "function",
            "get_object_signature": "function",
            "MAError": "class",
            "MaskError": "class",
            "default_filler": "variable",
            "float_types_list": "variable",
            "max_filler": "variable",
            "min_filler": "variable",
            "_recursive_fill_value": "function",
            "_get_dtype_of": "function",
            "default_fill_value": "function",
            "_extremum_fill_value": "function",
            "minimum_fill_value": "function",
            "maximum_fill_value": "function",
            "_recursive_set_fill_value": "function",
            "_check_fill_value": "function",
            "set_fill_value": "function",
            "get_fill_value": "function",
            "common_fill_value": "function",
            "filled": "function",
            "get_masked_subclass": "function",
            "getdata": "function",
            "get_data": "variable",
            "fix_invalid": "function",
            "is_string_or_list_of_strings": "function",
            "ufunc_domain": "variable",
            "ufunc_fills": "variable",
            "_DomainCheckInterval": "class",
            "_DomainTan": "class",
            "_DomainSafeDivide": "class",
            "_DomainGreater": "class",
            "_DomainGreaterEqual": "class",
            "_MaskedUFunc": "class",
            "_MaskedUnaryOperation": "class",
            "_MaskedBinaryOperation": "class",
            "_DomainedBinaryOperation": "class",
            "exp": "variable",
            "conjugate": "variable",
            "sin": "variable",
            "cos": "variable",
            "arctan": "variable",
            "arcsinh": "variable",
            "sinh": "variable",
            "cosh": "variable",
            "tanh": "variable",
            "abs": "variable",
            "angle": "variable",
            "fabs": "variable",
            "negative": "variable",
            "floor": "variable",
            "ceil": "variable",
            "around": "variable",
            "logical_not": "variable",
            "sqrt": "variable",
            "log": "variable",
            "log2": "variable",
            "log10": "variable",
            "tan": "variable",
            "arcsin": "variable",
            "arccos": "variable",
            "arccosh": "variable",
            "arctanh": "variable",
            "add": "variable",
            "subtract": "variable",
            "multiply": "variable",
            "arctan2": "variable",
            "equal": "variable",
            "equal.reduce": "variable",
            "not_equal": "variable",
            "not_equal.reduce": "variable",
            "less_equal": "variable",
            "less_equal.reduce": "variable",
            "greater_equal": "variable",
            "greater_equal.reduce": "variable",
            "less": "variable",
            "less.reduce": "variable",
            "greater": "variable",
            "greater.reduce": "variable",
            "logical_and": "variable",
            "alltrue": "variable",
            "logical_or": "variable",
            "sometrue": "variable",
            "logical_xor": "variable",
            "bitwise_and": "variable",
            "bitwise_or": "variable",
            "bitwise_xor": "variable",
            "hypot": "variable",
            "divide": "variable",
            "true_divide": "variable",
            "floor_divide": "variable",
            "remainder": "variable",
            "fmod": "variable",
            "mod": "variable",
            "_replace_dtype_fields_recursive": "function",
            "_replace_dtype_fields": "function",
            "make_mask_descr": "function",
            "getmask": "function",
            "get_mask": "variable",
            "getmaskarray": "function",
            "is_mask": "function",
            "_shrink_mask": "function",
            "make_mask": "function",
            "make_mask_none": "function",
            "mask_or": "function",
            "flatten_mask": "function",
            "_check_mask_axis": "function",
            "masked_where": "function",
            "masked_greater": "function",
            "masked_greater_equal": "function",
            "masked_less": "function",
            "masked_less_equal": "function",
            "masked_not_equal": "function",
            "masked_equal": "function",
            "masked_inside": "function",
            "masked_outside": "function",
            "masked_object": "function",
            "masked_values": "function",
            "masked_invalid": "function",
            "_MaskedPrintOption": "class",
            "masked_print_option": "variable",
            "_recursive_printoption": "function",
            "_legacy_print_templates": "variable",
            "_recursive_filled": "function",
            "flatten_structured_array": "function",
            "_arraymethod": "function",
            "MaskedIterator": "class",
            "MaskedArray": "class",
            "_mareconstruct": "function",
            "mvoid": "class",
            "isMaskedArray": "function",
            "isarray": "variable",
            "isMA": "variable",
            "MaskedConstant": "class",
            "masked": "variable",
            "masked_array": "variable",
            "array": "function",
            "array.__doc__": "variable",
            "is_masked": "function",
            "_extrema_operation": "class",
            "min": "function",
            "min.__doc__": "variable",
            "max": "function",
            "max.__doc__": "variable",
            "ptp": "function",
            "ptp.__doc__": "variable",
            "_frommethod": "class",
            "all": "variable",
            "anomalies": "variable",
            "any": "variable",
            "compress": "variable",
            "cumprod": "variable",
            "cumsum": "variable",
            "copy": "variable",
            "diagonal": "variable",
            "harden_mask": "variable",
            "ids": "variable",
            "maximum": "variable",
            "mean": "variable",
            "minimum": "variable",
            "nonzero": "variable",
            "prod": "variable",
            "product": "variable",
            "ravel": "variable",
            "repeat": "variable",
            "shrink_mask": "variable",
            "soften_mask": "variable",
            "std": "variable",
            "sum": "variable",
            "swapaxes": "variable",
            "trace": "variable",
            "var": "variable",
            "count": "variable",
            "take": "function",
            "power": "function",
            "argmin": "variable",
            "argmax": "variable",
            "argsort": "function",
            "argsort.__doc__": "variable",
            "sort": "function",
            "compressed": "function",
            "concatenate": "function",
            "diag": "function",
            "left_shift": "function",
            "right_shift": "function",
            "put": "function",
            "putmask": "function",
            "transpose": "function",
            "reshape": "function",
            "resize": "function",
            "ndim": "function",
            "ndim.__doc__": "variable",
            "shape": "function",
            "shape.__doc__": "variable",
            "size": "function",
            "size.__doc__": "variable",
            "where": "function",
            "choose": "function",
            "round_": "function",
            "round": "variable",
            "mask_rowcols": "function",
            "dot": "function",
            "inner": "function",
            "inner.__doc__": "variable",
            "innerproduct": "variable",
            "outer": "function",
            "outer.__doc__": "variable",
            "outerproduct": "variable",
            "_convolve_or_correlate": "function",
            "correlate": "function",
            "convolve": "function",
            "allequal": "function",
            "allclose": "function",
            "asarray": "function",
            "asanyarray": "function",
            "_pickle_warn": "function",
            "fromfile": "function",
            "fromflex": "function",
            "_convert2ma": "class",
            "arange": "variable",
            "clip": "variable",
            "diff": "variable",
            "empty": "variable",
            "empty_like": "variable",
            "frombuffer": "variable",
            "fromfunction": "variable",
            "identity": "variable",
            "indices": "variable",
            "ones": "variable",
            "ones_like": "variable",
            "squeeze": "variable",
            "zeros": "variable",
            "zeros_like": "variable",
            "append": "function"
        },
        "extras": {
            "__all__": "variable",
            "issequence": "function",
            "count_masked": "function",
            "masked_all": "function",
            "masked_all_like": "function",
            "_fromnxfunction": "class",
            "_fromnxfunction_single": "class",
            "_fromnxfunction_seq": "class",
            "_fromnxfunction_args": "class",
            "_fromnxfunction_allargs": "class",
            "atleast_1d": "variable",
            "atleast_2d": "variable",
            "atleast_3d": "variable",
            "vstack": "variable",
            "hstack": "variable",
            "column_stack": "variable",
            "dstack": "variable",
            "stack": "variable",
            "hsplit": "variable",
            "diagflat": "variable",
            "flatten_inplace": "function",
            "apply_along_axis": "function",
            "apply_along_axis.__doc__": "variable",
            "apply_over_axes": "function",
            "average": "function",
            "median": "function",
            "_median": "function",
            "compress_nd": "function",
            "compress_rowcols": "function",
            "compress_rows": "function",
            "compress_cols": "function",
            "mask_rows": "function",
            "mask_cols": "function",
            "ediff1d": "function",
            "unique": "function",
            "intersect1d": "function",
            "setxor1d": "function",
            "in1d": "function",
            "isin": "function",
            "union1d": "function",
            "setdiff1d": "function",
            "_covhelper": "function",
            "cov": "function",
            "corrcoef": "function",
            "MAxisConcatenator": "class",
            "mr_class": "class",
            "mr_": "variable",
            "flatnotmasked_edges": "function",
            "notmasked_edges": "function",
            "flatnotmasked_contiguous": "function",
            "notmasked_contiguous": "function",
            "_ezclump": "function",
            "clump_unmasked": "function",
            "clump_masked": "function",
            "vander": "function",
            "vander.__doc__": "variable",
            "polyfit": "function",
            "polyfit.__doc__": "variable"
        },
        "mrecords": {
            "_byteorderconv": "variable",
            "_check_fill_value": "variable",
            "__all__": "variable",
            "reserved_fields": "variable",
            "_checknames": "function",
            "_get_fieldmask": "function",
            "MaskedRecords": "class",
            "_mrreconstruct": "function",
            "mrecarray": "variable",
            "fromarrays": "function",
            "fromrecords": "function",
            "_guessvartypes": "function",
            "openfile": "function",
            "fromtextfile": "function",
            "addfield": "function"
        },
        "setup": {
            "configuration": "function"
        },
        "testutils": {
            "__all__masked": "variable",
            "__some__from_testing": "variable",
            "__all__": "variable",
            "approx": "function",
            "almost": "function",
            "_assert_equal_on_sequences": "function",
            "assert_equal_records": "function",
            "assert_equal": "function",
            "fail_if_equal": "function",
            "assert_not_equal": "variable",
            "assert_almost_equal": "function",
            "assert_close": "variable",
            "assert_array_compare": "function",
            "assert_array_equal": "function",
            "fail_if_array_equal": "function",
            "assert_array_approx_equal": "function",
            "assert_array_almost_equal": "function",
            "assert_array_less": "function",
            "assert_mask_equal": "function"
        },
        "timer_comparison": {
            "pi": "variable",
            "ModuleTester": "class"
        },
        "": {
            "__all__": "variable",
            "test": "variable"
        }
    },
    "matrixlib": {
        "tests": {
            "test_defmatrix": {
                "TestCtor": "class",
                "TestProperties": "class",
                "TestCasting": "class",
                "TestAlgebra": "class",
                "TestMatrixReturn": "class",
                "TestIndexing": "class",
                "TestNewScalarIndexing": "class",
                "TestPower": "class",
                "TestShape": "class"
            },
            "test_interaction": {
                "test_fancy_indexing": "function",
                "test_polynomial_mapdomain": "function",
                "test_sort_matrix_none": "function",
                "test_partition_matrix_none": "function",
                "test_dot_scalar_and_matrix_of_objects": "function",
                "test_inner_scalar_and_matrix": "function",
                "test_inner_scalar_and_matrix_of_objects": "function",
                "test_iter_allocate_output_subtype": "function",
                "like_function": "function",
                "test_array_astype": "function",
                "test_stack": "function",
                "test_object_scalar_multiply": "function",
                "test_nanfunctions_matrices": "function",
                "test_nanfunctions_matrices_general": "function",
                "test_average_matrix": "function",
                "test_trapz_matrix": "function",
                "test_ediff1d_matrix": "function",
                "test_apply_along_axis_matrix": "function",
                "test_kron_matrix": "function",
                "TestConcatenatorMatrix": "class",
                "test_array_equal_error_message_matrix": "function",
                "test_array_almost_equal_matrix": "function"
            },
            "test_masked_matrix": {
                "MMatrix": "class",
                "TestMaskedMatrix": "class",
                "TestSubclassing": "class",
                "TestConcatenator": "class"
            },
            "test_multiarray": {
                "TestView": "class"
            },
            "test_numeric": {
                "TestDot": "class",
                "test_diagonal": "function"
            },
            "test_regression": {
                "TestRegression": "class"
            }
        },
        "defmatrix": {
            "__all__": "variable",
            "_convert_from_string": "function",
            "asmatrix": "function",
            "matrix": "class",
            "_from_string": "function",
            "bmat": "function",
            "mat": "variable"
        },
        "setup": {
            "configuration": "function"
        },
        "": {
            "__all__": "variable",
            "test": "variable"
        }
    },
    "polynomial": {
        "tests": {
            "test_chebyshev": {
                "trim": "function",
                "T0": "variable",
                "T1": "variable",
                "T2": "variable",
                "T3": "variable",
                "T4": "variable",
                "T5": "variable",
                "T6": "variable",
                "T7": "variable",
                "T8": "variable",
                "T9": "variable",
                "Tlist": "variable",
                "TestPrivate": "class",
                "TestConstants": "class",
                "TestArithmetic": "class",
                "TestEvaluation": "class",
                "TestIntegral": "class",
                "TestDerivative": "class",
                "TestVander": "class",
                "TestFitting": "class",
                "TestInterpolate": "class",
                "TestCompanion": "class",
                "TestGauss": "class",
                "TestMisc": "class"
            },
            "test_classes": {
                "classes": "variable",
                "classids": "variable",
                "Poly": "function",
                "random": "variable",
                "assert_poly_almost_equal": "function",
                "Poly1": "variable",
                "Poly2": "variable",
                "test_conversion": "function",
                "test_cast": "function",
                "test_identity": "function",
                "test_basis": "function",
                "test_fromroots": "function",
                "test_bad_conditioned_fit": "function",
                "test_fit": "function",
                "test_equal": "function",
                "test_not_equal": "function",
                "test_add": "function",
                "test_sub": "function",
                "test_mul": "function",
                "test_floordiv": "function",
                "test_truediv": "function",
                "test_mod": "function",
                "test_divmod": "function",
                "test_roots": "function",
                "test_degree": "function",
                "test_copy": "function",
                "test_integ": "function",
                "test_deriv": "function",
                "test_linspace": "function",
                "test_pow": "function",
                "test_call": "function",
                "test_cutdeg": "function",
                "test_truncate": "function",
                "test_trim": "function",
                "test_mapparms": "function",
                "test_ufunc_override": "function",
                "TestInterpolate": "class"
            },
            "test_hermite": {
                "H0": "variable",
                "H1": "variable",
                "H2": "variable",
                "H3": "variable",
                "H4": "variable",
                "H5": "variable",
                "H6": "variable",
                "H7": "variable",
                "H8": "variable",
                "H9": "variable",
                "Hlist": "variable",
                "trim": "function",
                "TestConstants": "class",
                "TestArithmetic": "class",
                "TestEvaluation": "class",
                "TestIntegral": "class",
                "TestDerivative": "class",
                "TestVander": "class",
                "TestFitting": "class",
                "TestCompanion": "class",
                "TestGauss": "class",
                "TestMisc": "class"
            },
            "test_hermite_e": {
                "He0": "variable",
                "He1": "variable",
                "He2": "variable",
                "He3": "variable",
                "He4": "variable",
                "He5": "variable",
                "He6": "variable",
                "He7": "variable",
                "He8": "variable",
                "He9": "variable",
                "Helist": "variable",
                "trim": "function",
                "TestConstants": "class",
                "TestArithmetic": "class",
                "TestEvaluation": "class",
                "TestIntegral": "class",
                "TestDerivative": "class",
                "TestVander": "class",
                "TestFitting": "class",
                "TestCompanion": "class",
                "TestGauss": "class",
                "TestMisc": "class"
            },
            "test_laguerre": {
                "L0": "variable",
                "L1": "variable",
                "L2": "variable",
                "L3": "variable",
                "L4": "variable",
                "L5": "variable",
                "L6": "variable",
                "Llist": "variable",
                "trim": "function",
                "TestConstants": "class",
                "TestArithmetic": "class",
                "TestEvaluation": "class",
                "TestIntegral": "class",
                "TestDerivative": "class",
                "TestVander": "class",
                "TestFitting": "class",
                "TestCompanion": "class",
                "TestGauss": "class",
                "TestMisc": "class"
            },
            "test_legendre": {
                "L0": "variable",
                "L1": "variable",
                "L2": "variable",
                "L3": "variable",
                "L4": "variable",
                "L5": "variable",
                "L6": "variable",
                "L7": "variable",
                "L8": "variable",
                "L9": "variable",
                "Llist": "variable",
                "trim": "function",
                "TestConstants": "class",
                "TestArithmetic": "class",
                "TestEvaluation": "class",
                "TestIntegral": "class",
                "TestDerivative": "class",
                "TestVander": "class",
                "TestFitting": "class",
                "TestCompanion": "class",
                "TestGauss": "class",
                "TestMisc": "class"
            },
            "test_polynomial": {
                "trim": "function",
                "T0": "variable",
                "T1": "variable",
                "T2": "variable",
                "T3": "variable",
                "T4": "variable",
                "T5": "variable",
                "T6": "variable",
                "T7": "variable",
                "T8": "variable",
                "T9": "variable",
                "Tlist": "variable",
                "TestConstants": "class",
                "TestArithmetic": "class",
                "TestEvaluation": "class",
                "TestIntegral": "class",
                "TestDerivative": "class",
                "TestVander": "class",
                "TestCompanion": "class",
                "TestMisc": "class"
            },
            "test_polyutils": {
                "TestMisc": "class",
                "TestDomain": "class"
            },
            "test_printing": {
                "TestStrUnicodeSuperSubscripts": "class",
                "TestStrAscii": "class",
                "TestLinebreaking": "class",
                "test_set_default_printoptions": "function",
                "test_complex_coefficients": "function",
                "test_numeric_object_coefficients": "function",
                "test_nonnumeric_object_coefficients": "function",
                "TestFormat": "class",
                "TestRepr": "class",
                "TestLatexRepr": "class"
            }
        },
        "chebyshev": {
            "__all__": "variable",
            "chebtrim": "variable",
            "_cseries_to_zseries": "function",
            "_zseries_to_cseries": "function",
            "_zseries_mul": "function",
            "_zseries_div": "function",
            "_zseries_der": "function",
            "_zseries_int": "function",
            "poly2cheb": "function",
            "cheb2poly": "function",
            "chebdomain": "variable",
            "chebzero": "variable",
            "chebone": "variable",
            "chebx": "variable",
            "chebline": "function",
            "chebfromroots": "function",
            "chebadd": "function",
            "chebsub": "function",
            "chebmulx": "function",
            "chebmul": "function",
            "chebdiv": "function",
            "chebpow": "function",
            "chebder": "function",
            "chebint": "function",
            "chebval": "function",
            "chebval2d": "function",
            "chebgrid2d": "function",
            "chebval3d": "function",
            "chebgrid3d": "function",
            "chebvander": "function",
            "chebvander2d": "function",
            "chebvander3d": "function",
            "chebfit": "function",
            "chebcompanion": "function",
            "chebroots": "function",
            "chebinterpolate": "function",
            "chebgauss": "function",
            "chebweight": "function",
            "chebpts1": "function",
            "chebpts2": "function",
            "Chebyshev": "class"
        },
        "hermite": {
            "__all__": "variable",
            "hermtrim": "variable",
            "poly2herm": "function",
            "herm2poly": "function",
            "hermdomain": "variable",
            "hermzero": "variable",
            "hermone": "variable",
            "hermx": "variable",
            "hermline": "function",
            "hermfromroots": "function",
            "hermadd": "function",
            "hermsub": "function",
            "hermmulx": "function",
            "hermmul": "function",
            "hermdiv": "function",
            "hermpow": "function",
            "hermder": "function",
            "hermint": "function",
            "hermval": "function",
            "hermval2d": "function",
            "hermgrid2d": "function",
            "hermval3d": "function",
            "hermgrid3d": "function",
            "hermvander": "function",
            "hermvander2d": "function",
            "hermvander3d": "function",
            "hermfit": "function",
            "hermcompanion": "function",
            "hermroots": "function",
            "_normed_hermite_n": "function",
            "hermgauss": "function",
            "hermweight": "function",
            "Hermite": "class"
        },
        "hermite_e": {
            "__all__": "variable",
            "hermetrim": "variable",
            "poly2herme": "function",
            "herme2poly": "function",
            "hermedomain": "variable",
            "hermezero": "variable",
            "hermeone": "variable",
            "hermex": "variable",
            "hermeline": "function",
            "hermefromroots": "function",
            "hermeadd": "function",
            "hermesub": "function",
            "hermemulx": "function",
            "hermemul": "function",
            "hermediv": "function",
            "hermepow": "function",
            "hermeder": "function",
            "hermeint": "function",
            "hermeval": "function",
            "hermeval2d": "function",
            "hermegrid2d": "function",
            "hermeval3d": "function",
            "hermegrid3d": "function",
            "hermevander": "function",
            "hermevander2d": "function",
            "hermevander3d": "function",
            "hermefit": "function",
            "hermecompanion": "function",
            "hermeroots": "function",
            "_normed_hermite_e_n": "function",
            "hermegauss": "function",
            "hermeweight": "function",
            "HermiteE": "class"
        },
        "laguerre": {
            "__all__": "variable",
            "lagtrim": "variable",
            "poly2lag": "function",
            "lag2poly": "function",
            "lagdomain": "variable",
            "lagzero": "variable",
            "lagone": "variable",
            "lagx": "variable",
            "lagline": "function",
            "lagfromroots": "function",
            "lagadd": "function",
            "lagsub": "function",
            "lagmulx": "function",
            "lagmul": "function",
            "lagdiv": "function",
            "lagpow": "function",
            "lagder": "function",
            "lagint": "function",
            "lagval": "function",
            "lagval2d": "function",
            "laggrid2d": "function",
            "lagval3d": "function",
            "laggrid3d": "function",
            "lagvander": "function",
            "lagvander2d": "function",
            "lagvander3d": "function",
            "lagfit": "function",
            "lagcompanion": "function",
            "lagroots": "function",
            "laggauss": "function",
            "lagweight": "function",
            "Laguerre": "class"
        },
        "legendre": {
            "__all__": "variable",
            "legtrim": "variable",
            "poly2leg": "function",
            "leg2poly": "function",
            "legdomain": "variable",
            "legzero": "variable",
            "legone": "variable",
            "legx": "variable",
            "legline": "function",
            "legfromroots": "function",
            "legadd": "function",
            "legsub": "function",
            "legmulx": "function",
            "legmul": "function",
            "legdiv": "function",
            "legpow": "function",
            "legder": "function",
            "legint": "function",
            "legval": "function",
            "legval2d": "function",
            "leggrid2d": "function",
            "legval3d": "function",
            "leggrid3d": "function",
            "legvander": "function",
            "legvander2d": "function",
            "legvander3d": "function",
            "legfit": "function",
            "legcompanion": "function",
            "legroots": "function",
            "leggauss": "function",
            "legweight": "function",
            "Legendre": "class"
        },
        "polynomial": {
            "__all__": "variable",
            "polytrim": "variable",
            "polydomain": "variable",
            "polyzero": "variable",
            "polyone": "variable",
            "polyx": "variable",
            "polyline": "function",
            "polyfromroots": "function",
            "polyadd": "function",
            "polysub": "function",
            "polymulx": "function",
            "polymul": "function",
            "polydiv": "function",
            "polypow": "function",
            "polyder": "function",
            "polyint": "function",
            "polyval": "function",
            "polyvalfromroots": "function",
            "polyval2d": "function",
            "polygrid2d": "function",
            "polyval3d": "function",
            "polygrid3d": "function",
            "polyvander": "function",
            "polyvander2d": "function",
            "polyvander3d": "function",
            "polyfit": "function",
            "polycompanion": "function",
            "polyroots": "function",
            "Polynomial": "class"
        },
        "polyutils": {
            "__all__": "variable",
            "RankWarning": "class",
            "PolyError": "class",
            "PolyDomainError": "class",
            "PolyBase": "class",
            "trimseq": "function",
            "as_series": "function",
            "trimcoef": "function",
            "getdomain": "function",
            "mapparms": "function",
            "mapdomain": "function",
            "_nth_slice": "function",
            "_vander_nd": "function",
            "_vander_nd_flat": "function",
            "_fromroots": "function",
            "_valnd": "function",
            "_gridnd": "function",
            "_div": "function",
            "_add": "function",
            "_sub": "function",
            "_fit": "function",
            "_pow": "function",
            "_deprecate_as_int": "function"
        },
        "setup": {
            "configuration": "function"
        },
        "_polybase": {
            "__all__": "variable",
            "ABCPolyBase": "class"
        },
        "": {
            "set_default_printstyle": "function",
            "test": "variable"
        }
    },
    "random": {
        "tests": {
            "test_direct": {
                "pwd": "variable",
                "assert_state_equal": "function",
                "uniform32_from_uint64": "function",
                "uniform32_from_uint53": "function",
                "uniform32_from_uint32": "function",
                "uniform32_from_uint": "function",
                "uniform_from_uint": "function",
                "uniform_from_uint64": "function",
                "uniform_from_uint32": "function",
                "uniform_from_dsfmt": "function",
                "gauss_from_uint": "function",
                "test_seedsequence": "function",
                "Base": "class",
                "TestPhilox": "class",
                "TestPCG64": "class",
                "TestMT19937": "class",
                "TestSFC64": "class",
                "TestDefaultRNG": "class"
            },
            "test_extending": {
                "test_cython": "function",
                "test_numba": "function",
                "test_cffi": "function"
            },
            "test_generator_mt19937": {
                "random": "variable",
                "JUMP_TEST_DATA": "variable",
                "endpoint": "function",
                "TestSeed": "class",
                "TestBinomial": "class",
                "TestMultinomial": "class",
                "TestMultivariateHypergeometric": "class",
                "TestSetState": "class",
                "TestIntegers": "class",
                "TestRandomDist": "class",
                "TestBroadcast": "class",
                "TestThread": "class",
                "TestSingleEltArrayInput": "class",
                "test_jumped": "function",
                "test_broadcast_size_error": "function",
                "test_broadcast_size_scalar": "function"
            },
            "test_generator_mt19937_regressions": {
                "mt19937": "variable",
                "TestRegression": "class"
            },
            "test_random": {
                "TestSeed": "class",
                "TestBinomial": "class",
                "TestMultinomial": "class",
                "TestSetState": "class",
                "TestRandint": "class",
                "TestRandomDist": "class",
                "TestBroadcast": "class",
                "TestThread": "class",
                "TestSingleEltArrayInput": "class"
            },
            "test_randomstate": {
                "INT_FUNCS": "variable",
                "int_func": "function",
                "assert_mt19937_state_equal": "function",
                "TestSeed": "class",
                "TestBinomial": "class",
                "TestMultinomial": "class",
                "TestSetState": "class",
                "TestRandint": "class",
                "TestRandomDist": "class",
                "TestBroadcast": "class",
                "TestThread": "class",
                "TestSingleEltArrayInput": "class",
                "test_integer_dtype": "function",
                "test_integer_repeat": "function",
                "test_broadcast_size_error": "function"
            },
            "test_randomstate_regression": {
                "TestRegression": "class"
            },
            "test_regression": {
                "TestRegression": "class"
            },
            "test_seed_sequence": {
                "test_reference_data": "function",
                "test_zero_padding": "function"
            },
            "test_smoke": {
                "dtype": "function",
                "params_0": "function",
                "params_1": "function",
                "comp_state": "function",
                "warmup": "function",
                "RNG": "class",
                "TestMT19937": "class",
                "TestPhilox": "class",
                "TestSFC64": "class",
                "TestPCG64": "class",
                "TestDefaultRNG": "class"
            }
        },
        "_examples": {
            "cffi": {
                "extending": {
                    "ffi": "variable",
                    "inc_dir": "variable"
                },
                "parse": {
                    "parse_distributions_h": "function"
                }
            },
            "cython": {
                "setup": {
                    "path": "variable",
                    "src_dir": "variable",
                    "defs": "variable",
                    "inc_path": "variable",
                    "lib_path": "variable",
                    "extending": "variable",
                    "distributions": "variable",
                    "extensions": "variable"
                }
            },
            "numba": {
                "extending": {
                    "bit_gen": "variable",
                    "next_d": "variable",
                    "state_addr": "variable",
                    "normals": "function",
                    "normalsj": "variable",
                    "n": "variable",
                    "numbacall": "function",
                    "rg": "variable",
                    "numpycall": "function",
                    "r1": "variable",
                    "r2": "variable",
                    "t1": "variable",
                    "t2": "variable",
                    "next_u32": "variable",
                    "ctypes_state": "variable",
                    "bounded_uint": "function",
                    "bounded_uints": "function"
                },
                "extending_distributions": {
                    "ffi": "variable"
                }
            }
        },
        "setup": {
            "is_msvc": "variable",
            "configuration": "function"
        },
        "_pickle": {
            "BitGenerators": "variable",
            "__generator_ctor": "function",
            "__bit_generator_ctor": "function",
            "__randomstate_ctor": "function"
        },
        "": {
            "__all__": "variable",
            "__RandomState_ctor": "function",
            "test": "variable"
        }
    },
    "testing": {
        "tests": {
            "test_decorators": {
                "TestNoseDecorators": "class"
            },
            "test_doctesting": {
                "check_random_directive": "function",
                "check_implicit_np": "function",
                "check_whitespace_enabled": "function",
                "check_empty_output": "function",
                "check_skip": "function"
            },
            "test_utils": {
                "_GenericTest": "class",
                "TestArrayEqual": "class",
                "TestBuildErrorMessage": "class",
                "TestEqual": "class",
                "TestArrayAlmostEqual": "class",
                "TestAlmostEqual": "class",
                "TestApproxEqual": "class",
                "TestArrayAssertLess": "class",
                "TestRaises": "class",
                "TestWarns": "class",
                "TestAssertAllclose": "class",
                "TestArrayAlmostEqualNulp": "class",
                "TestULP": "class",
                "TestStringEqual": "class",
                "assert_warn_len_equal": "function",
                "test_warn_len_equal_call_scenarios": "function",
                "_get_fresh_mod": "function",
                "test_clear_and_catch_warnings": "function",
                "test_suppress_warnings_module": "function",
                "test_suppress_warnings_type": "function",
                "test_suppress_warnings_decorate_no_record": "function",
                "test_suppress_warnings_record": "function",
                "test_suppress_warnings_forwarding": "function",
                "test_tempdir": "function",
                "test_temppath": "function",
                "my_cacw": "class",
                "test_clear_and_catch_warnings_inherit": "function",
                "TestAssertNoGcCycles": "class"
            }
        },
        "_private": {
            "decorators": {
                "__all__": "variable",
                "slow": "function",
                "setastest": "function",
                "skipif": "function",
                "knownfailureif": "function",
                "deprecated": "function",
                "parametrize": "function",
                "_needs_refcount": "variable"
            },
            "noseclasses": {
                "NumpyDocTestFinder": "class",
                "NumpyOutputChecker": "class",
                "NumpyDocTestCase": "class",
                "print_state": "variable",
                "NumpyDoctest": "class",
                "Unplugger": "class",
                "KnownFailurePlugin": "class",
                "KnownFailure": "variable",
                "FPUModeCheckPlugin": "class",
                "NumpyTestProgram": "class"
            },
            "nosetester": {
                "__all__": "variable",
                "get_package_name": "function",
                "run_module_suite": "function",
                "NoseTester": "class",
                "_numpy_tester": "function"
            },
            "parameterized": {
                "_param": "variable",
                "param": "class",
                "QuietOrderedDict": "class",
                "parameterized_argument_value_pairs": "function",
                "short_repr": "function",
                "default_doc_func": "function",
                "default_name_func": "function",
                "_test_runner_override": "variable",
                "_test_runner_guess": "variable",
                "_test_runners": "variable",
                "_test_runner_aliases": "variable",
                "set_test_runner": "function",
                "detect_runner": "function",
                "parameterized": "class"
            },
            "utils": {
                "__all__": "variable",
                "KnownFailureException": "class",
                "KnownFailureTest": "variable",
                "verbose": "variable",
                "IS_PYPY": "variable",
                "HAS_REFCOUNT": "variable",
                "HAS_LAPACK64": "variable",
                "import_nose": "function",
                "assert_": "function",
                "gisnan": "function",
                "gisfinite": "function",
                "gisinf": "function",
                "build_err_msg": "function",
                "assert_equal": "function",
                "print_assert_equal": "function",
                "assert_almost_equal": "function",
                "assert_approx_equal": "function",
                "assert_array_compare": "function",
                "assert_array_equal": "function",
                "assert_array_almost_equal": "function",
                "assert_array_less": "function",
                "runstring": "function",
                "assert_string_equal": "function",
                "rundocs": "function",
                "raises": "function",
                "_Dummy": "class",
                "_d": "variable",
                "assert_raises": "function",
                "assert_raises_regex": "function",
                "decorate_methods": "function",
                "measure": "function",
                "_assert_valid_refcount": "function",
                "assert_allclose": "function",
                "assert_array_almost_equal_nulp": "function",
                "assert_array_max_ulp": "function",
                "nulp_diff": "function",
                "_integer_repr": "function",
                "integer_repr": "function",
                "_assert_warns_context": "function",
                "assert_warns": "function",
                "_assert_no_warnings_context": "function",
                "assert_no_warnings": "function",
                "_gen_alignment_data": "function",
                "IgnoreException": "class",
                "tempdir": "function",
                "temppath": "function",
                "clear_and_catch_warnings": "class",
                "suppress_warnings": "class",
                "_assert_no_gc_cycles_context": "function",
                "assert_no_gc_cycles": "function",
                "break_cycles": "function",
                "requires_memory": "function",
                "check_free_memory": "function",
                "_parse_size": "function",
                "_get_mem_available": "function",
                "_no_tracing": "function"
            }
        },
        "print_coercion_tables": {
            "GenericObject": "class",
            "print_cancast_table": "function",
            "print_coercion_table": "function",
            "print_new_cast_table": "function"
        },
        "setup": {
            "configuration": "function"
        },
        "utils": {
            "__all__": "variable"
        },
        "": {
            "__all__": "variable",
            "test": "variable"
        }
    },
    "tests": {
        "test_ctypeslib": {
            "@pytest.mark.skipif(sys.platform": "variable",
            "TestLoadLibrary": "class",
            "TestNdpointer": "class",
            "TestNdpointerCFunc": "class",
            "TestAsArray": "class",
            "TestAsCtypesType": "class"
        },
        "test_matlib": {
            "test_empty": "function",
            "test_ones": "function",
            "test_zeros": "function",
            "test_identity": "function",
            "test_eye": "function",
            "test_rand": "function",
            "test_randn": "function",
            "test_repmat": "function"
        },
        "test_numpy_version": {
            "test_valid_numpy_version": "function"
        },
        "test_public_api": {
            "check_dir": "function",
            "test_numpy_namespace": "function",
            "test_import_lazy_import": "function",
            "test_dir_testing": "function",
            "test_numpy_linalg": "function",
            "test_numpy_fft": "function",
            "test_NPY_NO_EXPORT": "function",
            "PUBLIC_MODULES": "variable",
            "PUBLIC_ALIASED_MODULES": "variable",
            "PRIVATE_BUT_PRESENT_MODULES": "variable",
            "is_unexpected": "function",
            "SKIP_LIST": "variable",
            "test_all_modules_are_expected": "function",
            "SKIP_LIST_2": "variable",
            "test_all_modules_are_expected_2": "function",
            "test_api_importable": "function"
        },
        "test_reloading": {
            "test_numpy_reloading": "function",
            "test_novalue": "function",
            "test_full_reimport": "function"
        },
        "test_scripts": {
            "is_inplace": "variable",
            "find_f2py_commands": "function",
            "test_f2py": "function",
            "test_pep338": "function"
        },
        "test_warnings": {
            "ParseCall": "class",
            "FindFuncs": "class",
            "test_warning_calls": "function"
        }
    },
    "typing": {
        "tests": {
            "data": {
                "fail": {
                    "arithmetic": {
                        "b_": "variable",
                        "dt": "variable",
                        "td": "variable"
                    },
                    "array_constructors": {
                        "generator": "variable"
                    },
                    "array_like": {
                        "A": "class",
                        "scalar": "variable",
                        "array": "variable"
                    },
                    "bitwise_ops": {
                        "i8": "variable",
                        "i4": "variable",
                        "u8": "variable",
                        "b_": "variable",
                        "i": "variable",
                        "f8": "variable"
                    },
                    "constants": {
                        "np.Inf": "variable",
                        "np.ALLOW_THREADS": "variable",
                        "np.little_endian": "variable",
                        "np.UFUNC_PYVALS_NAME": "variable"
                    },
                    "dtype": {
                        "Test": "class"
                    },
                    "flatiter": {
                        "Index": "class",
                        "a.base": "variable",
                        "a.coords": "variable",
                        "a.index": "variable"
                    },
                    "ndarray": {
                        "float_array": "variable",
                        "float_array.dtype": "variable"
                    },
                    "scalars": {
                        "A": "class"
                    }
                },
                "pass": {
                    "arithmetic": {
                        "c16": "variable",
                        "f8": "variable",
                        "i8": "variable",
                        "u8": "variable",
                        "c8": "variable",
                        "f4": "variable",
                        "i4": "variable",
                        "u4": "variable",
                        "dt": "variable",
                        "td": "variable",
                        "b_": "variable",
                        "b": "variable",
                        "c": "variable",
                        "f": "variable",
                        "i": "variable",
                        "AR": "variable"
                    },
                    "array_constructors": {
                        "Index": "class",
                        "SubClass": "class",
                        "func": "function",
                        "i8": "variable",
                        "A": "variable",
                        "B": "variable",
                        "B_stack": "variable",
                        "C": "variable"
                    },
                    "array_like": {
                        "A": "class"
                    },
                    "bitwise_ops": {
                        "i8": "variable",
                        "u8": "variable",
                        "i4": "variable",
                        "u4": "variable",
                        "b_": "variable",
                        "b": "variable",
                        "i": "variable",
                        "AR": "variable"
                    },
                    "dtype": {
                        "dtype_obj": "variable",
                        "void_dtype_obj": "variable",
                        "Test": "class"
                    },
                    "flatiter": {
                        "a": "variable"
                    },
                    "literal": {
                        "AR": "variable",
                        "KACF": "variable",
                        "ACF": "variable",
                        "CF": "variable"
                    },
                    "mod": {
                        "f8": "variable",
                        "i8": "variable",
                        "u8": "variable",
                        "f4": "variable",
                        "i4": "variable",
                        "u4": "variable",
                        "td": "variable",
                        "b_": "variable",
                        "b": "variable",
                        "f": "variable",
                        "i": "variable",
                        "AR": "variable",
                        "AR2": "variable"
                    },
                    "ndarray_conversion": {
                        "nd": "variable",
                        "scalar_array": "variable",
                        "complex_array": "variable"
                    },
                    "ndarray_misc": {
                        "SubClass": "class",
                        "i4": "variable",
                        "A": "variable",
                        "B0": "variable",
                        "B1": "variable",
                        "B2": "variable",
                        "C": "variable",
                        "D": "variable",
                        "_choices": "variable",
                        "void": "variable"
                    },
                    "ndarray_shape_manipulation": {
                        "nd1": "variable",
                        "nd2": "variable",
                        "nd3": "variable",
                        "nd4": "variable"
                    },
                    "numeric": {
                        "SubClass": "class",
                        "i8": "variable",
                        "A": "variable",
                        "C": "variable"
                    },
                    "scalars": {
                        "D": "class",
                        "C": "class",
                        "B": "class",
                        "A": "class",
                        "i8": "variable",
                        "u8": "variable",
                        "f8": "variable",
                        "c16": "variable",
                        "b_": "variable",
                        "td": "variable",
                        "U": "variable",
                        "S": "variable",
                        "AR": "variable"
                    },
                    "simple_py3": {
                        "array": "variable"
                    }
                },
                "reveal": {
                    "arithmetic": {
                        "c16": "variable",
                        "f8": "variable",
                        "i8": "variable",
                        "u8": "variable",
                        "c8": "variable",
                        "f4": "variable",
                        "i4": "variable",
                        "u4": "variable",
                        "dt": "variable",
                        "td": "variable",
                        "b_": "variable",
                        "b": "variable",
                        "c": "variable",
                        "f": "variable",
                        "i": "variable",
                        "AR": "variable"
                    },
                    "array_constructors": {
                        "SubClass": "class",
                        "func": "function"
                    },
                    "bitwise_ops": {
                        "i8": "variable",
                        "u8": "variable",
                        "i4": "variable",
                        "u4": "variable",
                        "b_": "variable",
                        "b": "variable",
                        "i": "variable",
                        "AR": "variable"
                    },
                    "mod": {
                        "f8": "variable",
                        "i8": "variable",
                        "u8": "variable",
                        "f4": "variable",
                        "i4": "variable",
                        "u4": "variable",
                        "td": "variable",
                        "b_": "variable",
                        "b": "variable",
                        "f": "variable",
                        "i": "variable",
                        "AR": "variable",
                        "AR2": "variable"
                    },
                    "nbit_base_example": {
                        "T": "variable",
                        "add": "function"
                    },
                    "ndarray_conversion": {
                        "nd": "variable",
                        "SubArray": "class"
                    },
                    "ndarray_misc": {
                        "SubClass": "class"
                    },
                    "ndarray_shape_manipulation": {
                        "nd": "variable"
                    },
                    "numeric": {
                        "SubClass": "class"
                    },
                    "scalars": {
                        "x": "variable"
                    }
                }
            },
            "test_isfile": {
                "ROOT": "variable",
                "FILES": "variable",
                "TestIsFile": "class"
            },
            "test_typing": {
                "DATA_DIR": "variable",
                "PASS_DIR": "variable",
                "FAIL_DIR": "variable",
                "REVEAL_DIR": "variable",
                "MYPY_INI": "variable",
                "CACHE_DIR": "variable",
                "get_test_cases": "function",
                "test_success": "function",
                "test_fail": "function",
                "_FAIL_MSG1": "variable",
                "_test_fail": "function",
                "test_reveal": "function",
                "_REVEAL_MSG": "variable"
            }
        },
        "setup": {
            "configuration": "function"
        },
        "_array_like": {
            "ArrayLike": "variable"
        },
        "_dtype_like": {
            "_DTypeLikeNested": "variable",
            "_VoidDTypeLike": "variable",
            "DTypeLike": "variable"
        },
        "_scalars": {
            "_CharLike": "variable",
            "_BoolLike": "variable",
            "_IntLike": "variable",
            "_FloatLike": "variable",
            "_ComplexLike": "variable",
            "_NumberLike": "variable",
            "_ScalarLike": "variable",
            "_VoidLike": "variable"
        },
        "_shape": {
            "_Shape": "variable",
            "_ShapeLike": "variable"
        },
        "": {
            "NBitBase": "class",
            "_256Bit": "class",
            "_128Bit": "class",
            "_96Bit": "class",
            "_80Bit": "class",
            "_64Bit": "class",
            "_32Bit": "class",
            "_16Bit": "class",
            "_8Bit": "class",
            "test": "variable"
        }
    },
    "conftest": {
        "_old_fpu_mode": "variable",
        "_collect_results": "variable",
        "_pytest_ini": "variable",
        "pytest_configure": "function",
        "pytest_addoption": "function",
        "pytest_sessionstart": "function",
        "pytest_itemcollected": "function",
        "check_fpu_mode": "function",
        "add_np": "function",
        "env_setup": "function"
    },
    "ctypeslib": {
        "__all__": "variable",
        "_num_fromflags": "function",
        "_flagnames": "variable",
        "_flags_fromnum": "function",
        "_ndptr": "class",
        "_concrete_ndptr": "class",
        "_pointer_type_cache": "variable",
        "ndpointer": "function"
    },
    "dual": {
        "__all__": "variable",
        "fft": "variable",
        "ifft": "variable",
        "fftn": "variable",
        "ifftn": "variable",
        "fft2": "variable",
        "ifft2": "variable",
        "norm": "variable",
        "inv": "variable",
        "svd": "variable",
        "solve": "variable",
        "det": "variable",
        "eig": "variable",
        "eigvals": "variable",
        "eigh": "variable",
        "eigvalsh": "variable",
        "lstsq": "variable",
        "pinv": "variable",
        "cholesky": "variable",
        "_restore_dict": "variable",
        "register_func": "function",
        "restore_func": "function",
        "restore_all": "function"
    },
    "matlib": {
        "__version__": "variable",
        "__all__": "variable",
        "empty": "function",
        "ones": "function",
        "zeros": "function",
        "identity": "function",
        "eye": "function",
        "rand": "function",
        "randn": "function",
        "repmat": "function"
    },
    "setup": {
        "configuration": "function"
    },
    "_globals": {
        "__ALL__": "variable",
        "_is_loaded": "variable",
        "ModuleDeprecationWarning": "class",
        "ModuleDeprecationWarning.__module__": "variable",
        "VisibleDeprecationWarning": "class",
        "VisibleDeprecationWarning.__module__": "variable",
        "_NoValueType": "class",
        "_NoValue": "variable"
    },
    "_pytesttester": {
        "__all__": "variable",
        "_show_numpy_info": "function",
        "PytestTester": "class"
    },
    "__config__": {
        "__all__": "variable",
        "extra_dll_dir": "variable",
        "get_info": "function",
        "show": "function"
    }
}