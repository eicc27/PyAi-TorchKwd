{
    "core": {
        "tests": {
            "examples": {
                "setup": {
                    "macros": "variable",
                    "checks": "variable",
                    "extensions": "variable"
                }
            },
            "test_abc": {
                "TestABC": "class"
            },
            "test_api": {
                "NPY_RELAXED_STRIDES_CHECKING": "variable",
                "test_array_array": "function",
                "test_array_impossible_casts": "function",
                "test_fastCopyAndTranspose": "function",
                "test_array_astype": "function",
                "test_array_astype_to_void": "function",
                "test_object_array_astype_to_void": "function",
                "test_array_astype_warning": "function",
                "test_string_to_boolean_cast": "function",
                "test_string_to_boolean_cast_errors": "function",
                "test_string_to_complex_cast": "function",
                "test_none_to_nan_cast": "function",
                "test_copyto_fromscalar": "function",
                "test_copyto": "function",
                "test_copyto_permut": "function",
                "test_copy_order": "function",
                "test_contiguous_flags": "function",
                "test_broadcast_arrays": "function",
                "test_full_from_list": "function"
            },
            "test_arrayprint": {
                "TestArrayRepr": "class",
                "TestComplexArray": "class",
                "TestArray2String": "class",
                "TestPrintOptions": "class",
                "test_unicode_object_array": "function",
                "TestContextManager": "class"
            },
            "test_array_coercion": {
                "arraylikes": "function",
                "scalar_instances": "function",
                "is_parametric_dtype": "function",
                "TestStringDiscovery": "class",
                "TestScalarDiscovery": "class",
                "TestTimeScalars": "class",
                "TestNested": "class",
                "TestBadSequences": "class",
                "TestArrayLikes": "class"
            },
            "test_casting_unittests": {
                "simple_dtypes": "variable",
                "simple_dtype_instances": "function",
                "get_expected_stringlength": "function",
                "Casting": "class",
                "_get_cancast_table": "function",
                "CAST_TABLE": "variable",
                "TestChanges": "class",
                "TestCasting": "class"
            },
            "test_conversion_utils": {
                "StringConverterTestCase": "class",
                "TestByteorderConverter": "class",
                "TestSortkindConverter": "class",
                "TestSelectkindConverter": "class",
                "TestSearchsideConverter": "class",
                "TestOrderConverter": "class",
                "TestClipmodeConverter": "class",
                "TestCastingConverter": "class",
                "TestIntpConverter": "class"
            },
            "test_cpu_dispatcher": {
                "test_dispatcher": "function"
            },
            "test_cpu_features": {
                "assert_features_equal": "function",
                "AbstractTest": "class",
                "is_linux": "variable",
                "Test_X86_Features": "class",
                "is_power": "variable",
                "Test_POWER_Features": "class",
                "is_arm": "variable",
                "Test_ARM_Features": "class"
            },
            "test_cython": {
                "pytestmark": "variable",
                "install_temp": "function",
                "test_is_timedelta64_object": "function",
                "test_is_datetime64_object": "function",
                "test_get_datetime64_value": "function",
                "test_get_timedelta64_value": "function",
                "test_get_datetime64_unit": "function",
                "test_abstract_scalars": "function"
            },
            "test_datetime": {
                "TestDateTime": "class",
                "TestDateTimeData": "class"
            },
            "test_defchararray": {
                "kw_unicode_true": "variable",
                "kw_unicode_false": "variable",
                "TestBasic": "class",
                "TestVecString": "class",
                "TestWhitespace": "class",
                "TestChar": "class",
                "TestComparisons": "class",
                "TestComparisonsMixed1": "class",
                "TestComparisonsMixed2": "class",
                "TestInformation": "class",
                "TestMethods": "class",
                "TestOperations": "class",
                "test_empty_indexing": "function"
            },
            "test_deprecations": {
                "_DeprecationTestCase": "class",
                "_VisibleDeprecationTestCase": "class",
                "TestNonTupleNDIndexDeprecation": "class",
                "TestComparisonDeprecations": "class",
                "TestDatetime64Timezone": "class",
                "TestNonCContiguousViewDeprecation": "class",
                "TestArrayDataAttributeAssignmentDeprecation": "class",
                "TestBinaryReprInsufficientWidthParameterForRepresentation": "class",
                "TestNumericStyleTypecodes": "class",
                "TestTestDeprecated": "class",
                "TestNonNumericConjugate": "class",
                "TestNPY_CHAR": "class",
                "TestPyArray_AS1D": "class",
                "TestPyArray_AS2D": "class",
                "Test_UPDATEIFCOPY": "class",
                "TestDatetimeEvent": "class",
                "TestTruthTestingEmptyArrays": "class",
                "TestBincount": "class",
                "TestAlen": "class",
                "TestGeneratorSum": "class",
                "TestPositiveOnNonNumerical": "class",
                "TestFromstring": "class",
                "TestFromStringAndFileInvalidData": "class",
                "Test_GetSet_NumericOps": "class",
                "TestShape1Fields": "class",
                "TestNonZero": "class",
                "test_deprecate_ragged_arrays": "function",
                "TestTooDeepDeprecation": "class",
                "TestToString": "class",
                "TestDTypeCoercion": "class",
                "BuiltInRoundComplexDType": "class",
                "TestIncorrectAdvancedIndexWithEmptyResult": "class",
                "TestNonExactMatchDeprecation": "class",
                "TestDeprecatedGlobals": "class",
                "TestMatrixInOuter": "class",
                "TestRaggedArray": "class",
                "FlatteningConcatenateUnsafeCast": "class",
                "TestDeprecateSubarrayDTypeDuringArrayCoercion": "class",
                "TestFutureWarningArrayLikeNotIterable": "class",
                "TestDeprecatedUnpickleObjectScalar": "class"
            },
            "test_dtype": {
                "assert_dtype_equal": "function",
                "assert_dtype_not_equal": "function",
                "TestBuiltin": "class",
                "TestRecord": "class",
                "TestSubarray": "class",
                "iter_struct_object_dtypes": "function",
                "TestStructuredObjectRefcounting": "class",
                "TestStructuredDtypeSparseFields": "class",
                "TestMonsterType": "class",
                "TestMetadata": "class",
                "TestString": "class",
                "TestDtypeAttributeDeletion": "class",
                "TestDtypeAttributes": "class",
                "TestPickling": "class",
                "test_rational_dtype": "function",
                "test_dtypes_are_true": "function",
                "test_invalid_dtype_string": "function",
                "test_keyword_argument": "function",
                "TestFromDTypeAttribute": "class",
                "TestDTypeClasses": "class",
                "TestFromCTypes": "class",
                "TestUserDType": "class"
            },
            "test_einsum": {
                "chars": "variable",
                "sizes": "variable",
                "global_size_dict": "variable",
                "TestEinsum": "class",
                "TestEinsumPath": "class",
                "test_overlap": "function"
            },
            "test_errstate": {
                "hosttype": "variable",
                "arm_softfloat": "variable",
                "TestErrstate": "class"
            },
            "test_extint128": {
                "INT64_MAX": "variable",
                "INT64_MIN": "variable",
                "INT64_MID": "variable",
                "INT128_MAX": "variable",
                "INT128_MIN": "variable",
                "INT128_MID": "variable",
                "INT64_VALUES": "variable",
                "INT128_VALUES": "variable",
                "INT64_POS_VALUES": "variable",
                "exc_iter": "function",
                "test_safe_binop": "function",
                "test_to_128": "function",
                "test_to_64": "function",
                "test_mul_64_64": "function",
                "test_add_128": "function",
                "test_sub_128": "function",
                "test_neg_128": "function",
                "test_shl_128": "function",
                "test_shr_128": "function",
                "test_gt_128": "function",
                "test_divmod_128_64": "function",
                "test_floordiv_128_64": "function",
                "test_ceildiv_128_64": "function"
            },
            "test_function_base": {
                "PhysicalQuantity": "class",
                "PhysicalQuantity2": "class",
                "TestLogspace": "class",
                "TestGeomspace": "class",
                "TestLinspace": "class"
            },
            "test_getlimits": {
                "TestPythonFloat": "class",
                "TestHalf": "class",
                "TestSingle": "class",
                "TestDouble": "class",
                "TestLongdouble": "class",
                "TestFinfo": "class",
                "TestIinfo": "class",
                "TestRepr": "class",
                "test_instances": "function",
                "assert_ma_equal": "function",
                "test_known_types": "function",
                "test_plausible_finfo": "function"
            },
            "test_half": {
                "assert_raises_fpe": "function",
                "TestHalf": "class"
            },
            "test_indexerrors": {
                "TestIndexErrors": "class"
            },
            "test_indexing": {
                "TestIndexing": "class",
                "TestFieldIndexing": "class",
                "TestBroadcastedAssignments": "class",
                "TestSubclasses": "class",
                "TestFancyIndexingCast": "class",
                "TestFancyIndexingEquivalence": "class",
                "TestMultiIndexingAutomated": "class",
                "TestFloatNonIntegerArgument": "class",
                "TestBooleanIndexing": "class",
                "TestArrayToIndexDeprecation": "class",
                "TestNonIntegerArrayLike": "class",
                "TestMultipleEllipsisError": "class",
                "TestCApiAccess": "class"
            },
            "test_item_selection": {
                "TestTake": "class"
            },
            "test_longdouble": {
                "LD_INFO": "variable",
                "longdouble_longer_than_double": "variable",
                "_o": "variable",
                "string_to_longdouble_inaccurate": "variable",
                "test_scalar_extraction": "function",
                "repr_precision": "variable",
                "test_repr_roundtrip": "function",
                "test_repr_roundtrip_bytes": "function",
                "test_array_and_stringlike_roundtrip": "function",
                "test_bogus_string": "function",
                "test_fromstring": "function",
                "test_fromstring_complex": "function",
                "test_fromstring_bogus": "function",
                "test_fromstring_empty": "function",
                "test_fromstring_missing": "function",
                "TestFileBased": "class",
                "test_repr_exact": "function",
                "test_format": "function",
                "test_percent": "function",
                "test_array_repr": "function",
                "TestCommaDecimalPointLocale": "class",
                "test_longdouble_from_int": "function",
                "test_longdouble_from_bool": "function"
            },
            "test_machar": {
                "TestMachAr": "class"
            },
            "test_memmap": {
                "TestMemmap": "class"
            },
            "test_mem_overlap": {
                "ndims": "variable",
                "size": "variable",
                "shape": "variable",
                "MAY_SHARE_BOUNDS": "variable",
                "MAY_SHARE_EXACT": "variable",
                "_indices_for_nelems": "function",
                "_indices_for_axis": "function",
                "_indices": "function",
                "_check_assignment": "function",
                "test_overlapping_assignments": "function",
                "test_diophantine_fuzz": "function",
                "test_diophantine_overflow": "function",
                "check_may_share_memory_exact": "function",
                "test_may_share_memory_manual": "function",
                "iter_random_view_pairs": "function",
                "check_may_share_memory_easy_fuzz": "function",
                "test_may_share_memory_easy_fuzz": "function",
                "test_may_share_memory_harder_fuzz": "function",
                "test_shares_memory_api": "function",
                "test_may_share_memory_bad_max_work": "function",
                "test_internal_overlap_diophantine": "function",
                "test_internal_overlap_slices": "function",
                "check_internal_overlap": "function",
                "test_internal_overlap_manual": "function",
                "test_internal_overlap_fuzz": "function",
                "test_non_ndarray_inputs": "function",
                "view_element_first_byte": "function",
                "assert_copy_equivalent": "function",
                "TestUFunc": "class"
            },
            "test_multiarray": {
                "_aligned_zeros": "function",
                "TestFlags": "class",
                "TestHash": "class",
                "TestAttributes": "class",
                "TestArrayConstruction": "class",
                "TestAssignment": "class",
                "TestDtypedescr": "class",
                "TestZeroRank": "class",
                "TestScalarIndexing": "class",
                "TestCreation": "class",
                "TestStructured": "class",
                "TestBool": "class",
                "TestZeroSizeFlexible": "class",
                "TestMethods": "class",
                "TestCequenceMethods": "class",
                "TestBinop": "class",
                "TestTemporaryElide": "class",
                "TestCAPI": "class",
                "TestSubscripting": "class",
                "TestPickling": "class",
                "TestFancyIndexing": "class",
                "TestStringCompare": "class",
                "TestArgmax": "class",
                "TestArgmin": "class",
                "TestMinMax": "class",
                "TestNewaxis": "class",
                "TestClip": "class",
                "TestCompress": "class",
                "TestPutmask": "class",
                "TestTake": "class",
                "TestLexsort": "class",
                "TestIO": "class",
                "TestFromBuffer": "class",
                "TestFlat": "class",
                "TestResize": "class",
                "TestRecord": "class",
                "TestView": "class",
                "_mean": "function",
                "_var": "function",
                "_std": "function",
                "TestStats": "class",
                "TestVdot": "class",
                "TestDot": "class",
                "MatmulCommon": "class",
                "TestMatmul": "class",
                "TestMatmulOperator": "class",
                "test_matmul_inplace": "function",
                "test_matmul_axes": "function",
                "TestInner": "class",
                "TestAlen": "class",
                "TestChoose": "class",
                "TestRepeat": "class",
                "NEIGH_MODE": "variable",
                "TestNeighborhoodIter": "class",
                "TestStackedNeighborhoodIter": "class",
                "TestWarnings": "class",
                "TestMinScalarType": "class",
                "TestPEP3118Dtype": "class",
                "TestNewBufferProtocol": "class",
                "TestArrayAttributeDeletion": "class",
                "TestArrayInterface": "class",
                "test_interface_no_shape": "function",
                "test_array_interface_itemsize": "function",
                "test_array_interface_empty_shape": "function",
                "test_array_interface_offset": "function",
                "test_array_interface_unicode_typestr": "function",
                "test_flat_element_deletion": "function",
                "test_scalar_element_deletion": "function",
                "TestMemEventHook": "class",
                "TestMapIter": "class",
                "TestAsCArray": "class",
                "TestConversion": "class",
                "TestWhere": "class",
                "TestHashing": "class",
                "TestArrayPriority": "class",
                "TestBytestringArrayNonzero": "class",
                "TestUnicodeEncoding": "class",
                "TestUnicodeArrayNonzero": "class",
                "TestFormat": "class",
                "TestCTypes": "class",
                "TestWritebackIfCopy": "class",
                "TestArange": "class",
                "TestArrayFinalize": "class",
                "test_orderconverter_with_nonASCII_unicode_ordering": "function",
                "test_equal_override": "function",
                "test_npymath_complex": "function",
                "test_npymath_real": "function",
                "test_uintalignment_and_alignment": "function",
                "TestAlignment": "class",
                "test_getfield": "function"
            },
            "test_nditer": {
                "iter_multi_index": "function",
                "iter_indices": "function",
                "iter_iterindices": "function",
                "test_iter_refcount": "function",
                "test_iter_best_order": "function",
                "test_iter_c_order": "function",
                "test_iter_f_order": "function",
                "test_iter_c_or_f_order": "function",
                "test_iter_best_order_multi_index_1d": "function",
                "test_iter_best_order_multi_index_2d": "function",
                "test_iter_best_order_multi_index_3d": "function",
                "test_iter_best_order_c_index_1d": "function",
                "test_iter_best_order_c_index_2d": "function",
                "test_iter_best_order_c_index_3d": "function",
                "test_iter_best_order_f_index_1d": "function",
                "test_iter_best_order_f_index_2d": "function",
                "test_iter_best_order_f_index_3d": "function",
                "test_iter_no_inner_full_coalesce": "function",
                "test_iter_no_inner_dim_coalescing": "function",
                "test_iter_dim_coalescing": "function",
                "test_iter_broadcasting": "function",
                "test_iter_itershape": "function",
                "test_iter_broadcasting_errors": "function",
                "test_iter_flags_errors": "function",
                "test_iter_slice": "function",
                "test_iter_assign_mapping": "function",
                "test_iter_nbo_align_contig": "function",
                "test_iter_array_cast": "function",
                "test_iter_array_cast_errors": "function",
                "test_iter_scalar_cast": "function",
                "test_iter_scalar_cast_errors": "function",
                "test_iter_object_arrays_basic": "function",
                "test_iter_object_arrays_conversions": "function",
                "test_iter_common_dtype": "function",
                "test_iter_copy_if_overlap": "function",
                "test_iter_op_axes": "function",
                "test_iter_op_axes_errors": "function",
                "test_iter_copy": "function",
                "test_iter_allocate_output_simple": "function",
                "test_iter_allocate_output_buffered_readwrite": "function",
                "test_iter_allocate_output_itorder": "function",
                "test_iter_allocate_output_opaxes": "function",
                "test_iter_allocate_output_types_promotion": "function",
                "test_iter_allocate_output_types_byte_order": "function",
                "test_iter_allocate_output_types_scalar": "function",
                "test_iter_allocate_output_subtype": "function",
                "test_iter_allocate_output_errors": "function",
                "test_iter_remove_axis": "function",
                "test_iter_remove_multi_index_inner_loop": "function",
                "test_iter_iterindex": "function",
                "test_iter_iterrange": "function",
                "test_iter_buffering": "function",
                "test_iter_write_buffering": "function",
                "test_iter_buffering_delayed_alloc": "function",
                "test_iter_buffered_cast_simple": "function",
                "test_iter_buffered_cast_byteswapped": "function",
                "test_iter_buffered_cast_byteswapped_complex": "function",
                "test_iter_buffered_cast_structured_type": "function",
                "test_iter_buffered_cast_subarray": "function",
                "test_iter_buffering_badwriteback": "function",
                "test_iter_buffering_string": "function",
                "test_iter_buffering_growinner": "function",
                "test_iter_buffered_reduce_reuse": "function",
                "test_iter_no_broadcast": "function",
                "TestIterNested": "class",
                "test_iter_reduction_error": "function",
                "test_iter_reduction": "function",
                "test_iter_buffering_reduction": "function",
                "test_iter_buffering_reduction_reuse_reduce_loops": "function",
                "test_iter_writemasked_badinput": "function",
                "test_iter_writemasked": "function",
                "test_iter_non_writable_attribute_deletion": "function",
                "test_iter_writable_attribute_deletion": "function",
                "test_iter_element_deletion": "function",
                "test_iter_allocated_array_dtypes": "function",
                "test_0d_iter": "function",
                "test_object_iter_cleanup": "function",
                "test_object_iter_cleanup_reduce": "function",
                "test_object_iter_cleanup_large_reduce": "function",
                "test_iter_too_large": "function",
                "test_iter_too_large_with_multiindex": "function",
                "test_writebacks": "function",
                "test_close_equivalent": "function",
                "test_close_raises": "function",
                "test_warn_noclose": "function",
                "test_partial_iteration_cleanup": "function",
                "test_partial_iteration_error": "function"
            },
            "test_numeric": {
                "TestResize": "class",
                "TestNonarrayArgs": "class",
                "TestIsscalar": "class",
                "TestBoolScalar": "class",
                "TestBoolArray": "class",
                "TestBoolCmp": "class",
                "TestSeterr": "class",
                "TestFloatExceptions": "class",
                "TestTypes": "class",
                "NIterError": "class",
                "TestFromiter": "class",
                "TestNonzero": "class",
                "TestIndex": "class",
                "TestBinaryRepr": "class",
                "TestBaseRepr": "class",
                "TestArrayComparisons": "class",
                "assert_array_strict_equal": "function",
                "TestClip": "class",
                "TestAllclose": "class",
                "TestIsclose": "class",
                "TestStdVar": "class",
                "TestStdVarComplex": "class",
                "TestCreationFuncs": "class",
                "TestLikeFuncs": "class",
                "TestCorrelate": "class",
                "TestConvolve": "class",
                "TestArgwhere": "class",
                "TestStringFunction": "class",
                "TestRoll": "class",
                "TestRollaxis": "class",
                "TestMoveaxis": "class",
                "TestCross": "class",
                "test_outer_out_param": "function",
                "TestIndices": "class",
                "TestRequire": "class",
                "TestBroadcast": "class",
                "TestKeepdims": "class",
                "TestTensordot": "class"
            },
            "test_numerictypes": {
                "Pdescr": "variable",
                "PbufferT": "variable",
                "Ndescr": "variable",
                "NbufferT": "variable",
                "byteorder": "variable",
                "normalize_descr": "function",
                "CreateZeros": "class",
                "TestCreateZerosPlain": "class",
                "TestCreateZerosNested": "class",
                "CreateValues": "class",
                "TestCreateValuesPlainSingle": "class",
                "TestCreateValuesPlainMultiple": "class",
                "TestCreateValuesNestedSingle": "class",
                "TestCreateValuesNestedMultiple": "class",
                "ReadValuesPlain": "class",
                "TestReadValuesPlainSingle": "class",
                "TestReadValuesPlainMultiple": "class",
                "ReadValuesNested": "class",
                "TestReadValuesNestedSingle": "class",
                "TestReadValuesNestedMultiple": "class",
                "TestEmptyField": "class",
                "TestCommonType": "class",
                "TestMultipleFields": "class",
                "TestIsSubDType": "class",
                "TestSctypeDict": "class",
                "TestBitName": "class",
                "TestMaximumSctype": "class",
                "Test_sctype2char": "class",
                "test_issctype": "function",
                "TestDocStrings": "class",
                "TestScalarTypeNames": "class"
            },
            "test_overrides": {
                "requires_array_function": "variable",
                "_return_not_implemented": "function",
                "dispatched_one_arg": "function",
                "dispatched_two_arg": "function",
                "TestGetImplementingArgs": "class",
                "TestNDArrayArrayFunction": "class",
                "TestArrayFunctionDispatch": "class",
                "TestVerifyMatchingSignatures": "class",
                "_new_duck_type_and_implements": "function",
                "TestArrayFunctionImplementation": "class",
                "TestNDArrayMethods": "class",
                "TestNumPyFunctions": "class",
                "TestArrayLike": "class"
            },
            "test_print": {
                "_REF": "variable",
                "test_float_types": "function",
                "test_nan_inf_float": "function",
                "test_complex_types": "function",
                "test_complex_inf_nan": "function",
                "_test_redirected_print": "function",
                "test_float_type_print": "function",
                "test_complex_type_print": "function",
                "test_scalar_format": "function",
                "TestCommaDecimalPointLocale": "class"
            },
            "test_protocols": {
                "test_getattr_warning": "function",
                "test_array_called": "function"
            },
            "test_records": {
                "TestFromrecords": "class",
                "TestPathUsage": "class",
                "TestRecord": "class",
                "test_find_duplicate": "function"
            },
            "test_regression": {
                "TestRegression": "class"
            },
            "test_scalarbuffer": {
                "scalars_and_codes": "variable",
                "TestScalarPEP3118": "class"
            },
            "test_scalarinherit": {
                "A": "class",
                "B": "class",
                "C": "class",
                "D": "class",
                "B0": "class",
                "C0": "class",
                "HasNew": "class",
                "B1": "class",
                "TestInherit": "class",
                "TestCharacter": "class"
            },
            "test_scalarmath": {
                "types": "variable",
                "floating_types": "variable",
                "complex_floating_types": "variable",
                "TestTypes": "class",
                "TestBaseMath": "class",
                "TestPower": "class",
                "floordiv_and_mod": "function",
                "_signs": "function",
                "TestModulus": "class",
                "TestComplexDivision": "class",
                "TestConversion": "class",
                "TestRepr": "class",
                "TestMultiply": "class",
                "TestNegative": "class",
                "TestSubtract": "class",
                "TestAbs": "class",
                "TestBitShifts": "class",
                "recursionlimit": "function",
                "objecty_things": "variable",
                "reasonable_operators_for_scalars": "variable",
                "test_operator_object_left": "function",
                "test_operator_object_right": "function",
                "test_operator_scalars": "function",
                "test_longdouble_inf_loop": "function",
                "test_clongdouble_inf_loop": "function"
            },
            "test_scalarprint": {
                "TestRealScalars": "class"
            },
            "test_scalar_ctors": {
                "TestFromString": "class",
                "TestExtraArgs": "class",
                "TestFromInt": "class",
                "int_types": "variable",
                "uint_types": "variable",
                "float_types": "variable",
                "cfloat_types": "variable",
                "TestArrayFromScalar": "class"
            },
            "test_scalar_methods": {
                "TestAsIntegerRatio": "class"
            },
            "test_shape_base": {
                "TestAtleast1d": "class",
                "TestAtleast2d": "class",
                "TestAtleast3d": "class",
                "TestHstack": "class",
                "TestVstack": "class",
                "TestConcatenate": "class",
                "test_stack": "function",
                "TestBlock": "class",
                "test_block_dispatcher": "function"
            },
            "test_simd": {
                "_Test_Utility": "class",
                "_SIMD_INT": "class",
                "_SIMD_FP": "class",
                "_SIMD_ALL": "class",
                "int_sfx": "variable",
                "all_sfx": "variable",
                "tests_registry": "variable"
            },
            "test_simd_module": {
                "npyvs": "variable",
                "unsigned_sfx": "variable",
                "signed_sfx": "variable",
                "fp_sfx": "variable",
                "int_sfx": "variable",
                "all_sfx": "variable",
                "Test_SIMD_MODULE": "class"
            },
            "test_ufunc": {
                "UNARY_UFUNCS": "variable",
                "UNARY_OBJECT_UFUNCS": "variable",
                "TestUfuncKwargs": "class",
                "TestUfuncGenericLoops": "class",
                "_pickleable_module_global": "function",
                "TestUfunc": "class",
                "test_ufunc_types": "function",
                "test_ufunc_noncontiguous": "function",
                "test_ufunc_warn_with_nan": "function",
                "test_ufunc_casterrors": "function",
                "test_reduce_casterrors": "function"
            },
            "test_umath": {
                "on_powerpc": "function",
                "bad_arcsinh": "function",
                "_FilterInvalids": "class",
                "TestConstants": "class",
                "TestOut": "class",
                "TestComparisons": "class",
                "TestAdd": "class",
                "TestDivision": "class",
                "floor_divide_and_remainder": "function",
                "_signs": "function",
                "TestRemainder": "class",
                "TestCbrt": "class",
                "TestPower": "class",
                "TestFloat_power": "class",
                "TestLog2": "class",
                "TestExp2": "class",
                "TestLogAddExp2": "class",
                "TestLog": "class",
                "TestExp": "class",
                "TestSpecialFloats": "class",
                "TestFPClass": "class",
                "TestLDExp": "class",
                "TestFRExp": "class",
                "avx_ufuncs": "variable",
                "TestAVXUfuncs": "class",
                "TestAVXFloat32Transcendental": "class",
                "TestLogAddExp": "class",
                "TestLog1p": "class",
                "TestExpm1": "class",
                "TestHypot": "class",
                "assert_hypot_isnan": "function",
                "assert_hypot_isinf": "function",
                "TestHypotSpecialValues": "class",
                "assert_arctan2_isnan": "function",
                "assert_arctan2_ispinf": "function",
                "assert_arctan2_isninf": "function",
                "assert_arctan2_ispzero": "function",
                "assert_arctan2_isnzero": "function",
                "TestArctan2SpecialValues": "class",
                "TestLdexp": "class",
                "TestMaximum": "class",
                "TestMinimum": "class",
                "TestFmax": "class",
                "TestFmin": "class",
                "TestBool": "class",
                "TestBitwiseUFuncs": "class",
                "TestInt": "class",
                "TestFloatingPoint": "class",
                "TestDegrees": "class",
                "TestRadians": "class",
                "TestHeavside": "class",
                "TestSign": "class",
                "TestMinMax": "class",
                "TestAbsoluteNegative": "class",
                "TestPositive": "class",
                "TestSpecialMethods": "class",
                "TestChoose": "class",
                "TestRationalFunctions": "class",
                "TestRoundingFunctions": "class",
                "TestComplexFunctions": "class",
                "TestAttributes": "class",
                "TestSubclass": "class",
                "TestFrompyfunc": "class",
                "_check_branch_cut": "function",
                "test_copysign": "function",
                "_test_nextafter": "function",
                "test_nextafter": "function",
                "test_nextafterf": "function",
                "@pytest.mark.skipif(np.finfo(np.double)": "variable",
                "test_nextafterl": "function",
                "test_nextafter_0": "function",
                "_test_spacing": "function",
                "test_spacing": "function",
                "test_spacingf": "function",
                "test_spacingl": "function",
                "test_spacing_gfortran": "function",
                "test_nextafter_vs_spacing": "function",
                "test_pos_nan": "function",
                "test_reduceat": "function",
                "test_reduceat_empty": "function",
                "test_complex_nan_comparisons": "function",
                "test_rint_big_int": "function",
                "test_memoverlap_accumulate": "function",
                "test_signaling_nan_exceptions": "function",
                "test_outer_subclass_preserve": "function",
                "test_outer_bad_subclass": "function",
                "test_outer_exceeds_maxdims": "function"
            },
            "test_umath_accuracy": {
                "IS_AVX": "variable",
                "runtest": "variable",
                "platform_skip": "variable",
                "convert": "function",
                "str_to_float": "variable",
                "files": "variable",
                "TestAccuracy": "class"
            },
            "test_umath_complex": {
                "xfail_complex_tests": "variable",
                "platform_skip": "variable",
                "TestCexp": "class",
                "TestClog": "class",
                "TestCsqrt": "class",
                "TestCpow": "class",
                "TestCabs": "class",
                "TestCarg": "class",
                "check_real_value": "function",
                "check_complex_value": "function",
                "TestSpecialComplexAVX": "class",
                "TestComplexAbsoluteAVX": "class",
                "TestComplexAbsoluteMixedDTypes": "class"
            },
            "test_unicode": {
                "buffer_length": "function",
                "ucs2_value": "variable",
                "ucs4_value": "variable",
                "test_string_cast": "function",
                "CreateZeros": "class",
                "TestCreateZeros_1": "class",
                "TestCreateZeros_2": "class",
                "TestCreateZeros_1009": "class",
                "CreateValues": "class",
                "TestCreateValues_1_UCS2": "class",
                "TestCreateValues_1_UCS4": "class",
                "TestCreateValues_2_UCS2": "class",
                "TestCreateValues_2_UCS4": "class",
                "TestCreateValues_1009_UCS2": "class",
                "TestCreateValues_1009_UCS4": "class",
                "AssignValues": "class",
                "TestAssignValues_1_UCS2": "class",
                "TestAssignValues_1_UCS4": "class",
                "TestAssignValues_2_UCS2": "class",
                "TestAssignValues_2_UCS4": "class",
                "TestAssignValues_1009_UCS2": "class",
                "TestAssignValues_1009_UCS4": "class",
                "ByteorderValues": "class",
                "TestByteorder_1_UCS2": "class",
                "TestByteorder_1_UCS4": "class",
                "TestByteorder_2_UCS2": "class",
                "TestByteorder_2_UCS4": "class",
                "TestByteorder_1009_UCS2": "class",
                "TestByteorder_1009_UCS4": "class"
            },
            "test__exceptions": {
                "_ArrayMemoryError": "variable",
                "_UFuncNoLoopError": "variable",
                "TestArrayMemoryError": "class",
                "TestUFuncNoLoopError": "class"
            },
            "_locales": {
                "__ALL__": "variable",
                "find_comma_decimal_point_locale": "function",
                "CommaDecimalPointLocale": "class"
            }
        },
        "arrayprint": {
            "__all__": "variable",
            "__docformat__": "variable",
            "_format_options": "variable",
            "_make_options_dict": "function",
            "set_printoptions": "function",
            "get_printoptions": "function",
            "printoptions": "function",
            "_leading_trailing": "function",
            "_object_format": "function",
            "repr_format": "function",
            "str_format": "function",
            "_get_formatdict": "function",
            "_get_format_function": "function",
            "_recursive_guard": "function",
            "_array2string": "function",
            "_array2string_dispatcher": "function",
            "array2string": "function",
            "_extendLine": "function",
            "_extendLine_pretty": "function",
            "_formatArray": "function",
            "_none_or_positive_arg": "function",
            "FloatingFormat": "class",
            "format_float_scientific": "function",
            "format_float_positional": "function",
            "IntegerFormat": "class",
            "BoolFormat": "class",
            "ComplexFloatingFormat": "class",
            "_TimelikeFormat": "class",
            "DatetimeFormat": "class",
            "TimedeltaFormat": "class",
            "SubArrayFormat": "class",
            "StructuredVoidFormat": "class",
            "_void_scalar_repr": "function",
            "_typelessdata": "variable",
            "dtype_is_implied": "function",
            "dtype_short_repr": "function",
            "_array_repr_implementation": "function",
            "_array_repr_dispatcher": "function",
            "array_repr": "function",
            "_guarded_repr_or_str": "function",
            "_array_str_implementation": "function",
            "_array_str_dispatcher": "function",
            "array_str": "function",
            "_array2string_impl": "variable",
            "_default_array_str": "variable",
            "_default_array_repr": "variable",
            "set_string_function": "function"
        },
        "defchararray": {
            "__all__": "variable",
            "_globalvar": "variable",
            "array_function_dispatch": "variable",
            "_use_unicode": "function",
            "_to_string_or_unicode_array": "function",
            "_clean_args": "function",
            "_get_num_chars": "function",
            "_binary_op_dispatcher": "function",
            "equal": "function",
            "not_equal": "function",
            "greater_equal": "function",
            "less_equal": "function",
            "greater": "function",
            "less": "function",
            "_unary_op_dispatcher": "function",
            "str_len": "function",
            "add": "function",
            "_multiply_dispatcher": "function",
            "multiply": "function",
            "_mod_dispatcher": "function",
            "mod": "function",
            "capitalize": "function",
            "_center_dispatcher": "function",
            "center": "function",
            "_count_dispatcher": "function",
            "count": "function",
            "_code_dispatcher": "function",
            "decode": "function",
            "encode": "function",
            "_endswith_dispatcher": "function",
            "endswith": "function",
            "_expandtabs_dispatcher": "function",
            "expandtabs": "function",
            "find": "function",
            "index": "function",
            "isalnum": "function",
            "isalpha": "function",
            "isdigit": "function",
            "islower": "function",
            "isspace": "function",
            "istitle": "function",
            "isupper": "function",
            "_join_dispatcher": "function",
            "join": "function",
            "_just_dispatcher": "function",
            "ljust": "function",
            "lower": "function",
            "_strip_dispatcher": "function",
            "lstrip": "function",
            "_partition_dispatcher": "function",
            "partition": "function",
            "_replace_dispatcher": "function",
            "replace": "function",
            "rfind": "function",
            "rindex": "function",
            "rjust": "function",
            "rpartition": "function",
            "_split_dispatcher": "function",
            "rsplit": "function",
            "rstrip": "function",
            "split": "function",
            "_splitlines_dispatcher": "function",
            "splitlines": "function",
            "_startswith_dispatcher": "function",
            "startswith": "function",
            "strip": "function",
            "swapcase": "function",
            "title": "function",
            "_translate_dispatcher": "function",
            "translate": "function",
            "upper": "function",
            "_zfill_dispatcher": "function",
            "zfill": "function",
            "isnumeric": "function",
            "isdecimal": "function",
            "chararray": "class",
            "array": "function",
            "asarray": "function"
        },
        "einsumfunc": {
            "__all__": "variable",
            "einsum_symbols": "variable",
            "einsum_symbols_set": "variable",
            "_flop_count": "function",
            "_compute_size_by_dict": "function",
            "_find_contraction": "function",
            "_optimal_path": "function",
            "_parse_possible_contraction": "function",
            "_update_other_results": "function",
            "_greedy_path": "function",
            "_can_dot": "function",
            "_parse_einsum_input": "function",
            "_einsum_path_dispatcher": "function",
            "einsum_path": "function",
            "_einsum_dispatcher": "function",
            "einsum": "function"
        },
        "fromnumeric": {
            "_dt_": "variable",
            "__all__": "variable",
            "_gentype": "variable",
            "_sum_": "variable",
            "array_function_dispatch": "variable",
            "_wrapit": "function",
            "_wrapfunc": "function",
            "_wrapreduction": "function",
            "_take_dispatcher": "function",
            "take": "function",
            "_reshape_dispatcher": "function",
            "reshape": "function",
            "_choose_dispatcher": "function",
            "choose": "function",
            "_repeat_dispatcher": "function",
            "repeat": "function",
            "_put_dispatcher": "function",
            "put": "function",
            "_swapaxes_dispatcher": "function",
            "swapaxes": "function",
            "_transpose_dispatcher": "function",
            "transpose": "function",
            "_partition_dispatcher": "function",
            "partition": "function",
            "_argpartition_dispatcher": "function",
            "argpartition": "function",
            "_sort_dispatcher": "function",
            "sort": "function",
            "_argsort_dispatcher": "function",
            "argsort": "function",
            "_argmax_dispatcher": "function",
            "argmax": "function",
            "_argmin_dispatcher": "function",
            "argmin": "function",
            "_searchsorted_dispatcher": "function",
            "searchsorted": "function",
            "_resize_dispatcher": "function",
            "resize": "function",
            "_squeeze_dispatcher": "function",
            "squeeze": "function",
            "_diagonal_dispatcher": "function",
            "diagonal": "function",
            "_trace_dispatcher": "function",
            "trace": "function",
            "_ravel_dispatcher": "function",
            "ravel": "function",
            "_nonzero_dispatcher": "function",
            "nonzero": "function",
            "_shape_dispatcher": "function",
            "shape": "function",
            "_compress_dispatcher": "function",
            "compress": "function",
            "_clip_dispatcher": "function",
            "clip": "function",
            "_sum_dispatcher": "function",
            "sum": "function",
            "_any_dispatcher": "function",
            "any": "function",
            "_all_dispatcher": "function",
            "all": "function",
            "_cumsum_dispatcher": "function",
            "cumsum": "function",
            "_ptp_dispatcher": "function",
            "ptp": "function",
            "_amax_dispatcher": "function",
            "amax": "function",
            "_amin_dispatcher": "function",
            "amin": "function",
            "_alen_dispathcer": "function",
            "alen": "function",
            "_prod_dispatcher": "function",
            "prod": "function",
            "_cumprod_dispatcher": "function",
            "cumprod": "function",
            "_ndim_dispatcher": "function",
            "ndim": "function",
            "_size_dispatcher": "function",
            "size": "function",
            "_around_dispatcher": "function",
            "around": "function",
            "_mean_dispatcher": "function",
            "mean": "function",
            "_std_dispatcher": "function",
            "std": "function",
            "_var_dispatcher": "function",
            "var": "function",
            "round_": "function",
            "product": "function",
            "cumproduct": "function",
            "sometrue": "function",
            "alltrue": "function"
        },
        "function_base": {
            "__all__": "variable",
            "array_function_dispatch": "variable",
            "_linspace_dispatcher": "function",
            "linspace": "function",
            "_logspace_dispatcher": "function",
            "logspace": "function",
            "_geomspace_dispatcher": "function",
            "geomspace": "function",
            "_needs_add_docstring": "function",
            "_add_docstring": "function",
            "add_newdoc": "function"
        },
        "generate_numpy_api": {
            "h_template": "variable",
            "c_api_header": "variable"
        },
        "getlimits": {
            "__all__": "variable",
            "_fr0": "function",
            "_fr1": "function",
            "MachArLike": "class",
            "_convert_to_float": "variable",
            "_title_fmt": "variable",
            "_MACHAR_PARAMS": "variable",
            "_KNOWN_TYPES": "variable",
            "_register_type": "function",
            "_float_ma": "variable",
            "_register_known_types": "function",
            "_get_machar": "function",
            "_discovered_machar": "function",
            "finfo": "class",
            "iinfo": "class"
        },
        "machar": {
            "__all__": "variable",
            "MachAr": "class"
        },
        "memmap": {
            "__all__": "variable",
            "dtypedescr": "variable",
            "valid_filemodes": "variable",
            "writeable_filemodes": "variable",
            "mode_equivalents": "variable",
            "memmap": "class"
        },
        "multiarray": {
            "__all__": "variable",
            "_reconstruct.__module__": "variable",
            "scalar.__module__": "variable",
            "arange.__module__": "variable",
            "array.__module__": "variable",
            "datetime_data.__module__": "variable",
            "empty.__module__": "variable",
            "frombuffer.__module__": "variable",
            "fromfile.__module__": "variable",
            "fromiter.__module__": "variable",
            "frompyfunc.__module__": "variable",
            "fromstring.__module__": "variable",
            "geterrobj.__module__": "variable",
            "may_share_memory.__module__": "variable",
            "nested_iters.__module__": "variable",
            "promote_types.__module__": "variable",
            "set_numeric_ops.__module__": "variable",
            "seterrobj.__module__": "variable",
            "zeros.__module__": "variable",
            "array_function_from_c_func_and_dispatcher": "variable",
            "empty_like": "function",
            "concatenate": "function",
            "inner": "function",
            "where": "function",
            "lexsort": "function",
            "can_cast": "function",
            "min_scalar_type": "function",
            "result_type": "function",
            "dot": "function",
            "vdot": "function",
            "bincount": "function",
            "ravel_multi_index": "function",
            "unravel_index": "function",
            "copyto": "function",
            "putmask": "function",
            "packbits": "function",
            "unpackbits": "function",
            "shares_memory": "function",
            "may_share_memory": "function",
            "is_busday": "function",
            "busday_offset": "function",
            "busday_count": "function",
            "datetime_as_string": "function"
        },
        "numeric": {
            "bitwise_not": "variable",
            "ufunc": "variable",
            "newaxis": "variable",
            "array_function_dispatch": "variable",
            "__all__": "variable",
            "ComplexWarning": "class",
            "_zeros_like_dispatcher": "function",
            "zeros_like": "function",
            "_ones_dispatcher": "function",
            "ones": "function",
            "_ones_with_like": "variable",
            "_ones_like_dispatcher": "function",
            "ones_like": "function",
            "_full_dispatcher": "function",
            "full": "function",
            "_full_with_like": "variable",
            "_full_like_dispatcher": "function",
            "full_like": "function",
            "_count_nonzero_dispatcher": "function",
            "count_nonzero": "function",
            "isfortran": "function",
            "_argwhere_dispatcher": "function",
            "argwhere": "function",
            "_flatnonzero_dispatcher": "function",
            "flatnonzero": "function",
            "_mode_from_name_dict": "variable",
            "_mode_from_name": "function",
            "_correlate_dispatcher": "function",
            "correlate": "function",
            "_convolve_dispatcher": "function",
            "convolve": "function",
            "_outer_dispatcher": "function",
            "outer": "function",
            "_tensordot_dispatcher": "function",
            "tensordot": "function",
            "_roll_dispatcher": "function",
            "roll": "function",
            "_rollaxis_dispatcher": "function",
            "rollaxis": "function",
            "normalize_axis_tuple": "function",
            "_moveaxis_dispatcher": "function",
            "moveaxis": "function",
            "_move_axis_to_0": "function",
            "_cross_dispatcher": "function",
            "cross": "function",
            "little_endian": "variable",
            "indices": "function",
            "_fromfunction_dispatcher": "function",
            "fromfunction": "function",
            "_fromfunction_with_like": "variable",
            "_frombuffer": "function",
            "isscalar": "function",
            "binary_repr": "function",
            "base_repr": "function",
            "_maketup": "function",
            "_identity_dispatcher": "function",
            "identity": "function",
            "_identity_with_like": "variable",
            "_allclose_dispatcher": "function",
            "allclose": "function",
            "_isclose_dispatcher": "function",
            "isclose": "function",
            "_array_equal_dispatcher": "function",
            "array_equal": "function",
            "_array_equiv_dispatcher": "function",
            "array_equiv": "function",
            "Inf": "variable",
            "nan": "variable",
            "False_": "variable",
            "True_": "variable",
            "extend_all": "function"
        },
        "numerictypes": {
            "__all__": "variable",
            "generic": "variable",
            "genericTypeRank": "variable",
            "maximum_sctype": "function",
            "issctype": "function",
            "obj2sctype": "function",
            "issubclass_": "function",
            "issubsctype": "function",
            "issubdtype": "function",
            "_typedict": "class",
            "nbytes": "variable",
            "_alignment": "variable",
            "_maxvals": "variable",
            "_minvals": "variable",
            "_construct_lookups": "function",
            "sctype2char": "function",
            "cast": "variable",
            "ScalarType": "variable",
            "typecodes": "variable",
            "typeDict": "variable",
            "_kind_list": "variable",
            "__test_types": "variable",
            "__len_test_types": "variable",
            "_find_common_coerce": "function",
            "_can_coerce_all": "function",
            "_register_types": "function",
            "find_common_type": "function"
        },
        "records": {
            "__all__": "variable",
            "ndarray": "variable",
            "_byteorderconv": "variable",
            "numfmt": "variable",
            "_OrderedCounter": "class",
            "find_duplicate": "function",
            "format_parser": "class",
            "record": "class",
            "recarray": "class",
            "_deprecate_shape_0_as_None": "function",
            "fromarrays": "function",
            "fromrecords": "function",
            "fromstring": "function",
            "get_remaining_size": "function",
            "fromfile": "function",
            "array": "function"
        },
        "setup": {
            "NPY_RELAXED_STRIDES_CHECKING": "variable",
            "NPY_RELAXED_STRIDES_DEBUG": "variable",
            "NPY_USE_NEW_CASTINGIMPL": "variable",
            "CallOnceOnly": "class",
            "pythonlib_dir": "function",
            "is_npy_no_signal": "function",
            "is_npy_no_smp": "function",
            "win32_checks": "function",
            "check_math_capabilities": "function",
            "check_complex": "function",
            "check_ieee_macros": "function",
            "check_types": "function",
            "check_mathlib": "function",
            "visibility_define": "function",
            "configuration": "function"
        },
        "setup_common": {
            "C_ABI_VERSION": "variable",
            "C_API_VERSION": "variable",
            "MismatchCAPIWarning": "class",
            "is_released": "function",
            "get_api_versions": "function",
            "check_api_version": "function",
            "MANDATORY_FUNCS": "variable",
            "OPTIONAL_STDFUNCS": "variable",
            "OPTIONAL_HEADERS": "variable",
            "OPTIONAL_INTRINSICS": "variable",
            "OPTIONAL_FUNCTION_ATTRIBUTES": "variable",
            "OPTIONAL_FUNCTION_ATTRIBUTES_WITH_INTRINSICS": "variable",
            "OPTIONAL_VARIABLE_ATTRIBUTES": "variable",
            "OPTIONAL_STDFUNCS_MAYBE": "variable",
            "C99_FUNCS": "variable",
            "C99_FUNCS_SINGLE": "variable",
            "C99_FUNCS_EXTENDED": "variable",
            "C99_COMPLEX_TYPES": "variable",
            "C99_COMPLEX_FUNCS": "variable",
            "fname2def": "function",
            "sym2def": "function",
            "type2def": "function",
            "check_long_double_representation": "function",
            "LONG_DOUBLE_REPRESENTATION_SRC": "variable"
        },
        "shape_base": {
            "__all__": "variable",
            "array_function_dispatch": "variable",
            "_atleast_1d_dispatcher": "function",
            "atleast_1d": "function",
            "_atleast_2d_dispatcher": "function",
            "atleast_2d": "function",
            "_atleast_3d_dispatcher": "function",
            "atleast_3d": "function",
            "_arrays_for_stack_dispatcher": "function",
            "_vhstack_dispatcher": "function",
            "vstack": "function",
            "hstack": "function",
            "_stack_dispatcher": "function",
            "stack": "function",
            "_size": "variable",
            "_ndim": "variable",
            "_concatenate": "variable",
            "_block_format_index": "function",
            "_block_check_depths_match": "function",
            "_atleast_nd": "function",
            "_accumulate": "function",
            "_concatenate_shapes": "function",
            "_block_info_recursion": "function",
            "_block": "function",
            "_block_dispatcher": "function",
            "block": "function",
            "_block_setup": "function",
            "_block_slicing": "function",
            "_block_concatenate": "function"
        },
        "umath": {
            "__all__": "variable"
        },
        "_add_newdocs": {
            "refer_to_array_attribute": "function"
        },
        "_add_newdocs_scalars": {
            "numeric_type_aliases": "function",
            "possible_aliases": "variable",
            "add_newdoc_for_scalar_type": "function"
        },
        "_asarray": {
            "__all__": "variable",
            "_asarray_dispatcher": "function",
            "asarray": "function",
            "_asarray_with_like": "variable",
            "asanyarray": "function",
            "_asanyarray_with_like": "variable",
            "_asarray_contiguous_fortran_dispatcher": "function",
            "ascontiguousarray": "function",
            "_ascontiguousarray_with_like": "variable",
            "asfortranarray": "function",
            "_asfortranarray_with_like": "variable",
            "_require_dispatcher": "function",
            "require": "function",
            "_require_with_like": "variable"
        },
        "_dtype": {
            "_kind_to_stem": "variable",
            "_kind_name": "function",
            "__str__": "function",
            "__repr__": "function",
            "_unpack_field": "function",
            "_isunsized": "function",
            "_construction_repr": "function",
            "_scalar_str": "function",
            "_byte_order_str": "function",
            "_datetime_metadata_str": "function",
            "_struct_dict_str": "function",
            "_is_packed": "function",
            "_struct_list_str": "function",
            "_struct_str": "function",
            "_subarray_str": "function",
            "_name_includes_bit_suffix": "function",
            "_name_get": "function"
        },
        "_dtype_ctypes": {
            "_from_ctypes_array": "function",
            "_from_ctypes_structure": "function",
            "_from_ctypes_scalar": "function",
            "_from_ctypes_union": "function",
            "dtype_from_ctypes_type": "function"
        },
        "_exceptions": {
            "_unpack_tuple": "function",
            "_display_as_base": "function",
            "UFuncTypeError": "class",
            "_UFuncBinaryResolutionError": "class",
            "_UFuncNoLoopError": "class",
            "_UFuncCastingError": "class",
            "_UFuncInputCastingError": "class",
            "_UFuncOutputCastingError": "class",
            "TooHardError": "class",
            "AxisError": "class",
            "_ArrayMemoryError": "class"
        },
        "_internal": {
            "IS_PYPY": "variable",
            "_makenames_list": "function",
            "_usefields": "function",
            "_array_descr": "function",
            "_reconstruct": "function",
            "format_re": "variable",
            "sep_re": "variable",
            "space_re": "variable",
            "_convorder": "variable",
            "_commastring": "function",
            "dummy_ctype": "class",
            "_getintp_ctype": "function",
            "_getintp_ctype.cache": "variable",
            "_missing_ctypes": "class",
            "_ctypes": "class",
            "_newnames": "function",
            "_copy_fields": "function",
            "_getfield_is_safe": "function",
            "_view_is_safe": "function",
            "_pep3118_native_map": "variable",
            "_pep3118_native_typechars": "variable",
            "_pep3118_standard_map": "variable",
            "_pep3118_standard_typechars": "variable",
            "_pep3118_unsupported_map": "variable",
            "_Stream": "class",
            "_dtype_from_pep3118": "function",
            "__dtype_from_pep3118": "function",
            "_fix_names": "function",
            "_add_trailing_padding": "function",
            "_prod": "function",
            "_gcd": "function",
            "_lcm": "function",
            "array_ufunc_errmsg_formatter": "function",
            "array_function_errmsg_formatter": "function",
            "_ufunc_doc_signature_formatter": "function",
            "npy_ctypes_check": "function",
            "recursive": "class"
        },
        "_methods": {
            "umr_maximum": "variable",
            "umr_minimum": "variable",
            "umr_sum": "variable",
            "umr_prod": "variable",
            "umr_any": "variable",
            "umr_all": "variable",
            "_complex_to_float": "variable",
            "_amax": "function",
            "_amin": "function",
            "_sum": "function",
            "_prod": "function",
            "_any": "function",
            "_all": "function",
            "_count_reduce_items": "function",
            "_clip_dep_is_scalar_nan": "function",
            "_clip_dep_is_byte_swapped": "function",
            "_clip_dep_invoke_with_casting": "function",
            "_clip": "function",
            "_mean": "function",
            "_var": "function",
            "_std": "function",
            "_ptp": "function",
            "_dump": "function",
            "_dumps": "function"
        },
        "_string_helpers": {
            "_all_chars": "variable",
            "_ascii_upper": "variable",
            "_ascii_lower": "variable",
            "LOWER_TABLE": "variable",
            "UPPER_TABLE": "variable",
            "english_lower": "function",
            "english_upper": "function",
            "english_capitalize": "function"
        },
        "_type_aliases": {
            "sctypeDict": "variable",
            "allTypes": "variable",
            "_abstract_types": "variable",
            "_concrete_typeinfo": "variable",
            "_concrete_types": "variable",
            "_bits_of": "function",
            "bitname": "function",
            "_add_types": "function",
            "_int_ctypes": "variable",
            "_uint_ctypes": "variable",
            "_add_aliases": "function",
            "_add_integer_aliases": "function",
            "void": "variable",
            "_set_up_aliases": "function",
            "sctypes": "variable",
            "_add_array_type": "function",
            "_set_array_types": "function",
            "_toadd": "variable"
        },
        "_ufunc_config": {
            "__all__": "variable",
            "_errdict": "variable",
            "_errdict_rev": "variable",
            "seterr": "function",
            "geterr": "function",
            "setbufsize": "function",
            "getbufsize": "function",
            "seterrcall": "function",
            "geterrcall": "function",
            "_unspecified": "class",
            "_Unspecified": "variable",
            "errstate": "class",
            "_setdef": "function"
        },
        "": {
            "env_added": "variable"
        }
    },
    "distutils": {
        "command": {
            "autodist": {
                "check_inline": "function",
                "check_restrict": "function",
                "check_compiler_gcc": "function",
                "check_gcc_version_at_least": "function",
                "check_gcc_function_attribute": "function",
                "check_gcc_function_attribute_with_intrinsics": "function",
                "check_gcc_variable_attribute": "function"
            },
            "bdist_rpm": {
                "bdist_rpm": "class"
            },
            "build": {
                "build": "class"
            },
            "build_clib": {
                "_l": "variable",
                "build_clib": "class"
            },
            "build_ext": {
                "build_ext ": "class"
            },
            "build_py": {
                "build_py": "class"
            },
            "build_scripts": {
                "build_scripts": "class"
            },
            "build_src": {
                "subst_vars": "function",
                "build_src": "class",
                "_f_pyf_ext_match": "variable",
                "_header_ext_match": "variable",
                "_swig_module_name_match": "variable",
                "_has_c_header": "variable",
                "_has_cpp_header": "variable",
                "get_swig_target": "function",
                "get_swig_modulename": "function",
                "_find_swig_target": "function",
                "_f2py_module_name_match": "variable",
                "_f2py_user_module_name_match": "variable",
                "get_f2py_modulename": "function"
            },
            "config": {
                "LANG_EXT['f77']": "variable",
                "LANG_EXT['f90']": "variable",
                "config": "class",
                "GrabStdout": "class"
            },
            "config_compiler": {
                "show_fortran_compilers": "function",
                "config_fc": "class",
                "config_cc": "class"
            },
            "develop": {
                "develop": "class"
            },
            "egg_info": {
                "egg_info": "class"
            },
            "install": {
                "old_install": "variable",
                "install": "class"
            },
            "install_clib": {
                "install_clib": "class"
            },
            "install_data": {
                "have_setuptools": "variable",
                "install_data ": "class"
            },
            "install_headers": {
                "install_headers ": "class"
            },
            "sdist": {
                "sdist": "class"
            },
            "": {
                "test_na_writable_attributes_deletion": "function",
                "__revision__": "variable",
                "distutils_all": "variable",
                "__all__": "variable"
            }
        },
        "fcompiler": {
            "absoft": {
                "compilers": "variable",
                "AbsoftFCompiler": "class"
            },
            "compaq": {
                "compilers": "variable",
                "CompaqFCompiler": "class",
                "CompaqVisualFCompiler": "class"
            },
            "environment": {
                "__metaclass__": "variable",
                "EnvironmentConfig": "class"
            },
            "fujitsu": {
                "compilers": "variable",
                "FujitsuFCompiler": "class"
            },
            "g95": {
                "compilers": "variable",
                "G95FCompiler": "class"
            },
            "gnu": {
                "compilers": "variable",
                "TARGET_R": "variable",
                "is_win64": "function",
                "GnuFCompiler": "class",
                "Gnu95FCompiler": "class",
                "_can_target": "function"
            },
            "hpux": {
                "compilers": "variable",
                "HPUXFCompiler": "class"
            },
            "ibm": {
                "compilers": "variable",
                "IBMFCompiler": "class"
            },
            "intel": {
                "compilers": "variable",
                "intel_version_match": "function",
                "BaseIntelFCompiler": "class",
                "IntelFCompiler": "class",
                "IntelItaniumFCompiler": "class",
                "IntelEM64TFCompiler": "class",
                "IntelVisualFCompiler": "class",
                "IntelItaniumVisualFCompiler": "class",
                "IntelEM64VisualFCompiler": "class"
            },
            "lahey": {
                "compilers": "variable",
                "LaheyFCompiler": "class"
            },
            "mips": {
                "compilers": "variable",
                "MIPSFCompiler": "class"
            },
            "nag": {
                "compilers": "variable",
                "BaseNAGFCompiler": "class",
                "NAGFCompiler": "class",
                "NAGFORCompiler": "class"
            },
            "none": {
                "compilers": "variable",
                "NoneFCompiler": "class"
            },
            "nv": {
                "compilers": "variable",
                "NVHPCFCompiler": "class"
            },
            "pathf95": {
                "compilers": "variable",
                "PathScaleFCompiler": "class"
            },
            "pg": {
                "compilers": "variable",
                "PGroupFCompiler": "class",
                "PGroupFlangCompiler": "class"
            },
            "sun": {
                "compilers": "variable",
                "SunFCompiler": "class"
            },
            "vast": {
                "compilers": "variable",
                "VastFCompiler": "class"
            },
            "": {
                "__all__": "variable",
                "__metaclass__": "variable",
                "CompilerNotFound": "class",
                "flaglist": "function",
                "str2bool": "function",
                "is_sequence_of_strings": "function",
                "FCompiler": "class",
                "_default_compilers": "variable",
                "fcompiler_class": "variable",
                "fcompiler_aliases": "variable",
                "load_all_fcompiler_classes": "function",
                "_find_existing_fcompiler": "function",
                "available_fcompilers_for_platform": "function",
                "get_default_fcompiler": "function",
                "failed_fcompilers": "variable",
                "new_fcompiler": "function",
                "show_fcompilers": "function",
                "dummy_fortran_file": "function",
                "is_f_file": "variable",
                "_has_f_header": "variable",
                "_has_f90_header": "variable",
                "_has_fix_header": "variable",
                "_free_f90_start": "variable",
                "is_free_format": "function",
                "has_f90_header": "function",
                "_f77flags_re": "variable",
                "get_f77flags": "function"
            }
        },
        "tests": {
            "test_ccompiler_opt": {
                "is_standalone": "variable",
                "arch_compilers": "variable",
                "FakeCCompilerOpt": "class",
                "_Test_CCompilerOpt": "class",
                "new_test": "function"
            },
            "test_ccompiler_opt_conf": {
                "is_standalone": "variable",
                "arch_compilers": "variable",
                "FakeCCompilerOpt": "class",
                "_TestConfFeatures": "class",
                "TestConfFeatures": "class"
            },
            "test_exec_command": {
                "redirect_stdout": "class",
                "redirect_stderr": "class",
                "emulate_nonposix": "class",
                "test_exec_command_stdout": "function",
                "test_exec_command_stderr": "function",
                "TestExecCommand": "class"
            },
            "test_fcompiler": {
                "customizable_flags": "variable",
                "test_fcompiler_flags": "function"
            },
            "test_fcompiler_gnu": {
                "g77_version_strings": "variable",
                "gfortran_version_strings": "variable",
                "TestG77Versions": "class",
                "TestGFortranVersions": "class"
            },
            "test_fcompiler_intel": {
                "intel_32bit_version_strings": "variable",
                "intel_64bit_version_strings": "variable",
                "TestIntelFCompilerVersions": "class",
                "TestIntelEM64TFCompilerVersions": "class"
            },
            "test_fcompiler_nagfor": {
                "nag_version_strings": "variable",
                "TestNagFCompilerVersions": "class"
            },
            "test_from_template": {
                "pyf_src": "variable",
                "normalize_whitespace": "function",
                "test_from_template": "function"
            },
            "test_mingw32ccompiler": {
                "test_build_import": "function"
            },
            "test_misc_util": {
                "ajoin": "variable",
                "TestAppendpath": "class",
                "TestMinrelpath": "class",
                "TestGpaths": "class",
                "TestSharedExtension": "class",
                "test_installed_npymath_ini": "function"
            },
            "test_npy_pkg_config": {
                "simple": "variable",
                "Name": "variable",
                "Description": "variable",
                "Version": "variable",
                "cflags": "variable",
                "libs": "variable",
                "simple_variable_d": "variable",
                "TestLibraryInfo": "class",
                "TestParseFlags": "class"
            },
            "test_shell_utils": {
                "argv_cases": "variable",
                "Parser": "function",
                "runner": "function",
                "test_join_matches_subprocess": "function",
                "test_roundtrip": "function"
            },
            "test_system_info": {
                "get_class": "function",
                "simple_site": "variable",
                "library_dirs": "variable",
                "libraries": "variable",
                "extra_compile_args": "variable",
                "runtime_library_dirs": "variable",
                "extra_link_args": "variable",
                "rpath": "variable",
                "mylib_libs": "variable",
                "have_compiler": "function",
                "HAVE_COMPILER": "variable",
                "_system_info": "class",
                "Temp1Info": "class",
                "Temp2Info": "class",
                "DuplicateOptionInfo": "class",
                "TestSystemInfoReading": "class",
                "test_distutils_parse_env_order": "function"
            }
        },
        "ccompiler": {
            "_job_semaphore": "variable",
            "_global_lock": "variable",
            "_processing_files": "variable",
            "_needs_build": "function",
            "replace_method": "function",
            "CCompiler_find_executables": "function",
            "CCompiler_spawn": "function",
            "CCompiler_object_filenames": "function",
            "CCompiler_compile": "function",
            "CCompiler_customize_cmd": "function",
            "_compiler_to_string": "function",
            "CCompiler_show_customization": "function",
            "CCompiler_customize": "function",
            "simple_version_match": "function",
            "CCompiler_get_version": "function",
            "CCompiler_cxx_compiler": "function",
            "compiler_class['intel']": "variable",
            "compiler_class['intele']": "variable",
            "compiler_class['intelem']": "variable",
            "compiler_class['intelw']": "variable",
            "compiler_class['intelemw']": "variable",
            "compiler_class['pathcc']": "variable",
            "_distutils_new_compiler": "variable",
            "new_compiler ": "function",
            "ccompiler.new_compiler": "variable",
            "_distutils_gen_lib_options": "variable",
            "gen_lib_options": "function",
            "ccompiler.gen_lib_options": "variable"
        },
        "conv_template": {
            "__all__": "variable",
            "global_names": "variable",
            "header": "variable",
            "parse_structure": "function",
            "paren_repl": "function",
            "parenrep": "variable",
            "plainrep": "variable",
            "parse_values": "function",
            "stripast": "variable",
            "named_re": "variable",
            "exclude_vars_re": "variable",
            "exclude_re": "variable",
            "parse_loop_header": "function",
            "replace_re": "variable",
            "parse_string": "function",
            "process_str": "function",
            "include_src_re": "variable",
            "resolve_includes": "function",
            "process_file": "function",
            "unique_key": "function",
            "main": "function"
        },
        "core": {
            "numpy_cmdclass": "variable",
            "_dict_append": "function",
            "_command_line_ok": "function",
            "get_distribution": "function",
            "setup": "function",
            "_check_append_library": "function",
            "_check_append_ext_library": "function"
        },
        "cpuinfo": {
            "__all__": "variable",
            "getoutput": "function",
            "command_info": "function",
            "command_by_line": "function",
            "key_value_from_command": "function",
            "CPUInfoBase": "class",
            "LinuxCPUInfo": "class",
            "IRIXCPUInfo": "class",
            "DarwinCPUInfo": "class",
            "SunOSCPUInfo": "class",
            "Win32CPUInfo": "class",
            "cpu": "variable"
        },
        "exec_command": {
            "__all__": "variable",
            "filepath_from_subprocess_output": "function",
            "forward_bytes_to_stdout": "function",
            "temp_file_name": "function",
            "get_pythonexe": "function",
            "find_executable": "function",
            "_preserve_environment": "function",
            "_update_environment": "function",
            "exec_command": "function",
            "_exec_command": "function",
            "_quote_arg": "function"
        },
        "extension": {
            "cxx_ext_re": "variable",
            "fortran_pyf_ext_re": "variable",
            "Extension": "class"
        },
        "from_template": {
            "__all__": "variable",
            "routine_start_re": "variable",
            "routine_end_re": "variable",
            "function_start_re": "variable",
            "parse_structure": "function",
            "template_re": "variable",
            "named_re": "variable",
            "list_re": "variable",
            "find_repl_patterns": "function",
            "find_and_remove_repl_patterns": "function",
            "item_re": "variable",
            "conv": "function",
            "unique_key": "function",
            "template_name_re": "variable",
            "expand_sub": "function",
            "process_str": "function",
            "include_src_re": "variable",
            "resolve_includes": "function",
            "process_file": "function",
            "_special_names": "variable"
        },
        "intelccompiler": {
            "IntelCCompiler": "class",
            "IntelItaniumCCompiler": "class",
            "IntelEM64TCCompiler": "class"
        },
        "lib2def": {
            "__doc__": "variable",
            "FUNC_RE": "variable",
            "DATA_RE": "variable",
            "parse_cmd": "function",
            "getnm": "function",
            "nm_output": "variable",
            "parse_nm": "function",
            "output_def": "function"
        },
        "line_endings": {
            "dos2unix": "function",
            "dos2unix_one_dir": "function",
            "dos2unix_dir": "function",
            "unix2dos": "function",
            "unix2dos_one_dir": "function",
            "unix2dos_dir": "function"
        },
        "log": {
            "_fix_args": "function",
            "Log": "class",
            "_global_log.__class__": "variable",
            "good": "variable",
            "set_threshold": "function",
            "get_threshold": "function",
            "set_verbosity": "function",
            "_global_color_map": "variable"
        },
        "mingw32ccompiler": {
            "get_msvcr_replacement": "function",
            "distutils.cygwinccompiler.get_msvcr": "variable",
            "_START": "variable",
            "_TABLE": "variable",
            "Mingw32CCompiler": "class",
            "find_python_dll": "function",
            "dump_table": "function",
            "generate_def": "function",
            "find_dll": "function",
            "build_msvcr_library": "function",
            "build_import_library": "function",
            "_check_for_import_lib": "function",
            "_build_import_library_amd64": "function",
            "_build_import_library_x86": "function",
            "_MSVCRVER_TO_FULLVER": "variable",
            "msvc_manifest_xml": "function",
            "manifest_rc": "function",
            "check_embedded_msvcr_match_linked": "function",
            "configtest_name": "function",
            "manifest_name": "function",
            "rc_name": "function",
            "generate_manifest": "function"
        },
        "misc_util": {
            "_tdata": "variable",
            "_tmpdirs": "variable",
            "clean_up_temporary_directory": "function",
            "__all__": "variable",
            "InstallableLib": "class",
            "get_num_build_jobs": "function",
            "quote_args": "function",
            "allpath": "function",
            "rel_path": "function",
            "get_path_from_frame": "function",
            "njoin": "function",
            "get_mathlibs": "function",
            "minrelpath": "function",
            "sorted_glob": "function",
            "_fix_paths": "function",
            "gpaths": "function",
            "make_temp_file": "function",
            "terminal_has_colors": "function",
            "default_text": "function",
            "red_text": "function",
            "green_text": "function",
            "yellow_text": "function",
            "cyan_text": "function",
            "blue_text": "function",
            "cyg2win32": "function",
            "mingw32": "function",
            "msvc_runtime_version": "function",
            "msvc_runtime_library": "function",
            "msvc_runtime_major": "function",
            "cxx_ext_match": "variable",
            "fortran_ext_match": "variable",
            "f90_ext_match": "variable",
            "f90_module_name_match": "variable",
            "_get_f90_modules": "function",
            "is_string": "function",
            "all_strings": "function",
            "is_sequence": "function",
            "is_glob_pattern": "function",
            "as_list": "function",
            "get_language": "function",
            "has_f_sources": "function",
            "has_cxx_sources": "function",
            "filter_sources": "function",
            "_get_headers": "function",
            "_get_directories": "function",
            "_commandline_dep_string": "function",
            "get_dependencies": "function",
            "is_local_src_dir": "function",
            "general_source_files": "function",
            "general_source_directories_files": "function",
            "get_ext_source_files": "function",
            "get_script_files": "function",
            "get_lib_source_files": "function",
            "get_shared_lib_extension": "function",
            "get_data_files": "function",
            "dot_join": "function",
            "get_frame": "function",
            "Configuration": "class",
            "get_cmd": "function",
            "get_numpy_include_dirs": "function",
            "get_npy_pkg_dir": "function",
            "get_pkg_info": "function",
            "get_info": "function",
            "is_bootstrapping": "function",
            "default_config_dict": "function",
            "dict_append": "function",
            "appendpath": "function",
            "generate_config_py": "function",
            "msvc_version": "function",
            "get_build_architecture": "function"
        },
        "msvc9compiler": {
            "_merge": "function",
            "MSVCCompiler": "class"
        },
        "msvccompiler": {
            "_merge": "function",
            "MSVCCompiler": "class"
        },
        "npy_pkg_config": {
            "__all__": "variable",
            "_VAR": "variable",
            "FormatError": "class",
            "PkgNotFound": "class",
            "parse_flags": "function",
            "_escape_backslash": "function",
            "LibraryInfo": "class",
            "VariableSet": "class",
            "parse_meta": "function",
            "parse_variables": "function",
            "parse_sections": "function",
            "pkg_to_filename": "function",
            "parse_config": "function",
            "_read_config_imp": "function",
            "_CACHE": "variable",
            "read_config": "function"
        },
        "numpy_distribution": {
            "NumpyDistribution": "class"
        },
        "pathccompiler": {
            "PathScaleCCompiler": "class"
        },
        "setup": {
            "configuration": "function"
        },
        "system_info": {
            "__all__": "variable",
            "_bits": "variable",
            "platform_bits": "variable",
            "global_compiler": "variable",
            "customized_ccompiler": "function",
            "_c_string_literal": "function",
            "libpaths": "function",
            "default_lib_dirs": "variable",
            "default_runtime_dirs": "variable",
            "default_include_dirs": "variable",
            "default_src_dirs": "variable",
            "so_ext": "variable",
            "is_symlink_to_accelerate": "function",
            "_accel_msg": "variable",
            "get_standard_file": "function",
            "_parse_env_order": "function",
            "get_info": "function",
            "NotFoundError": "class",
            "AliasedOptionError": "class",
            "AtlasNotFoundError": "class",
            "FlameNotFoundError": "class",
            "LapackNotFoundError": "class",
            "LapackSrcNotFoundError": "class",
            "LapackILP64NotFoundError": "class",
            "BlasOptNotFoundError": "class",
            "BlasNotFoundError": "class",
            "BlasILP64NotFoundError": "class",
            "BlasSrcNotFoundError": "class",
            "FFTWNotFoundError": "class",
            "DJBFFTNotFoundError": "class",
            "NumericNotFoundError": "class",
            "X11NotFoundError": "class",
            "UmfpackNotFoundError": "class",
            "system_info": "class",
            "fft_opt_info": "class",
            "fftw_info": "class",
            "fftw2_info": "class",
            "fftw3_info": "class",
            "dfftw_info": "class",
            "sfftw_info": "class",
            "fftw_threads_info": "class",
            "dfftw_threads_info": "class",
            "sfftw_threads_info": "class",
            "djbfft_info": "class",
            "mkl_info": "class",
            "lapack_mkl_info": "class",
            "blas_mkl_info": "class",
            "atlas_info": "class",
            "atlas_blas_info": "class",
            "atlas_threads_info": "class",
            "atlas_blas_threads_info": "class",
            "lapack_atlas_info": "class",
            "lapack_atlas_threads_info": "class",
            "atlas_3_10_info": "class",
            "atlas_3_10_blas_info": "class",
            "atlas_3_10_threads_info": "class",
            "atlas_3_10_blas_threads_info": "class",
            "lapack_atlas_3_10_info": "class",
            "lapack_atlas_3_10_threads_info": "class",
            "lapack_info": "class",
            "lapack_src_info": "class",
            "atlas_version_c_text": "variable"
        },
        "unixccompiler": {
            "UnixCCompiler__compile": "function",
            "UnixCCompiler_create_static_lib": "function"
        },
        "_shell_utils": {
            "__all__": "variable",
            "CommandLineParser": "class",
            "WindowsParser": "class",
            "PosixParser": "class"
        },
        "__config__": {
            "__all__": "variable",
            "extra_dll_dir": "variable",
            "get_info": "function",
            "show": "function"
        },
        "": {
            "customized_fcompiler": "function",
            "customized_ccompiler": "function"
        }
    },
    "doc": {
        "constants": {
            "constants": "variable",
            "add_newdoc": "function"
        },
        "": {
            "ref_dir": "variable",
            "__all__": "variable",
            "__doc__": "variable"
        }
    },
    "f2py": {
        "tests": {
            "test_array_from_pyobj": {
                "wrap": "variable",
                "setup_module": "function",
                "flags_info": "function",
                "flags2names": "function",
                "Intent": "class",
                "intent": "variable",
                "_type_names": "variable",
                "_cast_dict": "variable",
                "_cast_dict['BYTE']": "variable",
                "_cast_dict['UBYTE']": "variable",
                "_cast_dict['SHORT']": "variable",
                "_cast_dict['USHORT']": "variable",
                "_cast_dict['INT']": "variable",
                "_cast_dict['UINT']": "variable",
                "_cast_dict['LONG']": "variable",
                "_cast_dict['ULONG']": "variable",
                "_cast_dict['LONGLONG']": "variable",
                "_cast_dict['ULONGLONG']": "variable",
                "_cast_dict['FLOAT']": "variable",
                "_cast_dict['DOUBLE']": "variable",
                "_cast_dict['CFLOAT']": "variable",
                "Type": "class",
                "Array": "class",
                "TestIntent": "class",
                "TestSharedMemory": "class"
            },
            "test_assumed_shape": {
                "_path": "function",
                "TestAssumedShapeSumExample": "class",
                "TestF2cmapOption": "class"
            },
            "test_block_docstring": {
                "TestBlockDocString": "class"
            },
            "test_callback": {
                "TestF77Callback": "class",
                "TestF77CallbackPythonTLS": "class",
                "TestF90Callback": "class",
                "TestGH18335": "class"
            },
            "test_common": {
                "_path": "function",
                "TestCommonBlock": "class"
            },
            "test_compile_function": {
                "setup_module": "function",
                "test_f2py_init_compile": "function",
                "test_f2py_init_compile_failure": "function",
                "test_f2py_init_compile_bad_cmd": "function",
                "test_compile_from_strings": "function"
            },
            "test_crackfortran": {
                "TestNoSpace": "class",
                "TestPublicPrivate": "class",
                "TestExternal": "class"
            },
            "test_kind": {
                "_path": "function",
                "TestKind": "class"
            },
            "test_mixed": {
                "_path": "function",
                "TestMixed": "class"
            },
            "test_module_doc": {
                "_path": "function",
                "TestModuleDocString": "class"
            },
            "test_parameter": {
                "_path": "function",
                "TestParameters": "class"
            },
            "test_quoted_character": {
                "TestQuotedCharacter": "class"
            },
            "test_regression": {
                "_path": "function",
                "TestIntentInOut": "class",
                "TestNumpyVersionAttribute": "class"
            },
            "test_return_character": {
                "IS_S390X": "variable",
                "TestReturnCharacter": "class",
                "TestF77ReturnCharacter": "class",
                "TestF90ReturnCharacter": "class"
            },
            "test_return_complex": {
                "TestReturnComplex": "class",
                "TestF77ReturnComplex": "class",
                "TestF90ReturnComplex": "class"
            },
            "test_return_integer": {
                "TestReturnInteger": "class",
                "TestF77ReturnInteger": "class",
                "TestF90ReturnInteger": "class"
            },
            "test_return_logical": {
                "TestReturnLogical": "class",
                "TestF77ReturnLogical": "class",
                "TestF90ReturnLogical": "class"
            },
            "test_return_real": {
                "TestReturnReal": "class",
                "TestCReturnReal": "class",
                "TestF77ReturnReal": "class",
                "TestF90ReturnReal": "class"
            },
            "test_semicolon_split": {
                "TestMultiline": "class"
            },
            "test_size": {
                "_path": "function",
                "TestSizeSumExample": "class"
            },
            "test_string": {
                "_path": "function",
                "TestString": "class"
            },
            "util": {
                "_module_dir": "variable",
                "_module_num": "variable",
                "_cleanup": "function",
                "get_module_dir": "function",
                "get_temp_module_name": "function",
                "_memoize": "function",
                "build_module": "function",
                "build_code": "function",
                "_compiler_status": "variable",
                "_get_compiler_status": "function",
                "has_c_compiler": "function",
                "has_f77_compiler": "function",
                "has_f90_compiler": "function",
                "build_module_distutils": "function",
                "F2PyTest": "class"
            }
        },
        "auxfuncs": {
            "__all__": "variable",
            "f2py_version": "variable",
            "errmess": "variable",
            "show": "variable",
            "options": "variable",
            "debugoptions": "variable",
            "wrapfuncs": "variable",
            "outmess": "function",
            "debugcapi": "function",
            "_isstring": "function",
            "isstring": "function",
            "ischaracter": "function",
            "isstringarray": "function",
            "isarrayofstrings": "function",
            "isarray": "function",
            "isscalar": "function",
            "iscomplex": "function",
            "islogical": "function",
            "isinteger": "function",
            "isreal": "function",
            "get_kind": "function",
            "islong_long": "function",
            "isunsigned_char": "function",
            "isunsigned_short": "function",
            "isunsigned": "function",
            "isunsigned_long_long": "function",
            "isdouble": "function",
            "islong_double": "function",
            "islong_complex": "function",
            "iscomplexarray": "function",
            "isint1array": "function",
            "isunsigned_chararray": "function",
            "isunsigned_shortarray": "function",
            "isunsignedarray": "function",
            "isunsigned_long_longarray": "function",
            "issigned_chararray": "function",
            "issigned_shortarray": "function",
            "issigned_array": "function",
            "issigned_long_longarray": "function",
            "isallocatable": "function",
            "ismutable": "function",
            "ismoduleroutine": "function",
            "ismodule": "function",
            "isfunction": "function",
            "isfunction_wrap": "function",
            "issubroutine": "function",
            "issubroutine_wrap": "function",
            "hasassumedshape": "function",
            "requiresf90wrapper": "function",
            "isroutine": "function",
            "islogicalfunction": "function",
            "islong_longfunction": "function",
            "islong_doublefunction": "function",
            "iscomplexfunction": "function",
            "iscomplexfunction_warn": "function",
            "isstringfunction": "function",
            "hasexternals": "function",
            "isthreadsafe": "function",
            "hasvariables": "function",
            "isoptional": "function",
            "isexternal": "function",
            "isrequired": "function",
            "isintent_in": "function",
            "isintent_inout": "function",
            "isintent_out": "function",
            "isintent_hide": "function",
            "isintent_nothide": "function",
            "isintent_c": "function",
            "isintent_cache": "function",
            "isintent_copy": "function",
            "isintent_overwrite": "function",
            "isintent_callback": "function",
            "isintent_inplace": "function",
            "isintent_aux": "function",
            "isintent_aligned4": "function",
            "isintent_aligned8": "function",
            "isintent_aligned16": "function",
            "isintent_dict": "variable",
            "isprivate": "function",
            "hasinitvalue": "function",
            "hasinitvalueasstring": "function",
            "hasnote": "function",
            "hasresultnote": "function",
            "hascommon": "function",
            "containscommon": "function",
            "containsmodule": "function",
            "hasbody": "function",
            "hascallstatement": "function",
            "istrue": "function",
            "isfalse": "function",
            "F2PYError": "class",
            "throw_error": "class",
            "l_and": "function",
            "l_or": "function",
            "l_not": "function",
            "isdummyroutine": "function",
            "getfortranname": "function",
            "getmultilineblock": "function",
            "getcallstatement": "function",
            "getcallprotoargument": "function",
            "getusercode": "function",
            "getusercode1": "function",
            "getpymethoddef": "function",
            "getargs": "function",
            "getargs2": "function",
            "getrestdoc": "function",
            "gentitle": "function",
            "flatlist": "function",
            "stripcomma": "function",
            "replace": "function",
            "dictappend": "function",
            "applyrules": "function"
        },
        "capi_maps": {
            "f2py_version": "variable",
            "__all__": "variable",
            "using_newcore": "variable",
            "depargs": "variable",
            "lcb_map": "variable",
            "lcb2_map": "variable",
            "c2py_map": "variable",
            "c2capi_map": "variable",
            "c2pycode_map": "variable",
            "c2buildvalue_map": "variable",
            "f2cmap_all": "variable",
            "f2cmap_default": "variable",
            "load_f2cmap_file": "function",
            "cformat_map": "variable",
            "getctype": "function",
            "getstrlength": "function",
            "getarrdims": "function",
            "getpydocsign": "function",
            "getarrdocsign": "function",
            "getinit": "function",
            "sign2map": "function",
            "routsign2map": "function",
            "modsign2map": "function",
            "cb_sign2map": "function",
            "cb_routsign2map": "function",
            "common_sign2map": "function"
        },
        "cb_rules": {
            "f2py_version": "variable",
            "cb_routine_rules": "variable",
            "cb_arg_rules": "variable",
            "cb_map": "variable",
            "buildcallbacks": "function",
            "buildcallback": "function"
        },
        "cfuncs": {
            "f2py_version": "variable",
            "errmess": "variable",
            "outneeds": "variable",
            "needs": "variable",
            "includes0": "variable",
            "includes": "variable",
            "userincludes": "variable",
            "typedefs": "variable",
            "typedefs_generated": "variable",
            "cppmacros": "variable",
            "cfuncs": "variable",
            "callbacks": "variable",
            "f90modhooks": "variable",
            "commonhooks": "variable",
            "includes0['math.h']": "variable",
            "includes0['string.h']": "variable",
            "includes0['setjmp.h']": "variable",
            "includes['Python.h']": "variable",
            "needs['arrayobject.h']": "variable",
            "includes['arrayobject.h']": "variable",
            "includes['stdarg.h']": "variable",
            "typedefs['unsigned_char']": "variable",
            "typedefs['unsigned_short']": "variable",
            "typedefs['unsigned_long']": "variable",
            "typedefs['signed_char']": "variable",
            "typedefs['long_long']": "variable",
            "typedefs['long_double']": "variable",
            "cppmacros['F_FUNC']": "variable",
            "cppmacros['F_MODFUNC']": "variable",
            "cppmacros['SWAP']": "variable",
            "cppmacros['MINMAX']": "variable",
            "needs['f2py_size']": "variable",
            "cfuncs['f2py_size']": "variable",
            "needs['pyobj_from_long_double1']": "variable",
            "needs['pyobj_from_complex_long_double1']": "variable",
            "needs['pyobj_from_complex_double1']": "variable",
            "needs['pyobj_from_complex_float1']": "variable",
            "needs['pyobj_from_string1']": "variable",
            "needs['pyobj_from_string1size']": "variable",
            "needs['TRYPYARRAYTEMPLATE']": "variable",
            "cppmacros['TRYPYARRAYTEMPLATE']": "variable",
            "needs['GETSTRFROMPYTUPLE']": "variable",
            "cppmacros['GETSTRFROMPYTUPLE']": "variable",
            "cppmacros['FAILNULL']": "variable",
            "cppmacros['STRINGMALLOC']": "variable",
            "needs['STRINGCOPYN']": "variable",
            "cppmacros['STRINGCOPYN']": "variable",
            "cppmacros['CHECKGENERIC']": "variable",
            "cppmacros['CHECKARRAY']": "variable",
            "cppmacros['CHECKSTRING']": "variable",
            "cppmacros['CHECKSCALAR']": "variable",
            "cppmacros['OLDPYNUM']": "variable",
            "cfuncs['calcarrindex']": "variable",
            "cfuncs['calcarrindextr']": "variable",
            "cfuncs['forcomb']": "variable",
            "needs['try_pyarr_from_string']": "variable",
            "cfuncs['try_pyarr_from_string']": "variable",
            "needs['char_from_pyobj']": "variable",
            "cfuncs['char_from_pyobj']": "variable",
            "needs['short_from_pyobj']": "variable",
            "cfuncs['short_from_pyobj']": "variable",
            "cfuncs['long_from_pyobj']": "variable",
            "needs['long_double_from_pyobj']": "variable",
            "cfuncs['long_double_from_pyobj']": "variable",
            "needs['float_from_pyobj']": "variable",
            "cfuncs['float_from_pyobj']": "variable",
            "needs['complex_double_from_pyobj']": "variable",
            "cfuncs['complex_double_from_pyobj']": "variable",
            "needs['try_pyarr_from_char']": "variable",
            "needs['try_pyarr_from_signed_char']": "variable",
            "needs['try_pyarr_from_short']": "variable",
            "needs['try_pyarr_from_int']": "variable",
            "needs['try_pyarr_from_long']": "variable",
            "needs['try_pyarr_from_long_long']": "variable",
            "needs['try_pyarr_from_float']": "variable",
            "needs['try_pyarr_from_double']": "variable",
            "needs['try_pyarr_from_complex_float']": "variable",
            "needs['try_pyarr_from_complex_double']": "variable",
            "needs['create_cb_arglist']": "variable",
            "cfuncs['create_cb_arglist']": "variable"
        },
        "common_rules": {
            "f2py_version": "variable",
            "findcommonblocks": "function",
            "buildhooks": "function"
        },
        "crackfortran": {
            "f2py_version": "variable",
            "strictf77": "variable",
            "sourcecodeform": "variable",
            "quiet": "variable",
            "verbose": "variable",
            "tabchar": "variable",
            "pyffilename": "variable",
            "f77modulename": "variable",
            "skipemptyends": "variable",
            "ignorecontains": "variable",
            "dolowercase": "variable",
            "debug": "variable",
            "beginpattern": "variable",
            "currentfilename": "variable",
            "expectbegin": "variable",
            "f90modulevars": "variable",
            "filepositiontext": "variable",
            "gotnextfile": "variable",
            "groupcache": "variable",
            "groupcounter": "variable",
            "grouplist": "variable",
            "groupname": "variable",
            "include_paths": "variable",
            "neededmodule": "variable",
            "onlyfuncs": "variable",
            "previous_context": "variable",
            "skipblocksuntil": "variable",
            "skipfuncs": "variable",
            "skipfunctions": "variable",
            "usermodules": "variable",
            "reset_global_f2py_vars": "function",
            "outmess": "function",
            "re._MAXCACHE": "variable",
            "defaultimplicitrules": "variable",
            "badnames": "variable",
            "invbadnames": "variable",
            "rmbadname1": "function",
            "rmbadname": "function",
            "undo_rmbadname1": "function",
            "undo_rmbadname": "function",
            "getextension": "function",
            "is_f_file": "variable",
            "_has_f_header": "variable",
            "_has_f90_header": "variable",
            "_has_fix_header": "variable",
            "_free_f90_start": "variable",
            "is_free_format": "function",
            "readfortrancode": "function",
            "beforethisafter": "variable",
            "fortrantypes": "variable",
            "typespattern": "variable",
            "typespattern4implicit": "variable",
            "functionpattern": "variable",
            "subroutinepattern": "variable",
            "groupbegins77": "variable",
            "beginpattern77": "variable",
            "groupbegins90": "variable",
            "beginpattern90": "variable",
            "groupends": "variable",
            "endpattern": "variable",
            "endifs": "variable",
            "endifpattern": "variable",
            "implicitpattern": "variable",
            "dimensionpattern": "variable",
            "externalpattern": "variable",
            "optionalpattern": "variable",
            "requiredpattern": "variable",
            "publicpattern": "variable",
            "privatepattern": "variable",
            "intrinsicpattern": "variable",
            "intentpattern": "variable",
            "parameterpattern": "variable",
            "datapattern": "variable",
            "callpattern": "variable",
            "entrypattern": "variable",
            "callfunpattern": "variable",
            "commonpattern": "variable",
            "usepattern": "variable",
            "containspattern": "variable",
            "formatpattern": "variable",
            "f2pyenhancementspattern": "variable",
            "multilinepattern": "variable",
            "split_by_unquoted": "function",
            "_simplifyargs": "function",
            "crackline_re_1": "variable",
            "crackline": "function",
            "markouterparen": "function",
            "markoutercomma": "function",
            "unmarkouterparen": "function",
            "appenddecl": "function",
            "selectpattern": "variable",
            "nameargspattern": "variable",
            "callnameargspattern": "variable",
            "real16pattern": "variable",
            "real8pattern": "variable",
            "_intentcallbackpattern": "variable",
            "_is_intent_callback": "function",
            "_resolvenameargspattern": "function",
            "analyzeline": "function",
            "appendmultiline": "function",
            "cracktypespec0": "function",
            "namepattern": "variable",
            "kindselector": "variable",
            "charselector": "variable",
            "lenkindpattern": "variable",
            "lenarraypattern": "variable",
            "removespaces": "function",
            "markinnerspaces": "function",
            "updatevars": "function",
            "cracktypespec": "function",
            "setattrspec": "function",
            "setkindselector": "function",
            "setcharselector": "function",
            "getblockname": "function",
            "setmesstext": "function",
            "get_usedict": "function",
            "get_useparameters": "function",
            "postcrack2": "function",
            "postcrack": "function",
            "sortvarnames": "function",
            "analyzecommon": "function",
            "analyzebody": "function",
            "buildimplicitrules": "function",
            "myeval": "function",
            "getlincoef_re_1": "variable",
            "getlincoef": "function",
            "_varname_match": "variable",
            "getarrlen": "function",
            "word_pattern": "variable",
            "_get_depend_dict": "function",
            "_calc_depend_dict": "function",
            "get_sorted_names": "function",
            "_kind_func": "function",
            "_selected_int_kind_func": "function",
            "_selected_real_kind_func": "function",
            "get_parameters": "function",
            "_eval_length": "function",
            "_is_kind_number": "variable",
            "_eval_scalar": "function",
            "analyzevars": "function",
            "analyzeargs_re_1": "variable",
            "expr2name": "function",
            "analyzeargs": "function",
            "determineexprtype_re_1": "variable",
            "determineexprtype_re_2": "variable",
            "determineexprtype_re_3": "variable",
            "determineexprtype_re_4": "variable",
            "determineexprtype_re_5": "variable",
            "_ensure_exprdict": "function",
            "determineexprtype": "function",
            "crack2fortrangen": "function",
            "common2fortran": "function",
            "use2fortran": "function",
            "true_intent_list": "function",
            "vars2fortran": "function",
            "crackfortran": "function",
            "crack2fortran": "function"
        },
        "diagnose": {
            "run_command": "function",
            "run": "function"
        },
        "f2py2e": {
            "f2py_version": "variable",
            "numpy_version": "variable",
            "errmess": "variable",
            "show": "variable",
            "outmess": "variable",
            "__usage__": "variable",
            "scaninputline": "function",
            "callcrackfortran": "function",
            "buildmodules": "function",
            "dict_append": "function",
            "run_main": "function",
            "filter_files": "function",
            "get_prefix": "function",
            "run_compile": "function",
            "main": "function"
        },
        "f2py_testing": {
            "cmdline": "function",
            "run": "function"
        },
        "f90mod_rules": {
            "__version__": "variable",
            "f2py_version": "variable",
            "options": "variable",
            "findf90modules": "function",
            "fgetdims1": "variable",
            "fgetdims2": "variable",
            "fgetdims2_sa": "variable",
            "buildhooks": "function"
        },
        "func2subr": {
            "__version__": "variable",
            "f2py_version": "variable",
            "var2fixfortran": "function",
            "createfuncwrapper": "function",
            "createsubrwrapper": "function",
            "assubr": "function"
        },
        "rules": {
            "f2py_version": "variable",
            "numpy_version": "variable",
            "options": "variable",
            "sepdict": "variable",
            "generationtime": "variable",
            "module_rules": "variable",
            "defmod_rules": "variable",
            "routine_rules": "variable",
            "rout_rules": "variable",
            "\\t\\t\\tf2py_success": "variable",
            "\\t\\tf2py_success": "variable",
            "/*\\t#name#_return_value": "variable",
            "typedef_need_dict": "variable",
            "aux_rules": "variable",
            "arg_rules": "variable",
            "\\t\\t\\t\\t#varname#[capi_i++]": "variable",
            "check_rules": "variable",
            "buildmodule": "function",
            "stnd": "variable",
            "buildapi": "function"
        },
        "setup": {
            "configuration": "function"
        },
        "use_rules": {
            "__version__": "variable",
            "f2py_version": "variable",
            "usemodule_rules": "variable"
        },
        "": {
            "__all__": "variable",
            "run_main": "variable",
            "main": "variable",
            "compile": "function"
        }
    },
    "fft": {
        "": {
            "__all__": "variable",
            "Tensor": "variable",
            "fft": "variable",
            "fft2": "variable",
            "fftn": "variable",
            "rfft": "variable",
            "rfft2": "variable",
            "rfftn": "variable",
            "hfft": "variable",
            "fftfreq": "variable",
            "fftshift": "variable"
        }
    },
    "lib": {
        "tests": {
            "test_arraypad": {
                "_numeric_dtypes": "variable",
                "_all_modes": "variable",
                "TestAsPairs": "class",
                "TestConditionalShortcuts": "class",
                "TestStatistic": "class",
                "TestConstant": "class",
                "TestLinearRamp": "class",
                "TestReflect": "class",
                "TestEmptyArray": "class",
                "TestSymmetric": "class",
                "TestWrap": "class",
                "TestEdge": "class",
                "TestEmpty": "class",
                "test_legacy_vector_functionality": "function",
                "test_unicode_mode": "function",
                "test_object_input": "function",
                "TestPadWidth": "class",
                "test_kwargs": "function",
                "test_constant_zero_default": "function",
                "test_unsupported_mode": "function",
                "test_non_contiguous_array": "function",
                "test_memory_layout_persistence": "function",
                "test_dtype_persistence": "function"
            },
            "test_arraysetops": {
                "TestSetOps": "class",
                "TestUnique": "class"
            },
            "test_arrayterator": {
                "test": "function"
            },
            "test_financial_expired": {
                "test_financial_expired": "function"
            },
            "test_format": {
                "scalars": "variable",
                "basic_arrays": "variable",
                "Pdescr": "variable",
                "PbufferT": "variable",
                "Ndescr": "variable",
                "NbufferT": "variable",
                "record_arrays": "variable",
                "BytesIOSRandomSize": "class",
                "roundtrip": "function",
                "roundtrip_randsize": "function",
                "roundtrip_truncated": "function",
                "assert_equal_": "function",
                "test_roundtrip": "function",
                "test_roundtrip_randsize": "function",
                "test_roundtrip_truncated": "function",
                "test_long_str": "function",
                "test_memmap_roundtrip": "function",
                "test_compressed_roundtrip": "function",
                "dt1": "variable",
                "dt2": "variable",
                "dt3": "variable",
                "dt4": "variable",
                "dt5": "variable",
                "dt6": "variable",
                "test_load_padded_dtype": "function",
                "test_python2_python3_interoperability": "function",
                "test_pickle_python2_python3": "function",
                "test_pickle_disallow": "function",
                "test_descr_to_dtype": "function",
                "test_version_2_0": "function",
                "test_version_2_0_memmap": "function",
                "test_write_version": "function",
                "bad_version_magic": "variable",
                "malformed_magic": "variable",
                "test_read_magic": "function",
                "test_read_magic_bad_magic": "function",
                "test_read_version_1_0_bad_magic": "function",
                "test_bad_magic_args": "function",
                "test_large_header": "function",
                "test_read_array_header_1_0": "function",
                "test_read_array_header_2_0": "function",
                "test_bad_header": "function",
                "test_large_file_support": "function",
                "test_large_archive": "function",
                "test_empty_npz": "function",
                "test_unicode_field_names": "function",
                "test_metadata_dtype": "function"
            },
            "test_function_base": {
                "get_mat": "function",
                "_make_complex": "function",
                "TestRot90": "class",
                "TestFlip": "class",
                "TestAny": "class",
                "TestAll": "class",
                "TestCopy": "class",
                "TestAverage": "class",
                "TestSelect": "class",
                "TestInsert": "class",
                "TestAmax": "class",
                "TestAmin": "class",
                "TestPtp": "class",
                "TestCumsum": "class",
                "TestProd": "class",
                "TestCumprod": "class",
                "TestDiff": "class",
                "TestDelete": "class",
                "TestGradient": "class",
                "TestAngle": "class",
                "TestTrimZeros": "class",
                "TestExtins": "class",
                "_foo1": "function",
                "_foo2": "function",
                "TestVectorize": "class",
                "TestLeaks": "class",
                "TestDigitize": "class",
                "TestUnwrap": "class",
                "TestFilterwindows": "class",
                "TestTrapz": "class",
                "TestSinc": "class",
                "TestUnique": "class",
                "TestCheckFinite": "class",
                "TestCorrCoef": "class",
                "TestCov": "class",
                "Test_I0": "class",
                "TestKaiser": "class",
                "TestMsort": "class",
                "TestMeshgrid": "class",
                "TestPiecewise": "class",
                "TestBincount": "class",
                "TestInterp": "class",
                "compare_results": "function",
                "TestPercentile": "class",
                "TestQuantile": "class",
                "TestLerp": "class",
                "TestMedian": "class",
                "TestAdd_newdoc_ufunc": "class",
                "TestAdd_newdoc": "class",
                "TestAddDocstring": "class",
                "TestSortComplex": "class"
            },
            "test_histograms": {
                "TestHistogram": "class",
                "TestHistogramOptimBinNums": "class",
                "TestHistogramdd": "class"
            },
            "test_index_tricks": {
                "TestRavelUnravelIndex": "class",
                "TestGrid": "class",
                "TestConcatenator": "class",
                "TestNdenumerate": "class",
                "TestIndexExpression": "class",
                "TestIx_": "class",
                "test_c_": "function",
                "TestFillDiagonal": "class",
                "test_diag_indices": "function",
                "TestDiagIndicesFrom": "class",
                "test_ndindex": "function"
            },
            "test_io": {
                "TextIO": "class",
                "IS_64BIT": "variable",
                "strptime": "function",
                "RoundtripTest": "class",
                "TestSaveLoad": "class",
                "TestSavezLoad": "class",
                "TestSaveTxt": "class",
                "LoadTxtBase": "class",
                "TestLoadTxt": "class",
                "Testfromregex": "class",
                "TestFromTxt": "class",
                "TestPathUsage": "class",
                "test_gzip_load": "function",
                "JustWriter": "class",
                "JustReader": "class",
                "test_ducktyping": "function",
                "test_gzip_loadtxt": "function",
                "test_gzip_loadtxt_from_string": "function",
                "test_npzfile_dict": "function",
                "test_load_refcount": "function"
            },
            "test_mixins": {
                "ArrayLike": "class",
                "wrap_array_like": "function",
                "_assert_equal_type_and_value": "function",
                "_ALL_BINARY_OPERATORS": "variable",
                "TestNDArrayOperatorsMixin": "class"
            },
            "test_nanfunctions": {
                "_ndat": "variable",
                "_rdat": "variable",
                "_ndat_ones": "variable",
                "_ndat_zeros": "variable",
                "TestNanFunctions_MinMax": "class",
                "TestNanFunctions_ArgminArgmax": "class",
                "TestNanFunctions_IntTypes": "class",
                "SharedNanFunctionsTestsMixin": "class",
                "TestNanFunctions_SumProd": "class",
                "TestNanFunctions_CumSumProd": "class",
                "TestNanFunctions_MeanVarStd": "class",
                "TestNanFunctions_Median": "class",
                "TestNanFunctions_Percentile": "class",
                "TestNanFunctions_Quantile": "class",
                "test__nan_mask": "function",
                "test__replace_nan": "function"
            },
            "test_packbits": {
                "test_packbits": "function",
                "test_packbits_empty": "function",
                "test_packbits_empty_with_axis": "function",
                "test_packbits_large": "function",
                "test_packbits_very_large": "function",
                "test_unpackbits": "function",
                "test_pack_unpack_order": "function",
                "test_unpackbits_empty": "function",
                "test_unpackbits_empty_with_axis": "function",
                "test_unpackbits_large": "function",
                "TestCount": "class"
            },
            "test_polynomial": {
                "TestPolynomial": "class"
            },
            "test_recfunctions": {
                "get_fieldspec": "variable",
                "get_names": "variable",
                "get_names_flat": "variable",
                "zip_descr": "variable",
                "zip_dtype": "variable",
                "TestRecFunctions": "class",
                "TestRecursiveFillFields": "class",
                "TestMergeArrays": "class",
                "TestAppendFields": "class",
                "TestStackArrays": "class",
                "TestJoinBy": "class",
                "TestJoinBy2": "class",
                "TestAppendFieldsObj": "class"
            },
            "test_regression": {
                "TestRegression": "class"
            },
            "test_shape_base": {
                "IS_64BIT": "variable",
                "_add_keepdims": "function",
                "TestTakeAlongAxis": "class",
                "TestPutAlongAxis": "class",
                "TestApplyAlongAxis": "class",
                "TestApplyOverAxes": "class",
                "TestExpandDims": "class",
                "TestArraySplit": "class",
                "TestSplit": "class",
                "TestColumnStack": "class",
                "TestDstack": "class",
                "TestHsplit": "class",
                "TestVsplit": "class",
                "TestDsplit": "class",
                "TestSqueeze": "class",
                "TestKron": "class",
                "TestTile": "class",
                "TestMayShareMemory": "class",
                "compare_results": "function"
            },
            "test_stride_tricks": {
                "assert_shapes_correct": "function",
                "assert_incompatible_shapes_raise": "function",
                "assert_same_as_ufunc": "function",
                "test_same": "function",
                "test_broadcast_kwargs": "function",
                "test_one_off": "function",
                "test_same_input_shapes": "function",
                "test_two_compatible_by_ones_input_shapes": "function",
                "test_two_compatible_by_prepending_ones_input_shapes": "function",
                "test_incompatible_shapes_raise_valueerror": "function",
                "test_same_as_ufunc": "function",
                "test_broadcast_to_succeeds": "function",
                "test_broadcast_to_raises": "function",
                "test_broadcast_shape": "function",
                "test_broadcast_shapes_succeeds": "function",
                "test_broadcast_shapes_raises": "function",
                "test_as_strided": "function",
                "TestSlidingWindowView": "class",
                "as_strided_writeable": "function",
                "VerySimpleSubClass": "class",
                "SimpleSubClass": "class",
                "test_subclasses": "function",
                "test_writeable": "function",
                "test_writeable_memoryview": "function",
                "test_reference_types": "function"
            },
            "test_twodim_base": {
                "get_mat": "function",
                "TestEye": "class",
                "TestDiag": "class",
                "TestFliplr": "class",
                "TestFlipud": "class",
                "TestHistogram2d": "class",
                "TestTri": "class",
                "test_tril_triu_ndim2": "function",
                "test_tril_triu_ndim3": "function",
                "test_tril_triu_with_inf": "function",
                "test_tril_triu_dtype": "function",
                "test_mask_indices": "function",
                "test_tril_indices": "function",
                "TestTriuIndices": "class",
                "TestTrilIndicesFrom": "class",
                "TestTriuIndicesFrom": "class",
                "TestVander": "class"
            },
            "test_type_check": {
                "assert_all": "function",
                "TestCommonType": "class",
                "TestMintypecode": "class",
                "TestIsscalar": "class",
                "TestReal": "class",
                "TestImag": "class",
                "TestIscomplex": "class",
                "TestIsreal": "class",
                "TestIscomplexobj": "class",
                "TestIsrealobj": "class",
                "TestIsnan": "class",
                "TestIsfinite": "class",
                "TestIsinf": "class",
                "TestIsposinf": "class",
                "TestIsneginf": "class",
                "TestNanToNum": "class",
                "TestRealIfClose": "class",
                "TestArrayConversion": "class"
            },
            "test_ufunclike": {
                "TestUfunclike": "class"
            },
            "test_utils": {
                "@pytest.mark.skipif(sys.flags.optimize": "variable",
                "test_lookfor": "function",
                "old_func": "function",
                "old_func2": "function",
                "old_func3": "function",
                "new_func3": "variable",
                "old_func4": "function",
                "new_func4": "variable",
                "old_func5": "function",
                "new_func5": "variable",
                "old_func6": "function",
                "new_func6": "variable",
                "test_deprecate_decorator": "function",
                "test_deprecate_decorator_message": "function",
                "test_deprecate_fn": "function",
                "test_deprecate_help_indentation": "function",
                "_compare_docs": "function",
                "test_deprecate_preserve_whitespace": "function",
                "test_safe_eval_nameconstant": "function",
                "TestByteBounds": "class",
                "test_assert_raises_regex_context_manager": "function",
                "test_info_method_heading": "function"
            },
            "test__datasource": {
                "urlopen_stub": "function",
                "old_urlopen": "variable",
                "setup_module": "function",
                "teardown_module": "function",
                "http_path": "variable",
                "http_file": "variable",
                "http_fakepath": "variable",
                "http_fakefile": "variable",
                "malicious_files": "variable",
                "magic_line": "variable",
                "valid_textfile": "function",
                "invalid_textfile": "function",
                "valid_httpurl": "function",
                "invalid_httpurl": "function",
                "valid_baseurl": "function",
                "invalid_baseurl": "function",
                "valid_httpfile": "function",
                "invalid_httpfile": "function",
                "TestDataSourceOpen": "class",
                "TestDataSourceExists": "class",
                "TestDataSourceAbspath": "class",
                "TestRepositoryAbspath": "class",
                "TestRepositoryExists": "class",
                "TestOpenFunc": "class",
                "test_del_attr_handling": "function"
            },
            "test__iotools": {
                "TestLineSplitter": "class",
                "TestNameValidator": "class",
                "_bytes_to_date": "function",
                "TestStringConverter": "class",
                "TestMiscFunctions": "class"
            },
            "test__version": {
                "test_main_versions": "function",
                "test_version_1_point_10": "function",
                "test_alpha_beta_rc": "function",
                "test_dev_version": "function",
                "test_dev_a_b_rc_mixed": "function",
                "test_dev0_version": "function",
                "test_dev0_a_b_rc_mixed": "function",
                "test_raises": "function"
            }
        },
        "arraypad": {
            "__all__": "variable",
            "_round_if_needed": "function",
            "_slice_at_axis": "function",
            "_view_roi": "function",
            "_pad_simple": "function",
            "_set_pad_area": "function",
            "_get_edges": "function",
            "_get_linear_ramps": "function",
            "_get_stats": "function",
            "_set_reflect_both": "function",
            "_set_wrap_both": "function",
            "_as_pairs": "function",
            "_pad_dispatcher": "function",
            "pad": "function"
        },
        "arraysetops": {
            "array_function_dispatch": "variable",
            "__all__": "variable",
            "_ediff1d_dispatcher": "function",
            "ediff1d": "function",
            "_unpack_tuple": "function",
            "_unique_dispatcher": "function",
            "unique": "function",
            "_unique1d": "function",
            "_intersect1d_dispatcher": "function",
            "intersect1d": "function",
            "_setxor1d_dispatcher": "function",
            "setxor1d": "function",
            "_in1d_dispatcher": "function",
            "in1d": "function",
            "_isin_dispatcher": "function",
            "isin": "function",
            "_union1d_dispatcher": "function",
            "union1d": "function",
            "_setdiff1d_dispatcher": "function",
            "setdiff1d": "function"
        },
        "arrayterator": {
            "__all__": "variable",
            "Arrayterator": "class"
        },
        "format": {
            "__all__": "variable",
            "MAGIC_PREFIX": "variable",
            "MAGIC_LEN": "variable",
            "ARRAY_ALIGN": "variable",
            "BUFFER_SIZE": "variable",
            "_header_size_info": "variable",
            "_check_version": "function",
            "magic": "function",
            "read_magic": "function",
            "_has_metadata": "function",
            "dtype_to_descr": "function",
            "descr_to_dtype": "function",
            "header_data_from_array_1_0": "function",
            "_wrap_header": "function",
            "_wrap_header_guess_version": "function",
            "_write_array_header": "function",
            "write_array_header_1_0": "function",
            "write_array_header_2_0": "function",
            "read_array_header_1_0": "function",
            "read_array_header_2_0": "function",
            "_filter_header": "function",
            "_read_array_header": "function",
            "write_array": "function",
            "read_array": "function",
            "open_memmap": "function",
            "_read_bytes": "function"
        },
        "function_base": {
            "array_function_dispatch": "variable",
            "__all__": "variable",
            "_rot90_dispatcher": "function",
            "rot90": "function",
            "_flip_dispatcher": "function",
            "flip": "function",
            "iterable": "function",
            "_average_dispatcher": "function",
            "average": "function",
            "asarray_chkfinite": "function",
            "_piecewise_dispatcher": "function",
            "piecewise": "function",
            "_select_dispatcher": "function",
            "select": "function",
            "_copy_dispatcher": "function",
            "copy": "function",
            "_gradient_dispatcher": "function",
            "gradient": "function",
            "_diff_dispatcher": "function",
            "diff": "function",
            "_interp_dispatcher": "function",
            "interp": "function",
            "_angle_dispatcher": "function",
            "angle": "function",
            "_unwrap_dispatcher": "function",
            "unwrap": "function",
            "_sort_complex": "function",
            "sort_complex": "function",
            "_trim_zeros": "function",
            "trim_zeros": "function",
            "_extract_dispatcher": "function",
            "extract": "function",
            "_place_dispatcher": "function",
            "place": "function",
            "disp": "function",
            "_DIMENSION_NAME": "variable",
            "_CORE_DIMENSION_LIST": "variable",
            "_ARGUMENT": "variable",
            "_ARGUMENT_LIST": "variable",
            "_SIGNATURE": "variable",
            "_parse_gufunc_signature": "function",
            "_update_dim_sizes": "function",
            "_parse_input_dimensions": "function",
            "_calculate_shapes": "function",
            "_create_arrays": "function",
            "vectorize": "class",
            "_cov_dispatcher": "function",
            "cov": "function",
            "_corrcoef_dispatcher": "function",
            "corrcoef": "function",
            "blackman": "function",
            "bartlett": "function",
            "hanning": "function",
            "hamming": "function",
            "_i0A": "variable",
            "_i0B": "variable",
            "_chbevl": "function",
            "_i0_1": "function",
            "_i0_2": "function",
            "_i0_dispatcher": "function",
            "i0": "function",
            "kaiser": "function",
            "_sinc_dispatcher": "function",
            "sinc": "function",
            "_msort_dispatcher": "function",
            "msort": "function",
            "_ureduce": "function",
            "_median_dispatcher": "function",
            "median": "function",
            "_median": "function",
            "_percentile_dispatcher": "function",
            "percentile": "function",
            "_quantile_dispatcher": "function",
            "quantile": "function",
            "_quantile_unchecked": "function",
            "_quantile_is_valid": "function",
            "_lerp": "function",
            "_quantile_ureduce_func": "function",
            "_trapz_dispatcher": "function",
            "trapz": "function",
            "_meshgrid_dispatcher": "function",
            "meshgrid": "function",
            "_delete_dispatcher": "function",
            "delete": "function",
            "_insert_dispatcher": "function",
            "insert": "function",
            "_append_dispatcher": "function",
            "append": "function",
            "_digitize_dispatcher": "function",
            "digitize": "function"
        },
        "histograms": {
            "__all__": "variable",
            "array_function_dispatch": "variable",
            "_range": "variable",
            "_ptp": "function",
            "_hist_bin_sqrt": "function",
            "_hist_bin_sturges": "function",
            "_hist_bin_rice": "function",
            "_hist_bin_scott": "function",
            "_hist_bin_stone": "function",
            "_hist_bin_doane": "function",
            "_hist_bin_fd": "function",
            "_hist_bin_auto": "function",
            "_hist_bin_selectors": "variable",
            "_ravel_and_check_weights": "function",
            "_get_outer_edges": "function",
            "_unsigned_subtract": "function",
            "_get_bin_edges": "function",
            "_search_sorted_inclusive": "function",
            "_histogram_bin_edges_dispatcher": "function",
            "histogram_bin_edges": "function",
            "_histogram_dispatcher": "function",
            "histogram": "function",
            "_histogramdd_dispatcher": "function",
            "histogramdd": "function"
        },
        "index_tricks": {
            "array_function_dispatch": "variable",
            "__all__": "variable",
            "_ix__dispatcher": "function",
            "ix_": "function",
            "nd_grid": "class",
            "MGridClass": "class",
            "mgrid": "variable",
            "OGridClass": "class",
            "ogrid": "variable",
            "AxisConcatenator": "class",
            "RClass": "class",
            "r_": "variable",
            "CClass": "class",
            "c_": "variable",
            "ndenumerate": "class",
            "ndindex": "class",
            "IndexExpression": "class",
            "index_exp": "variable",
            "s_": "variable",
            "_fill_diagonal_dispatcher": "function",
            "fill_diagonal": "function",
            "diag_indices": "function",
            "_diag_indices_from": "function",
            "diag_indices_from": "function"
        },
        "nanfunctions": {
            "array_function_dispatch": "variable",
            "__all__": "variable",
            "_nan_mask": "function",
            "_replace_nan": "function",
            "_copyto": "function",
            "_remove_nan_1d": "function",
            "_divide_by_count": "function",
            "_nanmin_dispatcher": "function",
            "nanmin": "function",
            "_nanmax_dispatcher": "function",
            "nanmax": "function",
            "_nanargmin_dispatcher": "function",
            "nanargmin": "function",
            "_nanargmax_dispatcher": "function",
            "nanargmax": "function",
            "_nansum_dispatcher": "function",
            "nansum": "function",
            "_nanprod_dispatcher": "function",
            "nanprod": "function",
            "_nancumsum_dispatcher": "function",
            "nancumsum": "function",
            "_nancumprod_dispatcher": "function",
            "nancumprod": "function",
            "_nanmean_dispatcher": "function",
            "nanmean": "function",
            "_nanmedian1d": "function",
            "_nanmedian": "function",
            "_nanmedian_small": "function",
            "_nanmedian_dispatcher": "function",
            "nanmedian": "function",
            "_nanpercentile_dispatcher": "function",
            "nanpercentile": "function",
            "_nanquantile_dispatcher": "function",
            "nanquantile": "function",
            "_nanquantile_unchecked": "function",
            "_nanquantile_ureduce_func": "function",
            "_nanquantile_1d": "function",
            "_nanvar_dispatcher": "function",
            "nanvar": "function",
            "_nanstd_dispatcher": "function",
            "nanstd": "function"
        },
        "npyio": {
            "loads": "function",
            "__all__": "variable",
            "array_function_dispatch": "variable",
            "BagObj": "class",
            "zipfile_factory": "function",
            "NpzFile": "class",
            "load": "function",
            "_save_dispatcher": "function",
            "save": "function",
            "_savez_dispatcher": "function",
            "savez": "function",
            "_savez_compressed_dispatcher": "function",
            "savez_compressed": "function",
            "_savez": "function",
            "_getconv": "function",
            "_loadtxt_chunksize": "variable",
            "_loadtxt_dispatcher": "function",
            "loadtxt": "function",
            "_loadtxt_with_like": "variable",
            "_savetxt_dispatcher": "function",
            "savetxt": "function",
            "fromregex": "function",
            "_genfromtxt_dispatcher": "function",
            "genfromtxt": "function",
            "_genfromtxt_with_like": "variable",
            "ndfromtxt": "function",
            "mafromtxt": "function",
            "recfromtxt": "function",
            "recfromcsv": "function"
        },
        "polynomial": {
            "__all__": "variable",
            "array_function_dispatch": "variable",
            "RankWarning": "class",
            "_poly_dispatcher": "function",
            "poly": "function",
            "_roots_dispatcher": "function",
            "roots": "function",
            "_polyint_dispatcher": "function",
            "polyint": "function",
            "_polyder_dispatcher": "function",
            "polyder": "function",
            "_polyfit_dispatcher": "function",
            "polyfit": "function",
            "_polyval_dispatcher": "function",
            "polyval": "function",
            "_binary_op_dispatcher": "function",
            "polyadd": "function",
            "polysub": "function",
            "polymul": "function",
            "_polydiv_dispatcher": "function",
            "polydiv": "function",
            "_poly_mat": "variable",
            "_raise_power": "function",
            "poly1d": "class"
        },
        "recfunctions": {
            "_check_fill_value": "variable",
            "__all__": "variable",
            "_recursive_fill_fields_dispatcher": "function",
            "recursive_fill_fields": "function",
            "_get_fieldspec": "function",
            "get_names": "function",
            "get_names_flat": "function",
            "flatten_descr": "function",
            "_zip_dtype": "function",
            "_zip_descr": "function",
            "get_fieldstructure": "function",
            "_izip_fields_flat": "function",
            "_izip_fields": "function",
            "_izip_records": "function",
            "_fix_output": "function",
            "_fix_defaults": "function",
            "_merge_arrays_dispatcher": "function",
            "merge_arrays": "function",
            "_drop_fields_dispatcher": "function",
            "drop_fields": "function",
            "_keep_fields": "function",
            "_rec_drop_fields_dispatcher": "function",
            "rec_drop_fields": "function",
            "_rename_fields_dispatcher": "function",
            "rename_fields": "function",
            "_append_fields_dispatcher": "function",
            "append_fields": "function",
            "_rec_append_fields_dispatcher": "function",
            "rec_append_fields": "function",
            "_repack_fields_dispatcher": "function",
            "repack_fields": "function",
            "_get_fields_and_offsets": "function",
            "_structured_to_unstructured_dispatcher": "function",
            "structured_to_unstructured": "function",
            "_unstructured_to_structured_dispatcher": "function",
            "unstructured_to_structured": "function",
            "_apply_along_fields_dispatcher": "function",
            "apply_along_fields": "function",
            "_assign_fields_by_name_dispatcher": "function",
            "assign_fields_by_name": "function",
            "_require_fields_dispatcher": "function",
            "require_fields": "function",
            "_stack_arrays_dispatcher": "function",
            "stack_arrays": "function",
            "_find_duplicates_dispatcher": "function",
            "find_duplicates": "function",
            "_join_by_dispatcher": "function",
            "join_by": "function",
            "_rec_join_dispatcher": "function",
            "rec_join": "function"
        },
        "scimath": {
            "__all__": "variable",
            "_ln2": "variable",
            "_tocomplex": "function",
            "_fix_real_lt_zero": "function",
            "_fix_int_lt_zero": "function",
            "_fix_real_abs_gt_1": "function",
            "_unary_dispatcher": "function",
            "sqrt": "function",
            "log": "function",
            "log10": "function",
            "_logn_dispatcher": "function",
            "logn": "function",
            "log2": "function",
            "_power_dispatcher": "function",
            "power": "function",
            "arccos": "function",
            "arcsin": "function",
            "arctanh": "function"
        },
        "setup": {
            "configuration": "function"
        },
        "shape_base": {
            "__all__": "variable",
            "array_function_dispatch": "variable",
            "_make_along_axis_idx": "function",
            "_take_along_axis_dispatcher": "function",
            "take_along_axis": "function",
            "_put_along_axis_dispatcher": "function",
            "put_along_axis": "function",
            "_apply_along_axis_dispatcher": "function",
            "apply_along_axis": "function",
            "_apply_over_axes_dispatcher": "function",
            "apply_over_axes": "function",
            "_expand_dims_dispatcher": "function",
            "expand_dims": "function",
            "row_stack": "variable",
            "_column_stack_dispatcher": "function",
            "column_stack": "function",
            "_dstack_dispatcher": "function",
            "dstack": "function",
            "_replace_zero_by_x_arrays": "function",
            "_array_split_dispatcher": "function",
            "array_split": "function",
            "_split_dispatcher": "function",
            "split": "function",
            "_hvdsplit_dispatcher": "function",
            "hsplit": "function",
            "vsplit": "function",
            "dsplit": "function",
            "get_array_prepare": "function",
            "get_array_wrap": "function",
            "_kron_dispatcher": "function",
            "kron": "function",
            "_tile_dispatcher": "function",
            "tile": "function"
        },
        "stride_tricks": {
            "__all__": "variable",
            "DummyArray": "class",
            "_maybe_view_as_subclass": "function",
            "as_strided": "function",
            "_sliding_window_view_dispatcher": "function",
            "sliding_window_view": "function",
            "_broadcast_to": "function",
            "_broadcast_to_dispatcher": "function",
            "broadcast_to": "function",
            "_broadcast_shape": "function",
            "broadcast_shapes": "function",
            "_broadcast_arrays_dispatcher": "function",
            "broadcast_arrays": "function"
        },
        "twodim_base": {
            "__all__": "variable",
            "array_function_dispatch": "variable",
            "i1": "variable",
            "i2": "variable",
            "i4": "variable",
            "_min_int": "function",
            "_flip_dispatcher": "function",
            "fliplr": "function",
            "flipud": "function",
            "_eye_dispatcher": "function",
            "eye": "function",
            "_eye_with_like": "variable",
            "_diag_dispatcher": "function",
            "diag": "function",
            "diagflat": "function",
            "_tri_dispatcher": "function",
            "tri": "function",
            "_tri_with_like": "variable",
            "_trilu_dispatcher": "function",
            "tril": "function",
            "triu": "function",
            "_vander_dispatcher": "function",
            "vander": "function",
            "_histogram2d_dispatcher": "function",
            "histogram2d": "function",
            "mask_indices": "function",
            "tril_indices": "function",
            "_trilu_indices_form_dispatcher": "function",
            "tril_indices_from": "function",
            "triu_indices": "function",
            "triu_indices_from": "function"
        },
        "type_check": {
            "__all__": "variable",
            "array_function_dispatch": "variable",
            "_typecodes_by_elsize": "variable",
            "mintypecode": "function",
            "_asfarray_dispatcher": "function",
            "asfarray": "function",
            "_real_dispatcher": "function",
            "real": "function",
            "_imag_dispatcher": "function",
            "imag": "function",
            "_is_type_dispatcher": "function",
            "iscomplex": "function",
            "isreal": "function",
            "iscomplexobj": "function",
            "isrealobj": "function",
            "_getmaxmin": "function",
            "_nan_to_num_dispatcher": "function",
            "nan_to_num": "function",
            "_real_if_close_dispatcher": "function",
            "real_if_close": "function",
            "_asscalar_dispatcher": "function",
            "asscalar": "function",
            "_namefromtype": "variable",
            "typename": "function",
            "array_type": "variable",
            "array_precision": "variable",
            "_common_type_dispatcher": "function",
            "common_type": "function"
        },
        "ufunclike": {
            "__all__": "variable",
            "_deprecate_out_named_y": "function",
            "_fix_out_named_y": "function",
            "_fix_and_maybe_deprecate_out_named_y": "function",
            "_dispatcher": "function",
            "fix": "function",
            "isposinf": "function",
            "isneginf": "function"
        },
        "user_array": {
            "container": "class"
        },
        "utils": {
            "__all__": "variable",
            "get_include": "function",
            "_set_function_name": "function",
            "_Deprecate": "class",
            "_get_indent": "function",
            "deprecate": "function",
            "deprecate_with_doc": "variable",
            "byte_bounds": "function",
            "who": "function",
            "_split_line": "function",
            "_namedict": "variable",
            "_dictlist": "variable",
            "_makenamedict": "function",
            "_info": "function",
            "info": "function",
            "source": "function",
            "_lookfor_caches": "variable",
            "_function_signature_re": "variable",
            "lookfor": "function",
            "_lookfor_generate_cache": "function",
            "_getmembers": "function",
            "safe_eval": "function",
            "_median_nancheck": "function"
        },
        "_datasource": {
            "_open": "variable",
            "_check_mode": "function",
            "_FileOpeners": "class",
            "_file_openers": "variable",
            "open": "function",
            "DataSource": "class",
            "Repository ": "class"
        },
        "_iotools": {
            "__docformat__": "variable",
            "_decode_line": "function",
            "_is_string_like": "function",
            "_is_bytes_like": "function",
            "has_nested_fields": "function",
            "flatten_dtype": "function",
            "LineSplitter": "class",
            "NameValidator": "class",
            "str2bool": "function",
            "ConverterError": "class",
            "ConverterLockError": "class",
            "ConversionWarning": "class",
            "StringConverter": "class",
            "easy_dtype": "function"
        },
        "_version": {
            "__all__": "variable",
            "NumpyVersion": "class"
        },
        "": {
            "__all__": "variable",
            "test": "variable"
        }
    },
    "linalg": {
        "": {
            "Tensor": "variable",
            "common_notes": "variable",
            "cholesky": "variable",
            "inv": "variable",
            "det": "variable",
            "eig": "variable",
            "eigh": "variable",
            "householder_product": "variable",
            "matrix_power": "variable",
            "norm": "variable",
            "matrix_norm": "variable",
            "multi_dot": "variable",
            "svdvals": "variable",
            "pinv": "variable",
            "tensorinv": "variable",
            "qr": "variable"
        }
    },
    "ma": {
        "tests": {
            "test_core": {
                "__author__": "variable",
                "pi": "variable",
                "suppress_copy_mask_on_assignment": "variable",
                "num_dts": "variable",
                "num_ids": "variable",
                "TestMaskedArray": "class",
                "TestMaskedArrayArithmetic": "class",
                "TestMaskedArrayAttributes": "class",
                "TestFillingValues": "class",
                "TestUfuncs": "class",
                "TestMaskedArrayInPlaceArithmetics": "class",
                "TestMaskedArrayMethods": "class",
                "TestMaskedArrayMathMethods": "class",
                "TestMaskedArrayMathMethodsComplex": "class",
                "TestMaskedArrayFunctions": "class",
                "TestMaskedFields": "class",
                "TestMaskedObjectArray": "class",
                "TestMaskedView": "class",
                "TestOptionalArgs": "class",
                "TestMaskedConstant": "class",
                "TestMaskedWhereAliases": "class",
                "test_masked_array": "function",
                "test_append_masked_array": "function",
                "test_append_masked_array_along_axis": "function",
                "test_default_fill_value_complex": "function",
                "test_ufunc_with_output": "function",
                "test_ufunc_with_out_varied": "function",
                "test_astype_mask_ordering": "function",
                "test_astype_basic": "function",
                "test_fieldless_void": "function",
                "test_mask_shape_assignment_does_not_break_masked": "function",
                "test_doc_note": "function"
            },
            "test_deprecations": {
                "TestArgsort": "class",
                "TestMinimumMaximum": "class"
            },
            "test_extras": {
                "TestGeneric": "class",
                "TestAverage": "class",
                "TestConcatenator": "class",
                "TestNotMasked": "class",
                "TestCompressFunctions": "class",
                "TestApplyAlongAxis": "class",
                "TestApplyOverAxes": "class",
                "TestMedian": "class",
                "TestCov": "class",
                "TestCorrcoef": "class",
                "TestPolynomial": "class",
                "TestArraySetOps": "class",
                "TestShapeBase": "class",
                "TestStack": "class"
            },
            "test_mrecords": {
                "TestMRecords": "class",
                "TestView": "class",
                "TestMRecordsImport": "class",
                "test_record_array_with_object_field": "function"
            },
            "test_old_ma": {
                "pi": "variable",
                "eq": "function",
                "TestMa": "class",
                "TestUfuncs": "class",
                "TestArrayMethods": "class",
                "eqmask": "function"
            },
            "test_regression": {
                "TestRegression": "class"
            },
            "test_subclassing": {
                "assert_startswith": "function",
                "SubArray": "class",
                "subarray": "variable",
                "SubMaskedArray": "class",
                "MSubArray": "class",
                "msubarray": "variable",
                "CSAIterator": "class",
                "ComplicatedSubArray": "class",
                "TestSubclassing": "class"
            }
        },
        "bench": {
            "xs": "variable",
            "ys": "variable",
            "zs": "variable",
            "m1": "variable",
            "m2": "variable",
            "nmxs": "variable",
            "nmys": "variable",
            "nmzs": "variable",
            "xl": "variable",
            "yl": "variable",
            "zl": "variable",
            "maskx": "variable",
            "masky": "variable",
            "nmxl": "variable",
            "nmyl": "variable",
            "nmzl": "variable",
            "timer": "function",
            "compare_functions_1v": "function",
            "compare_methods": "function",
            "compare_functions_2v": "function"
        },
        "core": {
            "__all__": "variable",
            "MaskType": "variable",
            "nomask": "variable",
            "MaskedArrayFutureWarning": "class",
            "_deprecate_argsort_axis": "function",
            "doc_note": "function",
            "get_object_signature": "function",
            "MAError": "class",
            "MaskError": "class",
            "default_filler": "variable",
            "float_types_list": "variable",
            "max_filler": "variable",
            "min_filler": "variable",
            "_recursive_fill_value": "function",
            "_get_dtype_of": "function",
            "default_fill_value": "function",
            "_extremum_fill_value": "function",
            "minimum_fill_value": "function",
            "maximum_fill_value": "function",
            "_recursive_set_fill_value": "function",
            "_check_fill_value": "function",
            "set_fill_value": "function",
            "get_fill_value": "function",
            "common_fill_value": "function",
            "filled": "function",
            "get_masked_subclass": "function",
            "getdata": "function",
            "get_data": "variable",
            "fix_invalid": "function",
            "is_string_or_list_of_strings": "function",
            "ufunc_domain": "variable",
            "ufunc_fills": "variable",
            "_DomainCheckInterval": "class",
            "_DomainTan": "class",
            "_DomainSafeDivide": "class",
            "_DomainGreater": "class",
            "_DomainGreaterEqual": "class",
            "_MaskedUFunc": "class",
            "_MaskedUnaryOperation": "class",
            "_MaskedBinaryOperation": "class",
            "_DomainedBinaryOperation": "class",
            "exp": "variable",
            "conjugate": "variable",
            "sin": "variable",
            "cos": "variable",
            "arctan": "variable",
            "arcsinh": "variable",
            "sinh": "variable",
            "cosh": "variable",
            "tanh": "variable",
            "abs": "variable",
            "angle": "variable",
            "fabs": "variable",
            "negative": "variable",
            "floor": "variable",
            "ceil": "variable",
            "around": "variable",
            "logical_not": "variable",
            "sqrt": "variable",
            "log": "variable",
            "log2": "variable",
            "log10": "variable",
            "tan": "variable",
            "arcsin": "variable",
            "arccos": "variable",
            "arccosh": "variable",
            "arctanh": "variable",
            "add": "variable",
            "subtract": "variable",
            "multiply": "variable",
            "arctan2": "variable",
            "equal": "variable",
            "equal.reduce": "variable",
            "not_equal": "variable",
            "not_equal.reduce": "variable",
            "less_equal": "variable",
            "less_equal.reduce": "variable",
            "greater_equal": "variable",
            "greater_equal.reduce": "variable",
            "less": "variable",
            "less.reduce": "variable",
            "greater": "variable",
            "greater.reduce": "variable",
            "logical_and": "variable",
            "alltrue": "variable",
            "logical_or": "variable",
            "sometrue": "variable",
            "logical_xor": "variable",
            "bitwise_and": "variable",
            "bitwise_or": "variable",
            "bitwise_xor": "variable",
            "hypot": "variable",
            "divide": "variable",
            "true_divide": "variable",
            "floor_divide": "variable",
            "remainder": "variable",
            "fmod": "variable",
            "mod": "variable",
            "_replace_dtype_fields_recursive": "function",
            "_replace_dtype_fields": "function",
            "make_mask_descr": "function",
            "getmask": "function",
            "get_mask": "variable",
            "getmaskarray": "function",
            "is_mask": "function",
            "_shrink_mask": "function",
            "make_mask": "function",
            "make_mask_none": "function",
            "mask_or": "function",
            "flatten_mask": "function",
            "_check_mask_axis": "function",
            "masked_where": "function",
            "masked_greater": "function",
            "masked_greater_equal": "function",
            "masked_less": "function",
            "masked_less_equal": "function",
            "masked_not_equal": "function",
            "masked_equal": "function",
            "masked_inside": "function",
            "masked_outside": "function",
            "masked_object": "function",
            "masked_values": "function",
            "masked_invalid": "function",
            "_MaskedPrintOption": "class",
            "masked_print_option": "variable",
            "_recursive_printoption": "function",
            "_legacy_print_templates": "variable",
            "_recursive_filled": "function",
            "flatten_structured_array": "function",
            "_arraymethod": "function",
            "MaskedIterator": "class",
            "MaskedArray": "class",
            "_mareconstruct": "function",
            "mvoid": "class",
            "isMaskedArray": "function",
            "isarray": "variable",
            "isMA": "variable",
            "MaskedConstant": "class",
            "masked": "variable",
            "masked_array": "variable",
            "array": "function",
            "array.__doc__": "variable",
            "is_masked": "function",
            "_extrema_operation": "class",
            "min": "function",
            "min.__doc__": "variable",
            "max": "function",
            "max.__doc__": "variable",
            "ptp": "function",
            "ptp.__doc__": "variable",
            "_frommethod": "class",
            "all": "variable",
            "anomalies": "variable",
            "any": "variable",
            "compress": "variable",
            "cumprod": "variable",
            "cumsum": "variable",
            "copy": "variable",
            "diagonal": "variable",
            "harden_mask": "variable",
            "ids": "variable",
            "maximum": "variable",
            "mean": "variable",
            "minimum": "variable",
            "nonzero": "variable",
            "prod": "variable",
            "product": "variable",
            "ravel": "variable",
            "repeat": "variable",
            "shrink_mask": "variable",
            "soften_mask": "variable",
            "std": "variable",
            "sum": "variable",
            "swapaxes": "variable",
            "trace": "variable",
            "var": "variable",
            "count": "variable",
            "take": "function",
            "power": "function",
            "argmin": "variable",
            "argmax": "variable",
            "argsort": "function",
            "argsort.__doc__": "variable",
            "sort": "function",
            "compressed": "function",
            "concatenate": "function",
            "diag": "function",
            "left_shift": "function",
            "right_shift": "function",
            "put": "function",
            "putmask": "function",
            "transpose": "function",
            "reshape": "function",
            "resize": "function",
            "ndim": "function",
            "ndim.__doc__": "variable",
            "shape": "function",
            "shape.__doc__": "variable",
            "size": "function",
            "size.__doc__": "variable",
            "where": "function",
            "choose": "function",
            "round_": "function",
            "round": "variable",
            "mask_rowcols": "function",
            "dot": "function",
            "inner": "function",
            "inner.__doc__": "variable",
            "innerproduct": "variable",
            "outer": "function",
            "outer.__doc__": "variable",
            "outerproduct": "variable",
            "_convolve_or_correlate": "function",
            "correlate": "function",
            "convolve": "function",
            "allequal": "function",
            "allclose": "function",
            "asarray": "function",
            "asanyarray": "function",
            "_pickle_warn": "function",
            "fromfile": "function",
            "fromflex": "function",
            "_convert2ma": "class",
            "arange": "variable",
            "clip": "variable",
            "diff": "variable",
            "empty": "variable",
            "empty_like": "variable",
            "frombuffer": "variable",
            "fromfunction": "variable",
            "identity": "variable",
            "indices": "variable",
            "ones": "variable",
            "ones_like": "variable",
            "squeeze": "variable",
            "zeros": "variable",
            "zeros_like": "variable",
            "append": "function"
        },
        "extras": {
            "__all__": "variable",
            "issequence": "function",
            "count_masked": "function",
            "masked_all": "function",
            "masked_all_like": "function",
            "_fromnxfunction": "class",
            "_fromnxfunction_single": "class",
            "_fromnxfunction_seq": "class",
            "_fromnxfunction_args": "class",
            "_fromnxfunction_allargs": "class",
            "atleast_1d": "variable",
            "atleast_2d": "variable",
            "atleast_3d": "variable",
            "vstack": "variable",
            "hstack": "variable",
            "column_stack": "variable",
            "dstack": "variable",
            "stack": "variable",
            "hsplit": "variable",
            "diagflat": "variable",
            "flatten_inplace": "function",
            "apply_along_axis": "function",
            "apply_along_axis.__doc__": "variable",
            "apply_over_axes": "function",
            "average": "function",
            "median": "function",
            "_median": "function",
            "compress_nd": "function",
            "compress_rowcols": "function",
            "compress_rows": "function",
            "compress_cols": "function",
            "mask_rows": "function",
            "mask_cols": "function",
            "ediff1d": "function",
            "unique": "function",
            "intersect1d": "function",
            "setxor1d": "function",
            "in1d": "function",
            "isin": "function",
            "union1d": "function",
            "setdiff1d": "function",
            "_covhelper": "function",
            "cov": "function",
            "corrcoef": "function",
            "MAxisConcatenator": "class",
            "mr_class": "class",
            "mr_": "variable",
            "flatnotmasked_edges": "function",
            "notmasked_edges": "function",
            "flatnotmasked_contiguous": "function",
            "notmasked_contiguous": "function",
            "_ezclump": "function",
            "clump_unmasked": "function",
            "clump_masked": "function",
            "vander": "function",
            "vander.__doc__": "variable",
            "polyfit": "function",
            "polyfit.__doc__": "variable"
        },
        "mrecords": {
            "_byteorderconv": "variable",
            "_check_fill_value": "variable",
            "__all__": "variable",
            "reserved_fields": "variable",
            "_checknames": "function",
            "_get_fieldmask": "function",
            "MaskedRecords": "class",
            "_mrreconstruct": "function",
            "mrecarray": "variable",
            "fromarrays": "function",
            "fromrecords": "function",
            "_guessvartypes": "function",
            "openfile": "function",
            "fromtextfile": "function",
            "addfield": "function"
        },
        "setup": {
            "configuration": "function"
        },
        "testutils": {
            "__all__masked": "variable",
            "__some__from_testing": "variable",
            "__all__": "variable",
            "approx": "function",
            "almost": "function",
            "_assert_equal_on_sequences": "function",
            "assert_equal_records": "function",
            "assert_equal": "function",
            "fail_if_equal": "function",
            "assert_not_equal": "variable",
            "assert_almost_equal": "function",
            "assert_close": "variable",
            "assert_array_compare": "function",
            "assert_array_equal": "function",
            "fail_if_array_equal": "function",
            "assert_array_approx_equal": "function",
            "assert_array_almost_equal": "function",
            "assert_array_less": "function",
            "assert_mask_equal": "function"
        },
        "timer_comparison": {
            "pi": "variable",
            "ModuleTester": "class"
        },
        "": {
            "__all__": "variable",
            "test": "variable"
        }
    },
    "matrixlib": {
        "tests": {
            "test_defmatrix": {
                "TestCtor": "class",
                "TestProperties": "class",
                "TestCasting": "class",
                "TestAlgebra": "class",
                "TestMatrixReturn": "class",
                "TestIndexing": "class",
                "TestNewScalarIndexing": "class",
                "TestPower": "class",
                "TestShape": "class"
            },
            "test_interaction": {
                "test_fancy_indexing": "function",
                "test_polynomial_mapdomain": "function",
                "test_sort_matrix_none": "function",
                "test_partition_matrix_none": "function",
                "test_dot_scalar_and_matrix_of_objects": "function",
                "test_inner_scalar_and_matrix": "function",
                "test_inner_scalar_and_matrix_of_objects": "function",
                "test_iter_allocate_output_subtype": "function",
                "like_function": "function",
                "test_array_astype": "function",
                "test_stack": "function",
                "test_object_scalar_multiply": "function",
                "test_nanfunctions_matrices": "function",
                "test_nanfunctions_matrices_general": "function",
                "test_average_matrix": "function",
                "test_trapz_matrix": "function",
                "test_ediff1d_matrix": "function",
                "test_apply_along_axis_matrix": "function",
                "test_kron_matrix": "function",
                "TestConcatenatorMatrix": "class",
                "test_array_equal_error_message_matrix": "function",
                "test_array_almost_equal_matrix": "function"
            },
            "test_masked_matrix": {
                "MMatrix": "class",
                "TestMaskedMatrix": "class",
                "TestSubclassing": "class",
                "TestConcatenator": "class"
            },
            "test_multiarray": {
                "TestView": "class"
            },
            "test_numeric": {
                "TestDot": "class",
                "test_diagonal": "function"
            },
            "test_regression": {
                "TestRegression": "class"
            }
        },
        "defmatrix": {
            "__all__": "variable",
            "_convert_from_string": "function",
            "asmatrix": "function",
            "matrix": "class",
            "_from_string": "function",
            "bmat": "function",
            "mat": "variable"
        },
        "setup": {
            "configuration": "function"
        },
        "": {
            "__all__": "variable",
            "test": "variable"
        }
    },
    "polynomial": {
        "tests": {
            "test_chebyshev": {
                "trim": "function",
                "T0": "variable",
                "T1": "variable",
                "T2": "variable",
                "T3": "variable",
                "T4": "variable",
                "T5": "variable",
                "T6": "variable",
                "T7": "variable",
                "T8": "variable",
                "T9": "variable",
                "Tlist": "variable",
                "TestPrivate": "class",
                "TestConstants": "class",
                "TestArithmetic": "class",
                "TestEvaluation": "class",
                "TestIntegral": "class",
                "TestDerivative": "class",
                "TestVander": "class",
                "TestFitting": "class",
                "TestInterpolate": "class",
                "TestCompanion": "class",
                "TestGauss": "class",
                "TestMisc": "class"
            },
            "test_classes": {
                "classes": "variable",
                "classids": "variable",
                "Poly": "function",
                "random": "variable",
                "assert_poly_almost_equal": "function",
                "Poly1": "variable",
                "Poly2": "variable",
                "test_conversion": "function",
                "test_cast": "function",
                "test_identity": "function",
                "test_basis": "function",
                "test_fromroots": "function",
                "test_bad_conditioned_fit": "function",
                "test_fit": "function",
                "test_equal": "function",
                "test_not_equal": "function",
                "test_add": "function",
                "test_sub": "function",
                "test_mul": "function",
                "test_floordiv": "function",
                "test_truediv": "function",
                "test_mod": "function",
                "test_divmod": "function",
                "test_roots": "function",
                "test_degree": "function",
                "test_copy": "function",
                "test_integ": "function",
                "test_deriv": "function",
                "test_linspace": "function",
                "test_pow": "function",
                "test_call": "function",
                "test_cutdeg": "function",
                "test_truncate": "function",
                "test_trim": "function",
                "test_mapparms": "function",
                "test_ufunc_override": "function",
                "TestInterpolate": "class"
            },
            "test_hermite": {
                "H0": "variable",
                "H1": "variable",
                "H2": "variable",
                "H3": "variable",
                "H4": "variable",
                "H5": "variable",
                "H6": "variable",
                "H7": "variable",
                "H8": "variable",
                "H9": "variable",
                "Hlist": "variable",
                "trim": "function",
                "TestConstants": "class",
                "TestArithmetic": "class",
                "TestEvaluation": "class",
                "TestIntegral": "class",
                "TestDerivative": "class",
                "TestVander": "class",
                "TestFitting": "class",
                "TestCompanion": "class",
                "TestGauss": "class",
                "TestMisc": "class"
            },
            "test_hermite_e": {
                "He0": "variable",
                "He1": "variable",
                "He2": "variable",
                "He3": "variable",
                "He4": "variable",
                "He5": "variable",
                "He6": "variable",
                "He7": "variable",
                "He8": "variable",
                "He9": "variable",
                "Helist": "variable",
                "trim": "function",
                "TestConstants": "class",
                "TestArithmetic": "class",
                "TestEvaluation": "class",
                "TestIntegral": "class",
                "TestDerivative": "class",
                "TestVander": "class",
                "TestFitting": "class",
                "TestCompanion": "class",
                "TestGauss": "class",
                "TestMisc": "class"
            },
            "test_laguerre": {
                "L0": "variable",
                "L1": "variable",
                "L2": "variable",
                "L3": "variable",
                "L4": "variable",
                "L5": "variable",
                "L6": "variable",
                "Llist": "variable",
                "trim": "function",
                "TestConstants": "class",
                "TestArithmetic": "class",
                "TestEvaluation": "class",
                "TestIntegral": "class",
                "TestDerivative": "class",
                "TestVander": "class",
                "TestFitting": "class",
                "TestCompanion": "class",
                "TestGauss": "class",
                "TestMisc": "class"
            },
            "test_legendre": {
                "L0": "variable",
                "L1": "variable",
                "L2": "variable",
                "L3": "variable",
                "L4": "variable",
                "L5": "variable",
                "L6": "variable",
                "L7": "variable",
                "L8": "variable",
                "L9": "variable",
                "Llist": "variable",
                "trim": "function",
                "TestConstants": "class",
                "TestArithmetic": "class",
                "TestEvaluation": "class",
                "TestIntegral": "class",
                "TestDerivative": "class",
                "TestVander": "class",
                "TestFitting": "class",
                "TestCompanion": "class",
                "TestGauss": "class",
                "TestMisc": "class"
            },
            "test_polynomial": {
                "trim": "function",
                "T0": "variable",
                "T1": "variable",
                "T2": "variable",
                "T3": "variable",
                "T4": "variable",
                "T5": "variable",
                "T6": "variable",
                "T7": "variable",
                "T8": "variable",
                "T9": "variable",
                "Tlist": "variable",
                "TestConstants": "class",
                "TestArithmetic": "class",
                "TestEvaluation": "class",
                "TestIntegral": "class",
                "TestDerivative": "class",
                "TestVander": "class",
                "TestCompanion": "class",
                "TestMisc": "class"
            },
            "test_polyutils": {
                "TestMisc": "class",
                "TestDomain": "class"
            },
            "test_printing": {
                "TestStrUnicodeSuperSubscripts": "class",
                "TestStrAscii": "class",
                "TestLinebreaking": "class",
                "test_set_default_printoptions": "function",
                "test_complex_coefficients": "function",
                "test_numeric_object_coefficients": "function",
                "test_nonnumeric_object_coefficients": "function",
                "TestFormat": "class",
                "TestRepr": "class",
                "TestLatexRepr": "class"
            }
        },
        "chebyshev": {
            "__all__": "variable",
            "chebtrim": "variable",
            "_cseries_to_zseries": "function",
            "_zseries_to_cseries": "function",
            "_zseries_mul": "function",
            "_zseries_div": "function",
            "_zseries_der": "function",
            "_zseries_int": "function",
            "poly2cheb": "function",
            "cheb2poly": "function",
            "chebdomain": "variable",
            "chebzero": "variable",
            "chebone": "variable",
            "chebx": "variable",
            "chebline": "function",
            "chebfromroots": "function",
            "chebadd": "function",
            "chebsub": "function",
            "chebmulx": "function",
            "chebmul": "function",
            "chebdiv": "function",
            "chebpow": "function",
            "chebder": "function",
            "chebint": "function",
            "chebval": "function",
            "chebval2d": "function",
            "chebgrid2d": "function",
            "chebval3d": "function",
            "chebgrid3d": "function",
            "chebvander": "function",
            "chebvander2d": "function",
            "chebvander3d": "function",
            "chebfit": "function",
            "chebcompanion": "function",
            "chebroots": "function",
            "chebinterpolate": "function",
            "chebgauss": "function",
            "chebweight": "function",
            "chebpts1": "function",
            "chebpts2": "function",
            "Chebyshev": "class"
        },
        "hermite": {
            "__all__": "variable",
            "hermtrim": "variable",
            "poly2herm": "function",
            "herm2poly": "function",
            "hermdomain": "variable",
            "hermzero": "variable",
            "hermone": "variable",
            "hermx": "variable",
            "hermline": "function",
            "hermfromroots": "function",
            "hermadd": "function",
            "hermsub": "function",
            "hermmulx": "function",
            "hermmul": "function",
            "hermdiv": "function",
            "hermpow": "function",
            "hermder": "function",
            "hermint": "function",
            "hermval": "function",
            "hermval2d": "function",
            "hermgrid2d": "function",
            "hermval3d": "function",
            "hermgrid3d": "function",
            "hermvander": "function",
            "hermvander2d": "function",
            "hermvander3d": "function",
            "hermfit": "function",
            "hermcompanion": "function",
            "hermroots": "function",
            "_normed_hermite_n": "function",
            "hermgauss": "function",
            "hermweight": "function",
            "Hermite": "class"
        },
        "hermite_e": {
            "__all__": "variable",
            "hermetrim": "variable",
            "poly2herme": "function",
            "herme2poly": "function",
            "hermedomain": "variable",
            "hermezero": "variable",
            "hermeone": "variable",
            "hermex": "variable",
            "hermeline": "function",
            "hermefromroots": "function",
            "hermeadd": "function",
            "hermesub": "function",
            "hermemulx": "function",
            "hermemul": "function",
            "hermediv": "function",
            "hermepow": "function",
            "hermeder": "function",
            "hermeint": "function",
            "hermeval": "function",
            "hermeval2d": "function",
            "hermegrid2d": "function",
            "hermeval3d": "function",
            "hermegrid3d": "function",
            "hermevander": "function",
            "hermevander2d": "function",
            "hermevander3d": "function",
            "hermefit": "function",
            "hermecompanion": "function",
            "hermeroots": "function",
            "_normed_hermite_e_n": "function",
            "hermegauss": "function",
            "hermeweight": "function",
            "HermiteE": "class"
        },
        "laguerre": {
            "__all__": "variable",
            "lagtrim": "variable",
            "poly2lag": "function",
            "lag2poly": "function",
            "lagdomain": "variable",
            "lagzero": "variable",
            "lagone": "variable",
            "lagx": "variable",
            "lagline": "function",
            "lagfromroots": "function",
            "lagadd": "function",
            "lagsub": "function",
            "lagmulx": "function",
            "lagmul": "function",
            "lagdiv": "function",
            "lagpow": "function",
            "lagder": "function",
            "lagint": "function",
            "lagval": "function",
            "lagval2d": "function",
            "laggrid2d": "function",
            "lagval3d": "function",
            "laggrid3d": "function",
            "lagvander": "function",
            "lagvander2d": "function",
            "lagvander3d": "function",
            "lagfit": "function",
            "lagcompanion": "function",
            "lagroots": "function",
            "laggauss": "function",
            "lagweight": "function",
            "Laguerre": "class"
        },
        "legendre": {
            "__all__": "variable",
            "legtrim": "variable",
            "poly2leg": "function",
            "leg2poly": "function",
            "legdomain": "variable",
            "legzero": "variable",
            "legone": "variable",
            "legx": "variable",
            "legline": "function",
            "legfromroots": "function",
            "legadd": "function",
            "legsub": "function",
            "legmulx": "function",
            "legmul": "function",
            "legdiv": "function",
            "legpow": "function",
            "legder": "function",
            "legint": "function",
            "legval": "function",
            "legval2d": "function",
            "leggrid2d": "function",
            "legval3d": "function",
            "leggrid3d": "function",
            "legvander": "function",
            "legvander2d": "function",
            "legvander3d": "function",
            "legfit": "function",
            "legcompanion": "function",
            "legroots": "function",
            "leggauss": "function",
            "legweight": "function",
            "Legendre": "class"
        },
        "polynomial": {
            "__all__": "variable",
            "polytrim": "variable",
            "polydomain": "variable",
            "polyzero": "variable",
            "polyone": "variable",
            "polyx": "variable",
            "polyline": "function",
            "polyfromroots": "function",
            "polyadd": "function",
            "polysub": "function",
            "polymulx": "function",
            "polymul": "function",
            "polydiv": "function",
            "polypow": "function",
            "polyder": "function",
            "polyint": "function",
            "polyval": "function",
            "polyvalfromroots": "function",
            "polyval2d": "function",
            "polygrid2d": "function",
            "polyval3d": "function",
            "polygrid3d": "function",
            "polyvander": "function",
            "polyvander2d": "function",
            "polyvander3d": "function",
            "polyfit": "function",
            "polycompanion": "function",
            "polyroots": "function",
            "Polynomial": "class"
        },
        "polyutils": {
            "__all__": "variable",
            "RankWarning": "class",
            "PolyError": "class",
            "PolyDomainError": "class",
            "PolyBase": "class",
            "trimseq": "function",
            "as_series": "function",
            "trimcoef": "function",
            "getdomain": "function",
            "mapparms": "function",
            "mapdomain": "function",
            "_nth_slice": "function",
            "_vander_nd": "function",
            "_vander_nd_flat": "function",
            "_fromroots": "function",
            "_valnd": "function",
            "_gridnd": "function",
            "_div": "function",
            "_add": "function",
            "_sub": "function",
            "_fit": "function",
            "_pow": "function",
            "_deprecate_as_int": "function"
        },
        "setup": {
            "configuration": "function"
        },
        "_polybase": {
            "__all__": "variable",
            "ABCPolyBase": "class"
        },
        "": {
            "set_default_printstyle": "function",
            "test": "variable"
        }
    },
    "random": {
        "set_rng_state": "function",
        "get_rng_state": "function",
        "manual_seed": "function",
        "seed": "function",
        "initial_seed": "function",
        "_fork_rng_warned_already": "variable",
        "fork_rng": "function"
    },
    "testing": {
        "_internal": {
            "codegen": {
                "random_topo_test": {
                    "DEBUG_PRINT": "variable",
                    "MAX_TENSOR": "variable",
                    "MAX_TENSOR_DIM": "variable",
                    "MAX_TENSOR_SIZE": "variable",
                    "DEBUG_TENSOR": "variable",
                    "DEVICE": "variable",
                    "DTYPE": "variable",
                    "GRAPH_FACTOR": "variable",
                    "WrongResultException": "class",
                    "get_broadcast_compatible_shape": "function",
                    "random_topology_test": "function",
                    "prepareInputTensorsToRandomTopoTest": "function",
                    "reproString": "function",
                    "runDefaultTestWithSeed": "function",
                    "runTest": "function",
                    "parse_args": "function"
                }
            },
            "data": {
                "network1": {
                    "Net": "class"
                },
                "network2": {
                    "Net": "class"
                }
            },
            "distributed": {
                "nn": {
                    "api": {
                        "remote_module_test": {
                            "_PARAM_VAL": "variable",
                            "remote_device": "function",
                            "remote_module_attributes": "function",
                            "remote_forward": "function",
                            "remote_forward_async": "function",
                            "get_remote_training_arg": "function",
                            "ModuleCreationMode": "class",
                            "MyModuleInterface": "class",
                            "RemoteMyModuleInterface": "class",
                            "MyModule": "class",
                            "BadModule": "class",
                            "create_scripted_module": "function",
                            "CommonRemoteModuleTest": "class",
                            "RemoteModuleTest": "class",
                            "ThreeWorkersRemoteModuleTest": "class",
                            "CudaRemoteModuleTest": "class"
                        }
                    }
                },
                "rpc": {
                    "examples": {
                        "parameter_server_test": {
                            "batch_size": "variable",
                            "in_features": "variable",
                            "out_features": "variable",
                            "num_batches": "variable",
                            "timed_log": "function",
                            "BatchUpdateParameterServer": "class",
                            "Trainer": "class",
                            "run_trainer": "function",
                            "run_ps": "function",
                            "ParameterServerTest": "class"
                        },
                        "reinforcement_learning_rpc_test": {
                            "TOTAL_EPISODE_STEP": "variable",
                            "GAMMA": "variable",
                            "SEED": "variable",
                            "_call_method": "function",
                            "_remote_method": "function",
                            "Policy": "class",
                            "DummyEnv": "class",
                            "Observer": "class",
                            "Agent": "class",
                            "run_agent": "function",
                            "ReinforcementLearningRpcTest": "class"
                        }
                    },
                    "jit": {
                        "dist_autograd_test": {
                            "local_add": "function",
                            "remote_add": "function",
                            "fork_add": "function",
                            "JitDistAutogradTest": "class"
                        },
                        "rpc_test": {
                            "rref_isinstance": "function",
                            "sleep": "function",
                            "rpc_return_rref": "function",
                            "rref_local_value": "function",
                            "list_create": "function",
                            "rref_list_mutate": "function",
                            "return_value": "function",
                            "RRefAPITest": "class",
                            "no_arg": "function",
                            "one_arg": "function",
                            "script_add_ones": "function",
                            "script_add_ones_with_record_function": "function",
                            "record_function_on_caller_rpc_async": "function",
                            "script_fork_wait_udf": "function",
                            "rref_to_here": "function",
                            "return_rref": "function",
                            "script_raise_func": "function",
                            "script_fork_wait_throw": "function",
                            "call_rpc_with_profiling": "function",
                            "call_rpc_torchscript_with_record_function": "function",
                            "call_fork_with_profiling": "function",
                            "MyScriptModuleWithRRefs": "class",
                            "rref_python_annotation": "function",
                            "rref_script_annotation": "function",
                            "RRefTypingTest": "class",
                            "FutureTypingTest": "class",
                            "MyScriptClass": "class",
                            "MyModuleInterface": "class",
                            "MyScriptModule": "class",
                            "owner_create_rref_my_script_class": "function",
                            "owner_create_rref_my_script_module": "function",
                            "script_rref_get_value_my_script_class": "function",
                            "script_rref_run_forward_my_script_module": "function",
                            "LocalRRefTest": "class",
                            "python_function": "function",
                            "two_args_two_kwargs": "function",
                            "assorted_types_args_kwargs": "function",
                            "raise_script": "function",
                            "script_rpc_async_call": "function",
                            "script_rpc_sync_call": "function",
                            "script_rpc_remote_call": "function",
                            "JitRpcOpTest": "class",
                            "my_script_module_init": "function",
                            "construct_my_script_module": "function",
                            "run_ref_script_module": "function",
                            "script_check_rref_confirmed": "function",
                            "save_rref": "function",
                            "script_add": "function",
                            "async_add": "function",
                            "async_wrong_type": "function",
                            "load_script_module_with_pickled_rref": "function",
                            "JitRpcTest": "class"
                        },
                        "rpc_test_faulty": {
                            "two_args_two_kwargs": "function",
                            "script_rpc_async_call": "function",
                            "rpc_async_call_with_timeout": "function",
                            "rpc_async_call_with_timeout_future_ret": "function",
                            "rpc_async_call_future_ret": "function",
                            "rref_to_here": "function",
                            "rref_to_here_with_timeout": "function",
                            "rpc_async_with_rref_arg": "function",
                            "JitFaultyAgentRpcTest": "class"
                        }
                    },
                    "dist_autograd_test": {
                        "rpc_done": "variable",
                        "ctx_ids": "variable",
                        "known_context_ids": "variable",
                        "requires_grad_tensor": "variable",
                        "_set_rpc_done": "function",
                        "_check_rpc_done": "function",
                        "_torch_ones": "function",
                        "_compare_owner_value": "function",
                        "create_tensor": "function",
                        "build_sparse_tensor": "function",
                        "create_torchscript_tensor": "function",
                        "my_py_add": "function",
                        "my_scalar_add": "function",
                        "my_rref_add": "function",
                        "my_script_add": "function",
                        "my_script_ref_add": "function",
                        "my_nested_rref_add": "function",
                        "ret_requires_grad": "function",
                        "my_py_nested_call": "function",
                        "_all_contexts_cleaned_up": "function",
                        "_run_trainer": "function",
                        "_run_trainer_torchscript": "function",
                        "SimulateBackwardError": "class",
                        "ExecMode": "class",
                        "CommonDistAutogradTest": "class",
                        "DistAutogradTest": "class",
                        "CudaDistAutogradTest": "class",
                        "FaultyAgentDistAutogradTest": "class",
                        "WrapperModule": "class",
                        "TensorPipeCudaDistAutogradTest": "class"
                    },
                    "dist_optimizer_test": {
                        "MyModule": "class",
                        "FailingOptimizer": "class",
                        "OptimizerFailingOnConstructor": "class",
                        "_call_method": "function",
                        "remote_method": "function",
                        "rpc_async_method": "function",
                        "DistOptimizerTest": "class"
                    },
                    "faulty_rpc_agent_test_fixture": {
                        "retryable_message_types": "variable",
                        "default_messages_to_delay": "variable",
                        "FaultyRpcAgentTestFixture": "class"
                    },
                    "rpc_agent_test_fixture": {
                        "RpcAgentTestFixture": "class"
                    },
                    "rpc_test": {
                        "foo_add": "function",
                        "udf_with_torch_ops": "function",
                        "EXPECTED_REMOTE_EVENTS": "variable",
                        "REMOTE_OP_STR": "variable",
                        "VALUE_FUTURE": "variable",
                        "DONE_FUTURE": "variable",
                        "FIFTY_MIL_CYCLES": "variable",
                        "_rpc_barrier_count": "variable",
                        "_increment_count": "function",
                        "_reset_count": "function",
                        "StubRpcAgent": "class",
                        "_stub_construct_rpc_backend_options_handler": "function",
                        "_stub_init_rpc_backend_handler": "function",
                        "set_value": "function",
                        "wait_for_value_future": "function",
                        "set_and_check_done": "function",
                        "TensorClass": "variable",
                        "MyPickleClass": "class",
                        "SlowPickleClass": "class",
                        "MyClass": "class",
                        "_call_method_on_rref": "function",
                        "get_rref_list": "function",
                        "add_rref_to_value": "function",
                        "run_nested_pickle": "function",
                        "build_sparse_tensor": "function",
                        "build_complex_tensors": "function",
                        "non_cont_test": "function",
                        "my_function": "function",
                        "my_tensor_function": "function",
                        "my_container_sum": "function",
                        "my_sleep_func": "function",
                        "my_complex_tensor_function": "function",
                        "my_rref_function": "function",
                        "delayed_add": "function",
                        "no_result": "function",
                        "raise_or_inc": "function",
                        "nested_rpc": "function",
                        "nested_rpc_sparse": "function",
                        "multi_layer_nested_async_rpc": "function",
                        "nested_rref": "function",
                        "nested_rref_sparse": "function",
                        "nested_remote": "function",
                        "nested_remote_sparse": "function",
                        "rref_forward_chain": "function",
                        "rpc_return_rref": "function",
                        "light_rpc": "function",
                        "heavy_rpc": "function",
                        "heavy_rpc_sparse": "function",
                        "heavy_rpc_torchscript": "function",
                        "my_script_func": "function",
                        "expected_err": "variable",
                        "raise_func": "function",
                        "raise_func_script": "function",
                        "expected_err_escape": "variable",
                        "raise_func_escape": "function",
                        "global_rref": "variable",
                        "set_global_rref": "function",
                        "clear_global_rref": "function",
                        "check_rref_confirmed": "function",
                        "get_rref_debug_info": "function",
                        "add_use_future_cb": "function",
                        "get_events_from_profile": "function",
                        "add_use_future_set_result": "function",
                        "add_use_future_nested_cb": "function",
                        "fail_on_fut": "function",
                        "async_raise_func": "function",
                        "async_wrong_type": "function",
                        "async_add": "function",
                        "slow_add": "function",
                        "slow_async_add": "function",
                        "async_add_with_future_ctor": "function",
                        "async_add_chained": "function",
                        "async_add_chained_multi": "function",
                        "async_add_nested": "function",
                        "async_add_multi_fanout": "function",
                        "async_cuda_sleep_and_set_to_one": "function",
                        "async_cuda_nested_add": "function",
                        "TensorWrapper": "class",
                        "_cycles_per_ms": "variable",
                        "get_cycles_per_ms": "function",
                        "AsyncExecutionClass": "class",
                        "return_future": "function",
                        "FooBackendOptions": "class",
                        "load_tests": "variable",
                        "MyEmbeddingBagModel": "class",
                        "MyParameterServer": "class",
                        "RpcTest": "class",
                        "CudaRpcTest": "class",
                        "FaultyAgentRpcTest": "class",
                        "TensorPipeAgentRpcTest": "class",
                        "MyConvNetForMNIST": "class",
                        "TensorPipeAgentCudaRpcTest": "class"
                    },
                    "tensorpipe_rpc_agent_test_fixture": {
                        "TensorPipeRpcAgentTestFixture": "class"
                    }
                },
                "_sharded_tensor": {
                    "": {
                        "ShardedTensorTestBase": "class",
                        "with_comms": "function"
                    }
                },
                "ddp_under_dist_autograd_test": {
                    "NUM_EM_ROW": "variable",
                    "D_SPARSE": "variable",
                    "D_DENSE": "variable",
                    "D_HID": "variable",
                    "D_OUT": "variable",
                    "NUM_TRAINERS": "variable",
                    "WORLD_SIZE": "variable",
                    "TRAINER_RANKS": "variable",
                    "REMOTE_WORKER_RANK": "variable",
                    "MASTER_RANK": "variable",
                    "DdpMode": "class",
                    "init_logger": "function",
                    "gLogger": "variable",
                    "FeatureSet": "class",
                    "_call_method": "function",
                    "_remote_method": "function",
                    "_remote_method_async": "function",
                    "RemoteEM": "class",
                    "getLinear": "function",
                    "RemoteNet": "class",
                    "HybridModel": "class",
                    "Trainer": "class",
                    "get_training_examples": "function",
                    "shutdown_signal": "variable",
                    "set_shutdown_signal": "function",
                    "DdpUnderDistAutogradTest": "class",
                    "CommonDdpComparisonTest": "class",
                    "DdpComparisonTest": "class",
                    "CudaDdpComparisonTest": "class"
                },
                "distributed_test": {
                    "Foo": "class",
                    "f": "variable",
                    "f.bar": "variable",
                    "foo_cpu_tensor": "variable",
                    "COLLECTIVES_OBJECT_TEST_LIST": "variable",
                    "PROFILING_SUPPORTED_BACKENDS": "variable",
                    "CUDA_PROFILING_SUPPORTED_BACKENDS": "variable",
                    "SEND_RECV_PROFILING_SUPPORTED_BACKENDS": "variable",
                    "EXPECTED_FIELDS": "variable",
                    "TestNamedTupleInput_0": "variable",
                    "TestNamedTupleInput_1": "class",
                    "skipIfNoTorchVision": "variable",
                    "BACKEND": "variable",
                    "INIT_METHOD": "variable",
                    "DEFAULT_TIMEOUT": "variable",
                    "CUSTOMIZED_TIMEOUT": "variable",
                    "get_profiling_event": "function",
                    "ddp_prev_reduction_unfinished_str": "variable",
                    "ddp_recommend_find_unused_params_str": "variable",
                    "ddp_find_unused_params_enabled_str": "variable",
                    "ddp_outputs_not_used_in_loss_str": "variable",
                    "ddp_suggest_debug_mode_str": "variable",
                    "DDPUnevenTestInput": "class",
                    "_FC2": "class",
                    "Net": "class",
                    "LargeNet": "class",
                    "Task": "class",
                    "BatchNormNet": "class",
                    "UnusedParamTwoLinLayerNet": "class",
                    "DictOutputModule": "class",
                    "TwoLinLayerNet": "class",
                    "EmbeddingNet": "class",
                    "ControlFlowToyModel": "class",
                    "DDP_NET": "variable",
                    "BN_NET": "variable",
                    "BN_NET_NO_AFFINE": "variable",
                    "ONLY_SBN_NET": "variable",
                    "get_timeout": "function",
                    "default_pg_timeout": "variable",
                    "CUSTOM_PG_TIMEOUT": "variable",
                    "require_backend": "function",
                    "require_backends_available": "function",
                    "require_world_size": "function",
                    "apply_hack_for_nccl": "function",
                    "_lock": "function",
                    "_build_tensor": "function",
                    "_build_multidim_tensor": "function",
                    "_create_autograd_profiler": "function",
                    "_create_torch_profiler": "function",
                    "Barrier": "class",
                    "TestDistBackend": "class",
                    "DistributedTest": "class"
                },
                "pipe_with_ddp_test": {
                    "PipeWithDDPTest": "class"
                },
                "rpc_utils": {
                    "_check_and_set_tcp_init": "function",
                    "_check_and_unset_tcp_init": "function",
                    "SpawnHelper": "class",
                    "GENERIC_TESTS": "variable",
                    "GENERIC_CUDA_TESTS": "variable",
                    "TENSORPIPE_TESTS": "variable",
                    "TENSORPIPE_CUDA_TESTS": "variable",
                    "FAULTY_AGENT_TESTS": "variable",
                    "generate_tests": "function"
                }
            },
            "generated": {
                "annotated_fn_args": {
                    "annotated_args": "variable"
                }
            },
            "test_module": {
                "future_div": {
                    "div_int_future": "function",
                    "div_float_future": "function"
                },
                "no_future_div": {
                    "div_int_nofuture": "function",
                    "div_float_nofuture": "function"
                }
            },
            "autocast_test_lists": {
                "AutocastTestLists": "class",
                "AutocastCPUTestLists": "class"
            },
            "common_device_type": {
                "_dtype_test_suffix": "function",
                "_update_param_kwargs": "function",
                "DeviceTypeTestBase": "class",
                "CPUTestBase": "class",
                "MetaTestBase": "class",
                "CUDATestBase": "class",
                "get_device_type_test_bases": "function",
                "device_type_test_bases": "variable",
                "filter_desired_device_types": "function",
                "_TORCH_TEST_DEVICES": "variable",
                "PYTORCH_CUDA_MEMCHECK": "variable",
                "PYTORCH_TESTING_DEVICE_ONLY_FOR_KEY": "variable",
                "PYTORCH_TESTING_DEVICE_EXCEPT_FOR_KEY": "variable",
                "instantiate_device_type_tests": "function",
                "OpDTypes": "class",
                "ops": "class",
                "skipIf": "class",
                "skipCPUIf": "class",
                "skipCUDAIf": "class",
                "skipMetaIf": "class",
                "_has_sufficient_memory": "function",
                "largeTensorTest": "function",
                "expectedFailure": "class",
                "onlyOn": "class",
                "deviceCountAtLeast": "class",
                "onlyOnCPUAndCUDA": "function",
                "precisionOverride": "class",
                "tol": "variable",
                "toleranceOverride": "class",
                "dtypes": "class",
                "dtypesIfCPU": "class",
                "dtypesIfCUDA": "class",
                "onlyCPU": "function",
                "onlyCUDA": "function",
                "expectedFailureCUDA": "function",
                "expectedFailureMeta": "function",
                "expectedAlertNondeterministic": "class",
                "skipCPUIfNoLapack": "function",
                "skipCPUIfNoFFT": "function",
                "skipCPUIfNoMkl": "function",
                "skipCUDAIfNoMagma": "function",
                "skipCUDAIfNoCusolver": "function",
                "skipCUDAIfNoMagmaAndNoCusolver": "function",
                "skipCUDAIfRocm": "function",
                "skipCUDAIfNotRocm": "function",
                "skipCUDAIfRocmVersionLessThan": "function",
                "skipCUDAIfNotMiopenSuggestNHWC": "function",
                "skipCUDAVersionIn": "function",
                "skipCUDAIfCudnnVersionLessThan": "function",
                "skipCUDAIfNoCudnn": "function",
                "skipMeta": "function"
            },
            "common_distributed": {
                "logger": "variable",
                "TestSkip": "class",
                "TEST_SKIPS": "variable",
                "skip_if_no_gpu": "function",
                "skip_if_small_worldsize": "function",
                "require_n_gpus_for_nccl_backend": "function",
                "skip_if_lt_x_gpu": "function",
                "nccl_skip_if_lt_x_gpu": "function",
                "verify_ddp_error_logged": "function",
                "with_nccl_blocking_wait": "function",
                "with_dist_debug_levels": "function",
                "requires_gloo": "function",
                "requires_nccl_version": "function",
                "requires_nccl": "function",
                "requires_mpi": "function",
                "skip_if_rocm": "function",
                "skip_if_win32": "function",
                "create_tcp_store": "function",
                "TIMEOUT_DEFAULT": "variable",
                "TIMEOUT_OVERRIDE": "variable",
                "create_device": "function",
                "get_timeout": "function",
                "captured_output": "function",
                "simple_sparse_reduce_tests": "function",
                "initialize_temp_directories": "function",
                "cleanup_temp_dir": "function",
                "MultiProcessTestCase": "class"
            },
            "common_jit": {
                "check_output_types": "function",
                "nn_functional_single_grad": "variable",
                "check_against_reference": "function",
                "JitCommonTestCase": "class"
            },
            "common_methods_invocations": {
                "L": "variable",
                "M": "variable",
                "S": "variable",
                "_NOTHING": "variable",
                "DecorateInfo": "class",
                "SampleInput": "class",
                "AliasInfo": "class",
                "_getattr_qual": "function",
                "OpInfo": "class",
                "_generate_reduction_inputs": "function",
                "_generate_reduction_kwargs": "function",
                "sample_inputs_reduction": "function",
                "ReductionOpInfo": "class",
                "sample_inputs_unary": "function",
                "UnaryUfuncInfo": "class",
                "sample_inputs_tensor_split": "function",
                "sample_inputs_linalg_det": "function",
                "sample_inputs_linalg_det_singular": "function",
                "sample_inputs_linalg_matrix_power": "function",
                "sample_inputs_hsplit": "function",
                "sample_inputs_vsplit": "function",
                "sample_inputs_dsplit": "function",
                "sample_inputs_linalg_multi_dot": "function",
                "sample_inputs_linalg_matrix_norm": "function",
                "sample_inputs_linalg_norm": "function",
                "sample_inputs_cosine_similarity": "function",
                "sample_inputs_nn_activation_relu": "function",
                "sample_inputs_norm": "function",
                "sample_inputs_norm_fro": "function",
                "sample_inputs_norm_nuc": "function",
                "sample_inputs_norm_inf": "function",
                "sample_inputs_linalg_vector_norm": "function",
                "BinaryUfuncInfo": "class",
                "_resolve_binay_pwise_kwargs": "function",
                "sample_inputs_binary_pwise": "function",
                "sample_inputs_add_sub": "function",
                "sample_inputs_t": "function",
                "sample_inputs_mm": "function",
                "sample_inputs_addmm": "function",
                "sample_inputs_mv": "function",
                "sample_inputs_bmm": "function",
                "sample_inputs_dot_vdot": "function",
                "sample_inputs_addmv": "function",
                "sample_inputs_addbmm": "function",
                "sample_inputs_addcmul_addcdiv": "function",
                "sample_inputs_baddbmm": "function",
                "sample_inputs_addr": "function",
                "sample_inputs_xlogy": "function",
                "sample_inputs_xlog1py": "function",
                "sample_inputs_zero_": "function",
                "sample_inputs_logsumexp": "function",
                "sample_inputs_logcumsumexp": "function",
                "sample_inputs_trace": "function",
                "sample_inputs_renorm": "function",
                "sample_inputs_transpose_swapdims": "function",
                "sample_inputs_linalg_invertible": "function",
                "sample_inputs_linalg_cond": "function",
                "np_sinc_with_fp16_as_fp32": "function",
                "sample_inputs_broadcast_to": "function",
                "sample_inputs_broadcast_tensors": "function",
                "sample_inputs_block_diag": "function",
                "sample_inputs_bitwise_shift": "function",
                "sample_inputs_cdist": "function",
                "sample_inputs_fill_": "function",
                "sample_inputs_comparison_ops": "function",
                "sample_inputs_stack": "function",
                "sample_inputs_cat_concat": "function",
                "sample_inputs_hstack_dstack_vstack": "function",
                "sample_inputs_hypot": "function",
                "sample_inputs_gather": "function",
                "sample_inputs_take_along_dim": "function",
                "sample_inputs_aminmax": "function",
                "sample_inputs_diff": "function",
                "sample_inputs_histogram": "function",
                "sample_inputs_gradient": "function",
                "sample_inputs_index_select": "function",
                "sample_inputs_getitem": "function",
                "sample_inputs_index_put": "function",
                "sample_inputs_index_add": "function",
                "sample_inputs_sort": "function",
                "sample_inputs_index_fill": "function",
                "sample_inputs_max_min_binary": "function",
                "sample_inputs_adaptive_avg_pool2d": "function",
                "sample_inputs_max_pool2d": "function",
                "sample_inputs_normalize": "function",
                "sample_inputs_conv_transpose2d": "function",
                "sample_inputs_conv2d": "function",
                "sample_inputs_layer_norm": "function",
                "sample_inputs_hardswish": "function",
                "sample_inputs_interpolate": "function",
                "sample_inputs_gelu": "function",
                "sample_inputs_max_min_reduction_with_dim": "function",
                "sample_inputs_max_min_reduction_no_dim": "function",
                "_generate_nan_reduction_inputs": "function",
                "sample_inputs_nan_reduction": "function",
                "sample_inputs_reduction_quantile": "function",
                "sample_inputs_reduction_count_nonzero": "function",
                "sample_inputs_leaky_relu": "function",
                "sample_inputs_avgpool2d": "function",
                "sample_inputs_topk": "function",
                "sample_inputs_outer": "function",
                "sample_inputs_igamma_igammac": "function",
                "sample_inputs_dist": "function",
                "sample_inputs_index_copy": "function",
                "sample_inputs_mode": "function",
                "sample_inputs_put": "function",
                "sample_inputs_take": "function",
                "sample_movedim_moveaxis": "function",
                "sample_repeat_tile": "function",
                "sample_inputs_narrow": "function",
                "sample_trapezoid": "function",
                "sample_cumulative_trapezoid": "function",
                "sample_unsqueeze": "function",
                "sample_inputs_nn_unfold": "function",
                "sample_inputs_squeeze": "function",
                "sample_inputs_nn_pad": "function",
                "sample_inputs_logdet": "function",
                "np_unary_ufunc_integer_promotion_wrapper": "function",
                "sample_inputs_spectral_ops": "function",
                "SpectralFuncInfo": "class",
                "ShapeFuncInfo": "class",
                "sample_inputs_foreach": "function",
                "get_foreach_method_names": "function",
                "ForeachFuncInfo": "class",
                "sample_inputs_linalg_cholesky_inverse": "function",
                "sample_inputs_linalg_lstsq": "function",
                "sample_inputs_householder_product": "function",
                "sample_inputs_ormqr": "function",
                "sample_inputs_linalg_cholesky": "function",
                "sample_inputs_symeig": "function",
                "sample_inputs_linalg_eig": "function",
                "sample_inputs_linalg_eigh": "function",
                "sample_inputs_linalg_slogdet": "function",
                "sample_inputs_linalg_pinv_hermitian": "function",
                "sample_inputs_linalg_solve": "function",
                "sample_inputs_legacy_solve": "function",
                "sample_inputs_lu": "function",
                "sample_inputs_lu_solve": "function",
                "sample_inputs_lu_unpack": "function",
                "sample_inputs_roll": "function",
                "sample_inputs_rot90": "function",
                "sample_inputs_std_var": "function",
                "_generate_correlation_inputs": "function",
                "sample_inputs_corrcoef": "function",
                "sample_inputs_cov": "function",
                "_sample_inputs_svd": "function",
                "sample_inputs_permute": "function",
                "sample_inputs_pow": "function",
                "sample_inputs_svd": "function",
                "sample_inputs_linalg_svd": "function",
                "sample_inputs_linalg_svdvals": "function",
                "sample_inputs_hardshrink_hardtanh": "function",
                "sample_inputs_eig": "function",
                "sample_inputs_einsum": "function",
                "sample_inputs_linalg_qr": "function",
                "sample_inputs_geqrf": "function",
                "sample_inputs_flip": "function",
                "sample_inputs_fliplr_flipud": "function",
                "sample_inputs_fmod_remainder": "function",
                "sample_inputs_clamp": "function",
                "sample_inputs_clamp_scalar": "function",
                "sample_kwargs_clamp_scalar": "function",
                "sample_inputs_cross": "function",
                "sample_inputs_cumprod": "function",
                "sample_inputs_view_as_complex": "function",
                "sample_inputs_view_as_real": "function",
                "sample_inputs_copysign": "function",
                "sample_inputs_prod": "function",
                "sample_inputs_nextafter": "function",
                "sample_inputs_diag": "function",
                "sample_inputs_diagonal_diag_embed": "function",
                "sample_inputs_to_sparse": "function",
                "sample_inputs_softmax_variant": "function",
                "sample_inputs_logit": "function",
                "sample_inputs_isin": "function",
                "sample_inputs_masked_scatter": "function",
                "sample_inputs_masked_fill": "function",
                "sample_inputs_masked_select": "function",
                "sample_inputs_matrix_exp": "function",
                "sample_inputs_matmul": "function",
                "sample_inputs_meshgrid": "function",
                "sample_inputs_polar": "function",
                "sample_inputs_complex": "function",
                "sample_inputs_polygamma": "function",
                "sample_inputs_mvlgamma": "function",
                "skips_mvlgamma": "function",
                "MvlGammaInfo": "class",
                "sample_inputs_entr": "function",
                "sample_inputs_zeta": "function",
                "sample_inputs_i0_i1": "function",
                "sample_inputs_rsub": "function",
                "sample_inputs_cumulative_ops": "function",
                "sample_inputs_unfold": "function",
                "sample_inputs_atan2": "function",
                "sample_inputs_split": "function",
                "sample_inputs_split_with_sizes": "function",
                "sample_inputs_msort": "function",
                "sample_inputs_lerp": "function",
                "sample_inputs_tensordot": "function",
                "sample_inputs_kron": "function",
                "sample_inputs_inner": "function",
                "sample_inputs_scatter": "function",
                "sample_inputs_scatter_add": "function",
                "sample_inputs_ravel": "function",
                "sample_inputs_tril_triu": "function",
                "sample_inputs_clone": "function",
                "sample_inputs_contiguous": "function",
                "sample_inputs_resize_ops": "function",
                "sample_inputs_view_reshape": "function",
                "sample_inputs_view_as_reshape_as": "function",
                "sample_inputs_select": "function",
                "sample_inputs_rbinops": "function",
                "sample_inputs_expand": "function",
                "sample_inputs_expand_as": "function",
                "sample_inputs_where": "function",
                "sample_inputs_chunk": "function",
                "sample_inputs_kthvalue": "function",
                "sample_inputs_dropout": "function",
                "sample_inputs_one_hot": "function",
                "sample_inputs_softplus": "function",
                "sample_inputs_tensorinv": "function",
                "sample_inputs_mse_loss": "function",
                "sample_inputs_grid_sample": "function",
                "sample_inputs_nll_loss": "function",
                "reference_sign": "function",
                "reference_sgn": "function",
                "reference_sigmoid": "function",
                "reference_logsigmoid": "function",
                "reference_lgamma": "function",
                "reference_polygamma": "function",
                "reference_mvlgamma": "function",
                "reference_softplus": "function",
                "reference_one_hot": "function",
                "reference_mse_loss": "function",
                "wrapper_set_seed": "function",
                "reference_layer_norm": "function",
                "gradcheck_wrapper_hermitian_input": "function",
                "gradcheck_wrapper_triangular_input": "function",
                "reference_reduction_numpy": "function",
                "reference_std_var": "function",
                "generate_std_var_kwargs": "function",
                "unary_ufuncs": "variable",
                "binary_ufuncs": "variable",
                "spectral_funcs": "variable",
                "sparse_unary_ufuncs": "variable",
                "shape_funcs": "variable",
                "reduction_ops": "variable",
                "index_variable": "function",
                "gather_variable": "function",
                "bernoulli_scalar": "function",
                "mask_not_all_zeros": "function",
                "_compare_trilu_indices": "function",
                "_compare_large_trilu_indices": "function",
                "tri_tests_args": "variable",
                "run_additional_tri_tests": "function",
                "unpack_variables": "function",
                "dont_convert": "class",
                "non_differentiable": "variable",
                "create_input": "function"
            },
            "common_modules": {
                "MODULE_CLASSES": "variable",
                "modules": "class",
                "formatted_module_name": "function",
                "FunctionInput": "class",
                "ModuleInput": "class",
                "ModuleInfo": "class",
                "module_inputs_torch_nn_Linear": "function",
                "module_inputs_torch_nn_NLLLoss": "function",
                "no_batch_dim_reference_fn": "function",
                "no_batch_dim_reference_criterion_fn": "function",
                "generate_regression_criterion_inputs": "function",
                "module_inputs_torch_nn_AvgPool1d": "function",
                "module_inputs_torch_nn_ELU": "function",
                "module_inputs_torch_nn_CELU": "function",
                "module_inputs_torch_nn_ReLU": "function",
                "module_inputs_torch_nn_L1Loss": "function"
            },
            "common_nn": {
                "TemporaryFile": "variable",
                "PRECISION": "variable",
                "get_reduction": "function",
                "get_weight": "function",
                "module_tests": "variable",
                "_rand_tensor_non_equal": "function",
                "wrap_functional": "function",
                "poissonnllloss_no_reduce_test": "function",
                "bceloss_no_reduce_test": "function",
                "bceloss_no_reduce_scalar_test": "function",
                "bceloss_weights_no_reduce_test": "function",
                "bceloss_weights_no_reduce_scalar_test": "function",
                "bce_with_logistic_legacy_enum_test": "function",
                "bce_with_logistic_no_reduce_test": "function",
                "bce_with_logistic_no_reduce_scalar_test": "function",
                "kldivloss_with_target_no_reduce_test": "function",
                "kldivloss_no_reduce_test": "function",
                "kldivloss_no_reduce_scalar_test": "function",
                "kldivloss_with_log_target_no_reduce_test": "function",
                "kldivloss_no_reduce_log_target_test": "function",
                "kldivloss_no_reduce_scalar_log_target_test": "function",
                "l1loss_no_reduce_test": "function",
                "l1loss_no_reduce_complex_test": "function",
                "l1loss_no_reduce_scalar_test": "function",
                "mseloss_no_reduce_test": "function",
                "mseloss_no_reduce_scalar_test": "function",
                "nllloss_no_reduce_test": "function",
                "nllloss_no_reduce_ignore_index_test": "function",
                "nllloss_no_reduce_weights_test": "function",
                "nllloss_no_reduce_weights_ignore_index_test": "function",
                "nllloss_no_reduce_weights_ignore_index_neg_test": "function",
                "nllloss2d_no_reduce_test": "function",
                "nllloss2d_no_reduce_ignore_index_test": "function",
                "nllloss2d_no_reduce_weights_test": "function",
                "nlllossNd_no_reduce_test": "function",
                "nlllossNd_no_reduce_ignore_index_test": "function",
                "nlllossNd_no_reduce_weights_test": "function",
                "smoothl1loss_no_reduce_test": "function",
                "smoothl1loss_no_reduce_scalar_test": "function",
                "smoothl1loss_beta_test": "function",
                "smoothl1loss_zero_beta_test": "function",
                "huberloss_delta_test": "function",
                "multilabelmarginloss_0d_no_reduce_test": "function",
                "multilabelmarginloss_1d_no_reduce_test": "function",
                "multilabelmarginloss_index_neg_test": "function",
                "multilabelmarginloss_no_reduce_test": "function",
                "hingeembeddingloss_no_reduce_test": "function",
                "hingeembeddingloss_margin_no_reduce_test": "function",
                "softmarginloss_no_reduce_test": "function",
                "multilabelsoftmarginloss_no_reduce_test": "function",
                "multilabelsoftmarginloss_weights_no_reduce_test": "function",
                "multimarginloss_no_reduce_test": "function",
                "multimarginloss_1d_no_reduce_test": "function",
                "multimarginloss_1d_input_0d_target_no_reduce_test": "function",
                "multimarginloss_p_no_reduce_test": "function",
                "multimarginloss_margin_no_reduce_test": "function",
                "multimarginloss_weights_no_reduce_test": "function",
                "fractional_max_pool2d_test": "function",
                "fractional_max_pool2d_no_batch_dim_test": "function",
                "fractional_max_pool3d_test": "function",
                "single_batch_reference_fn": "function",
                "new_module_tests": "variable",
                "non_linear_activations_no_batch": "variable",
                "kldivloss_reference": "function",
                "kldivloss_log_target_reference": "function",
                "nlllossNd_reference": "function",
                "cross_entropy_loss_prob_target_reference": "function",
                "cross_entropy_loss_indices_target_reference": "function",
                "cross_entropy_loss_reference": "function",
                "nllloss_reference": "function",
                "smoothl1loss_reference": "function",
                "huberloss_reference": "function",
                "_multilabelmarginloss_reference": "function",
                "multilabelmarginloss_reference": "function",
                "hingeembeddingloss_reference": "function",
                "softmarginloss_reference": "function",
                "_multimarginloss_reference": "function",
                "multimarginloss_reference": "function",
                "cosineembeddingloss_reference": "function",
                "tripletmarginloss_reference": "function",
                "marginrankingloss_reference": "function",
                "ctcloss_reference": "function",
                "padding1d_circular": "function",
                "padding2d_circular": "function",
                "padding3d_circular": "function",
                "criterion_tests": "variable",
                "single_batch_reference_criterion_fn": "function",
                "regression_criterion_no_batch": "variable",
                "reductions": "variable",
                "classification_criterion_no_batch": "variable",
                "NNTestCase": "class",
                "TestBase": "class",
                "ModuleTest": "class",
                "InputVariableMixin": "class",
                "NewModuleTest": "class",
                "CriterionTest": "class"
            },
            "common_quantization": {
                "NodeSpec": "class",
                "test_only_eval_fn": "function",
                "_default_loss_fn": "variable",
                "test_only_train_fn": "function",
                "AverageMeter": "class",
                "accuracy": "function",
                "train_one_epoch": "function",
                "ddp_setup": "function",
                "ddp_cleanup": "function",
                "run_ddp": "function",
                "convert_dynamic": "function",
                "prepare_dynamic": "function",
                "_make_conv_test_input": "function",
                "skipIfNoFBGEMM": "function",
                "skipIfNoQNNPACK": "function",
                "skip_if_no_torchvision": "variable",
                "get_script_module": "function",
                "lengths_to_offsets": "function",
                "QuantizationTestCase": "class",
                "QuantizationLiteTestCase": "class",
                "SingleLayerLinearModel": "class",
                "AnnotatedSingleLayerLinearModel": "class",
                "SingleLayerLinearDynamicModel": "class",
                "LinearAddModel": "class",
                "RNNDynamicModel": "class",
                "RNNCellDynamicModel": "class",
                "LSTMwithHiddenDynamicModel": "class",
                "ConvModel": "class",
                "ConvTransposeModel": "class",
                "AnnotatedConvModel": "class",
                "AnnotatedConvTransposeModel": "class",
                "ConvBnModel": "class",
                "AnnotatedConvBnModel": "class",
                "ConvBnReLUModel": "class",
                "AnnotatedConvBnReLUModel": "class",
                "TwoLayerConvModel": "class",
                "TwoLayerLinearModel": "class",
                "LinearModelWithSubmodule": "class",
                "AnnotatedTwoLayerLinearModel": "class",
                "ActivationsTestModel": "class",
                "LinearReluModel": "class",
                "LinearReluLinearModel": "class",
                "LinearReluAddModel": "class",
                "ConvReluModel": "class",
                "ConvReluConvModel": "class",
                "ConvReluAddModel": "class",
                "NormalizationTestModel": "class",
                "NestedModel": "class",
                "AnnotatedNestedModel": "class",
                "AnnotatedSubNestedModel": "class",
                "AnnotatedCustomConfigNestedModel": "class",
                "QuantSubModel": "class",
                "InnerModule": "class",
                "FunctionalLinear": "class",
                "SingleLayerFunctionalLinearModel": "class",
                "TwoLayerFunctionalLinearModel": "class",
                "FunctionalLinearAddModel": "class",
                "FunctionalLinearReluModel": "class",
                "FunctionalLinearReluLinearModel": "class",
                "FunctionalConv2d": "class",
                "SingleLayerFunctionalConvModel": "class",
                "TwoLayerFunctionalConvModel": "class",
                "FunctionalConvReluModel": "class",
                "FunctionalConvReluConvModel": "class",
                "SkipQuantModel": "class",
                "AnnotatedSkipQuantModel": "class",
                "QuantStubModel": "class",
                "ManualLinearQATModel": "class",
                "ManualConvLinearQATModel": "class",
                "SubModelForFusion": "class",
                "SubModelWithoutFusion": "class",
                "ModelForFusion": "class",
                "ConvBNReLU": "class",
                "ModelWithSequentialFusion": "class",
                "ModelForFusionWithBias": "class",
                "ModelForLinearBNFusion": "class",
                "DummyObserver": "class",
                "ModelWithFunctionals": "class",
                "ResNetBase": "class",
                "ModelMultipleOps": "class",
                "ModelMultipleOpsNoAvgPool": "class",
                "EmbeddingBagModule": "class",
                "EmbeddingModule": "class",
                "EmbeddingWithLinear": "class",
                "DenseTopMLP": "class",
                "EmbBagWrapper": "class",
                "SparseNNModel": "class"
            },
            "common_quantized": {
                "supported_qengines": "variable",
                "_conv_output_shape": "function",
                "_quantize": "function",
                "_dequantize": "function",
                "_requantize": "function",
                "_calculate_dynamic_qparams": "function",
                "_calculate_dynamic_per_channel_qparams": "function",
                "_snr": "function",
                "override_quantized_engine": "function",
                "override_cpu_allocator_for_qnnpack": "function",
                "override_qengines": "function",
                "qengine_is_fbgemm": "function",
                "qengine_is_qnnpack": "function",
                "_permute_to_axis_zero": "function",
                "_fake_quantize_per_channel_affine_reference": "function",
                "_fake_quantize_per_channel_affine_grad_reference": "function",
                "to_tensor": "function"
            },
            "common_utils": {
                "FILE_SCHEMA": "variable",
                "IS_IN_CI": "variable",
                "IS_SANDCASTLE": "variable",
                "IS_FBCODE": "variable",
                "IS_REMOTE_GPU": "variable",
                "DISABLED_TESTS_FILE": "variable",
                "SLOW_TESTS_FILE": "variable",
                "_TestParametrizer": "class",
                "instantiate_parametrized_tests": "function",
                "subtest": "class",
                "parametrize": "class",
                "ProfilingMode": "class",
                "cppProfilingFlagsToProfilingMode": "function",
                "enable_profiling_mode_for_profiling_tests": "function",
                "enable_profiling_mode": "function",
                "num_profiled_runs": "function",
                "func_call": "variable",
                "meth_call": "variable",
                "prof_callable": "function",
                "prof_func_call": "function",
                "prof_meth_call": "function",
                "torch._C.ScriptFunction.__call__": "variable",
                "torch._C.ScriptMethod.__call__": "variable",
                "_get_test_report_path": "function",
                "parser": "variable",
                "run_unittest_help": "function",
                "IMPORT_SLOW_TESTS": "variable",
                "IMPORT_DISABLED_TESTS": "variable",
                "LOG_SUFFIX": "variable",
                "RUN_PARALLEL": "variable",
                "TEST_BAILOUTS": "variable",
                "TEST_DISCOVER": "variable",
                "TEST_IN_SUBPROCESS": "variable",
                "TEST_SAVE_XML": "variable",
                "REPEAT_COUNT": "variable",
                "SEED": "variable",
                "UNITTEST_ARGS": "variable",
                "CI_TEST_PREFIX": "variable",
                "wait_for_process": "function",
                "shell": "function",
                "repeat_test_for_types": "function",
                "discover_test_cases_recursively": "function",
                "get_test_names": "function",
                "_print_test_names": "function",
                "chunk_list": "function",
                "sanitize_test_filename": "function",
                "run_tests": "function",
                "IS_LINUX": "variable",
                "IS_WINDOWS": "variable",
                "IS_MACOS": "variable",
                "IS_PPC": "variable",
                "is_avx512_vnni_supported": "function",
                "IS_AVX512_VNNI_SUPPORTED": "variable",
                "IS_FILESYSTEM_UTF8_ENCODING": "variable",
                "_check_module_exists": "function",
                "TEST_NUMPY": "variable",
                "TEST_SCIPY": "variable",
                "TEST_MKL": "variable",
                "TEST_NUMBA": "variable",
                "TEST_DILL": "variable",
                "TEST_LIBROSA": "variable",
                "NO_MULTIPROCESSING_SPAWN": "variable",
                "TEST_WITH_ASAN": "variable",
                "TEST_WITH_DEV_DBG_ASAN": "variable",
                "TEST_WITH_TSAN": "variable",
                "TEST_WITH_UBSAN": "variable",
                "TEST_WITH_ROCM": "variable",
                "TEST_WITH_MIOPEN_SUGGEST_NHWC": "variable",
                "TEST_WITH_SLOW": "variable",
                "TEST_SKIP_FAST": "variable",
                "TEST_SKIP_NOARCH": "variable",
                "TEST_SKIP_CUDA_MEM_LEAK_CHECK": "variable",
                "ON_GHA": "variable",
                "IS_TBB": "variable",
                "numpy_to_torch_dtype_dict": "variable",
                "torch_to_numpy_dtype_dict": "variable",
                "ALL_TENSORTYPES": "variable",
                "skipIfRocm": "function",
                "skipIfRocmVersionLessThan": "function",
                "skipIfNotMiopenSuggestNHWC": "function",
                "DeterministicGuard": "class",
                "CudaSyncGuard": "class",
                "wrapDeterministicFlagAPITest": "function",
                "skipIfCompiledWithoutNumpy": "function",
                "_test_function": "function",
                "skipIfNoLapack": "function",
                "skipIfNotRegistered": "function",
                "skipIfNoSciPy": "function",
                "skipIfOnGHA": "function",
                "skipIfTBB": "function",
                "slowTest": "function",
                "noarchTest": "function",
                "slowAwareTest": "function",
                "skipCUDAMemoryLeakCheckIf": "function",
                "skipCUDANonDefaultStreamIf": "function",
                "suppress_warnings": "function",
                "to_gpu": "function",
                "get_function_arglist": "function",
                "set_rng_seed": "function",
                "freeze_rng_state": "function",
                "set_default_dtype": "function",
                "iter_indices": "function",
                "is_iterable": "function",
                "is_iterable_of_tensors": "function",
                "CudaNonDefaultStream": "class",
                "CudaMemoryLeakCheck": "class",
                "skip_exception_type": "function",
                "check_if_enable": "function",
                "get_comparison_dtype": "function",
                "AssertRaisesContextIgnoreNotImplementedError": "class",
                "set_warn_always_context": "function",
                "TestCase": "class",
                "download_file": "function",
                "find_free_port": "function",
                "ADDRESS_IN_USE": "variable",
                "CONNECT_TIMEOUT": "variable",
                "retry_on_connect_failures": "function",
                "retry": "function",
                "random_square_matrix_of_rank": "function",
                "random_well_conditioned_matrix": "function",
                "random_symmetric_matrix": "function",
                "make_symmetric_matrices": "function",
                "random_hermitian_matrix": "function",
                "random_symmetric_psd_matrix": "function",
                "random_hermitian_psd_matrix": "function",
                "random_symmetric_pd_matrix": "function",
                "make_symmetric_pd_matrices": "function",
                "random_hermitian_pd_matrix": "function",
                "random_fullrank_matrix_distinct_singular_value": "function",
                "make_fullrank_matrices_with_distinct_singular_values": "function",
                "random_matrix": "function",
                "random_lowrank_matrix": "function",
                "random_sparse_matrix": "function",
                "random_sparse_pd_matrix": "function",
                "do_test_dtypes": "function",
                "do_test_empty_full": "function",
                "clone_input_helper": "function",
                "THESE_TAKE_WAY_TOO_LONG": "variable",
                "running_script_path": "variable",
                "set_running_script_path": "function",
                "check_test_defined_in_running_script": "function",
                "load_tests": "function",
                "BytesIOContext": "class",
                "GRADCHECK_NONDET_TOL": "variable",
                "gradcheck": "function",
                "gradgradcheck": "function",
                "_assertGradAndGradgradChecks": "function",
                "set_cwd": "function",
                "dtype2prec_DONTUSE": "variable",
                "_wrap_warn_once": "function",
                "coalescedonoff": "function",
                "disable_gc": "function",
                "find_library_location": "function",
                "sandcastle_skip": "function",
                "mock_wrapper": "function",
                "get_tensors_from": "function",
                "has_breakpad": "function",
                "sandcastle_skip_if": "function",
                "dtype_name": "function"
            },
            "dist_utils": {
                "INIT_METHOD_TEMPLATE": "variable",
                "dist_init": "function",
                "noop": "function",
                "wait_until_node_failure": "function",
                "wait_until_pending_futures_and_users_flushed": "function",
                "get_num_owners_and_forks": "function",
                "wait_until_owners_and_forks_on_rank": "function",
                "initialize_pg": "function",
                "worker_name": "function",
                "get_function_event": "function"
            },
            "hypothesis_utils": {
                "_ALL_QINT_TYPES": "variable",
                "_ENFORCED_ZERO_POINT": "variable",
                "_get_valid_min_max": "function",
                "_floats_wrapper": "function",
                "floats": "function",
                "assume_not_overflowing": "function",
                "qparams": "function",
                "array_shapes": "function",
                "tensor": "function",
                "per_channel_tensor": "function",
                "tensor_conv": "function",
                "hypothesis_version": "variable",
                "current_settings": "variable",
                "current_settings['deadline']": "variable",
                "assert_deadline_disabled": "function"
            },
            "jit_metaprogramming_utils": {
                "L": "variable",
                "M": "variable",
                "S": "variable",
                "nn_functional_tests": "variable",
                "script_template": "variable",
                "the_method": "function",
                "create_script_module": "function",
                "check_alias_annotation": "function",
                "get_nn_module_name_from_kwargs": "function",
                "get_nn_mod_test_name": "function",
                "get_nn_module_class_from_kwargs": "function",
                "try_get_nn_module_compiled_mod_and_inputs": "function",
                "get_all_nn_module_tests": "function"
            },
            "jit_utils": {
                "RUN_CUDA": "variable",
                "RUN_CUDA_MULTI_GPU": "variable",
                "RUN_CUDA_HALF": "variable",
                "execWrapper": "function",
                "do_input_map": "function",
                "clear_class_registry": "function",
                "get_execution_plan": "function",
                "_AssertRaisesRegexWithHighlightContext": "class",
                "FUSION_GROUP": "variable",
                "JitTestCase": "class",
                "inline_everything_mode": "function",
                "set_fusion_group_inlining": "function",
                "disable_autodiff_subgraph_inlining": "function",
                "_inline_everything": "function",
                "_tmp_donotuse_dont_inline_everything": "function",
                "_trace": "function",
                "enable_cpu_fuser": "function",
                "enable_cpu_fuser_if": "function",
                "get_forward": "function",
                "get_forward_graph": "function",
                "get_module_method": "function",
                "attrs_with_prefix": "function",
                "warmup_backward": "function",
                "make_global": "function",
                "_get_py3_code": "function"
            },
            "opinfo_helper": {
                "COMPLETE_DTYPES_DISPATCH": "variable",
                "EXTENSIBLE_DTYPE_DISPATCH": "variable",
                "DEVICES": "variable",
                "_dynamic_dispatch_dtypes": "class",
                "get_supported_dtypes": "function",
                "dtypes_dispatch_hint": "function",
                "is_dynamic_dtype_set": "function",
                "str_format_dynamic_dtype": "function"
            }
        },
        "_asserts": {
            "__all__": "variable",
            "_TestingErrorMeta": "class",
            "_DTYPE_PRECISIONS": "variable",
            "_get_default_rtol_and_atol": "function",
            "_check_sparse_coo_members_individually": "function",
            "_check_sparse_csr_members_individually": "function",
            "_check_quantized": "function",
            "_check_supported_tensor": "function",
            "_check_attributes_equal": "function",
            "_equalize_attributes": "function",
            "_trace_mismatches": "function",
            "_make_mismatch_msg": "function",
            "_get_comparison_dtype": "function",
            "_check_values_close": "function",
            "_check_tensors_close": "function",
            "_TensorPair": "class",
            "_SEQUENCE_MSG_FMTSTR": "variable",
            "_MAPPING_MSG_FMTSTR": "variable",
            "_check_pair_close": "function",
            "_to_tensor": "function",
            "_check_types": "function",
            "_to_tensor_pair": "function",
            "_parse_inputs": "function",
            "assert_close": "function"
        },
        "_check_kernel_launches": {
            "__all__": "variable",
            "kernel_launch_start": "variable",
            "has_check": "variable",
            "find_matching_paren": "function",
            "should_exclude_file": "function",
            "check_code_for_cuda_kernel_launches": "function",
            "check_file": "function",
            "check_cuda_kernel_launches": "function"
        },
        "_core": {
            "FileCheck": "variable",
            "__all__": "variable",
            "is_integral": "function",
            "is_quantized": "function",
            "_unravel_index": "function",
            "_compare_return_type": "variable",
            "_compare_tensors_internal": "function",
            "_compare_scalars_internal": "function",
            "make_non_contiguous": "function",
            "get_all_device_types": "function"
        },
        "_creation": {
            "__all__": "variable",
            "make_tensor": "function"
        },
        "_deprecated": {
            "__all__": "variable",
            "warn_deprecated": "function",
            "rand": "variable",
            "randn": "variable",
            "_DTYPE_PRECISIONS": "variable",
            "_get_default_rtol_and_atol": "function",
            "assert_allclose": "function",
            "_dtype_getter_instructions": "function"
        },
        "_dtype_getters": {
            "__all__": "variable",
            "_validate_dtypes": "function",
            "_dispatch_dtypes": "class",
            "_empty_types": "variable",
            "empty_types": "function",
            "_floating_types": "variable",
            "floating_types": "function",
            "_floating_types_and_half": "variable",
            "floating_types_and_half": "function",
            "floating_types_and": "function",
            "_floating_and_complex_types": "variable",
            "floating_and_complex_types": "function",
            "floating_and_complex_types_and": "function",
            "_double_types": "variable",
            "double_types": "function",
            "_integral_types": "variable",
            "integral_types": "function",
            "integral_types_and": "function",
            "_all_types": "variable",
            "all_types": "function",
            "all_types_and": "function",
            "_complex_types": "variable",
            "complex_types": "function",
            "_all_types_and_complex": "variable",
            "all_types_and_complex": "function",
            "all_types_and_complex_and": "function",
            "_all_types_and_half": "variable",
            "all_types_and_half": "function",
            "get_all_dtypes": "function",
            "get_all_math_dtypes": "function",
            "get_all_complex_dtypes": "function",
            "get_all_int_dtypes": "function",
            "get_all_fp_dtypes": "function"
        }
    },
    "tests": {
        "test_afm": {
            "AFM_TEST_DATA": "variable"
        },
        "test_agg": {
            "test_repeated_save_with_alpha": "function",
            "test_large_single_path_collection": "function",
            "test_marker_with_nan": "function",
            "test_long_path": "function",
            "test_agg_filter": "function",
            "test_too_large_image": "function",
            "test_chunksize": "function",
            "test_jpeg_dpi": "function",
            "test_pil_kwargs_png": "function",
            "test_pil_kwargs_tiff": "function"
        },
        "test_agg_filter": {
            "test_agg_filter_alpha": "function"
        },
        "test_animation": {
            "anim": "function",
            "NullMovieWriter": "class",
            "test_null_movie_writer": "function",
            "test_animation_delete": "function",
            "test_movie_writer_dpi_default": "function",
            "RegisteredNullMovieWriter": "class",
            "WRITER_OUTPUT": "variable",
            "gen_writers": "function",
            "test_save_animation_smoketest": "function",
            "test_animation_repr_html": "function",
            "test_no_length_frames": "function",
            "test_movie_writer_registry": "function",
            "test_embed_limit": "function",
            "test_cleanup_temporaries": "function",
            "test_failing_ffmpeg": "function",
            "test_funcanimation_cache_frame_data": "function",
            "test_draw_frame": "function"
        },
        "test_api": {
            "test_check_shape": "function",
            "test_classproperty_deprecation": "function",
            "test_delete_parameter": "function",
            "test_make_keyword_only": "function"
        },
        "test_arrow_patches": {
            "draw_arrow": "function",
            "test_fancyarrow": "function",
            "test_boxarrow": "function",
            "__prepare_fancyarrow_dpi_cor_test": "function",
            "test_fancyarrow_dpi_cor_100dpi": "function",
            "test_fancyarrow_dpi_cor_200dpi": "function",
            "test_fancyarrow_dash": "function",
            "test_arrow_styles": "function",
            "test_connection_styles": "function",
            "test_invalid_intersection": "function"
        },
        "test_artist": {
            "test_patch_transform_of_none": "function",
            "test_collection_transform_of_none": "function",
            "test_clipping": "function",
            "test_clipping_zoom": "function",
            "test_cull_markers": "function",
            "test_hatching": "function",
            "test_remove": "function",
            "test_default_edges": "function",
            "test_properties": "function",
            "test_setp": "function",
            "test_None_zorder": "function",
            "test_artist_inspector_get_valid_values": "function",
            "test_artist_inspector_get_aliases": "function",
            "test_set_alpha": "function",
            "test_set_alpha_for_array": "function",
            "test_callbacks": "function"
        },
        "test_axes": {
            "test_get_labels": "function",
            "test_label_loc_vertical": "function",
            "test_label_loc_horizontal": "function",
            "test_label_loc_rc": "function",
            "test_acorr": "function",
            "test_spy": "function",
            "test_spy_invalid_kwargs": "function",
            "test_matshow": "function",
            "test_formatter_ticker": "function",
            "test_funcformatter_auto_formatter": "function",
            "test_strmethodformatter_auto_formatter": "function",
            "test_twin_axis_locators_formatters": "function",
            "test_twinx_cla": "function",
            "test_twin_logscale": "function",
            "test_twinx_axis_scales": "function",
            "test_twin_inherit_autoscale_setting": "function",
            "test_inverted_cla": "function",
            "test_minorticks_on_rcParams_both": "function",
            "test_autoscale_tiny_range": "function",
            "test_autoscale_tight": "function",
            "test_autoscale_log_shared": "function",
            "test_use_sticky_edges": "function",
            "test_sticky_shared_axes": "function",
            "test_basic_annotate": "function",
            "test_annotate_parameter_warn": "function",
            "test_arrow_simple": "function",
            "test_arrow_empty": "function",
            "test_arrow_in_view": "function",
            "test_annotate_default_arrow": "function",
            "test_fill_units": "function",
            "test_plot_format_kwarg_redundant": "function",
            "test_single_point": "function",
            "test_single_date": "function",
            "test_shaped_data": "function",
            "test_structured_data": "function",
            "test_aitoff_proj": "function",
            "test_axvspan_epoch": "function",
            "test_axhspan_epoch": "function",
            "test_hexbin_extent": "function",
            "test_hexbin_empty": "function",
            "test_hexbin_pickable": "function",
            "test_hexbin_log": "function",
            "test_inverted_limits": "function",
            "test_nonfinite_limits": "function",
            "test_limits_empty_data": "function",
            "test_imshow": "function",
            "test_imshow_clip": "function",
            "test_imshow_norm_vminvmax": "function",
            "test_polycollection_joinstyle": "function",
            "test_fill_between_input": "function",
            "test_fill_betweenx_input": "function",
            "test_fill_between_interpolate": "function",
            "test_fill_between_interpolate_decreasing": "function",
            "test_symlog": "function",
            "test_symlog2": "function",
            "test_pcolorargs_5205": "function",
            "test_pcolormesh": "function",
            "test_pcolormesh_alpha": "function",
            "test_pcolormesh_datetime_axis": "function",
            "test_pcolor_datetime_axis": "function",
            "test_pcolorargs": "function",
            "test_pcolornearest": "function",
            "test_pcolornearestunits": "function",
            "test_pcolordropdata": "function",
            "test_pcolorauto": "function",
            "test_canonical": "function",
            "test_arc_angles": "function",
            "test_arc_ellipse": "function",
            "test_marker_as_markerstyle": "function",
            "test_markevery": "function",
            "test_markevery_line": "function",
            "test_markevery_linear_scales": "function",
            "test_markevery_linear_scales_zoomed": "function",
            "test_markevery_log_scales": "function",
            "test_markevery_polar": "function",
            "test_marker_edges": "function",
            "test_bar_tick_label_single": "function",
            "test_nan_bar_values": "function",
            "test_bar_ticklabel_fail": "function",
            "test_bar_tick_label_multiple": "function",
            "test_bar_tick_label_multiple_old_alignment": "function",
            "test_bar_decimal_center": "function",
            "test_barh_decimal_center": "function",
            "test_bar_decimal_width": "function",
            "test_barh_decimal_height": "function",
            "test_bar_color_none_alpha": "function",
            "test_bar_edgecolor_none_alpha": "function",
            "test_barh_tick_label": "function",
            "test_bar_timedelta": "function",
            "test_boxplot_dates_pandas": "function",
            "test_pcolor_regression": "function",
            "test_bar_pandas": "function",
            "test_bar_pandas_indexed": "function",
            "test_bar_hatches": "function",
            "test_pandas_minimal_plot": "function",
            "test_hist_log": "function",
            "test_hist_log_2": "function",
            "test_hist_log_barstacked": "function",
            "test_hist_bar_empty": "function",
            "test_hist_step_empty": "function",
            "test_hist_step_filled": "function",
            "test_hist_density": "function",
            "test_hist_unequal_bins_density": "function",
            "test_hist_datetime_datasets": "function",
            "test_hist_datetime_datasets_bins": "function",
            "test_hist_with_empty_input": "function",
            "test_hist_zorder": "function",
            "test_stairs": "function",
            "test_stairs_fill": "function",
            "test_stairs_update": "function",
            "test_stairs_baseline_0": "function",
            "test_stairs_empty": "function",
            "test_stairs_invalid_nan": "function",
            "test_stairs_invalid_mismatch": "function",
            "test_stairs_invalid_update": "function",
            "test_stairs_invalid_update2": "function",
            "test_stairs_options": "function",
            "test_stairs_datetime": "function",
            "contour_dat": "function",
            "test_contour_hatching": "function",
            "test_contour_colorbar": "function",
            "test_hist2d": "function",
            "test_hist2d_transpose": "function",
            "test_hist2d_density": "function",
            "TestScatter": "class",
            "_params": "function",
            "_result": "variable",
            "test_parse_scatter_color_args": "function",
            "test_parse_scatter_color_args_edgecolors": "function",
            "test_parse_scatter_color_args_error": "function",
            "test_as_mpl_axes_api": "function",
            "test_pyplot_axes": "function",
            "test_log_scales": "function",
            "test_log_scales_no_data": "function",
            "test_log_scales_invalid": "function",
            "test_stackplot": "function",
            "test_stackplot_baseline": "function",
            "_bxp_test_helper": "function",
            "test_bxp_baseline": "function",
            "test_bxp_rangewhis": "function",
            "test_bxp_percentilewhis": "function",
            "test_bxp_with_xlabels": "function",
            "test_bxp_horizontal": "function",
            "test_bxp_with_ylabels": "function",
            "test_bxp_patchartist": "function",
            "test_bxp_custompatchartist": "function",
            "test_bxp_customoutlier": "function",
            "test_bxp_showcustommean": "function",
            "test_bxp_custombox": "function",
            "test_bxp_custommedian": "function",
            "test_bxp_customcap": "function",
            "test_bxp_customwhisker": "function",
            "test_bxp_shownotches": "function",
            "test_bxp_nocaps": "function",
            "test_bxp_nobox": "function",
            "test_bxp_no_flier_stats": "function",
            "test_bxp_showmean": "function",
            "test_bxp_showmeanasline": "function",
            "test_bxp_scalarwidth": "function",
            "test_bxp_customwidths": "function",
            "test_bxp_custompositions": "function",
            "test_bxp_bad_widths": "function",
            "test_bxp_bad_positions": "function",
            "test_boxplot": "function",
            "test_boxplot_sym2": "function",
            "test_boxplot_sym": "function",
            "test_boxplot_autorange_whiskers": "function",
            "_rc_test_bxp_helper": "function",
            "test_boxplot_rc_parameters": "function",
            "test_boxplot_with_CIarray": "function",
            "test_boxplot_no_weird_whisker": "function",
            "test_boxplot_bad_medians": "function",
            "test_boxplot_bad_ci": "function",
            "test_boxplot_zorder": "function",
            "test_boxplot_marker_behavior": "function",
            "test_boxplot_mod_artist_after_plotting": "function",
            "test_vert_violinplot_baseline": "function",
            "test_vert_violinplot_showmeans": "function",
            "test_vert_violinplot_showextrema": "function",
            "test_vert_violinplot_showmedians": "function",
            "test_vert_violinplot_showall": "function",
            "test_vert_violinplot_custompoints_10": "function",
            "test_vert_violinplot_custompoints_200": "function",
            "test_horiz_violinplot_baseline": "function",
            "test_horiz_violinplot_showmedians": "function",
            "test_horiz_violinplot_showmeans": "function",
            "test_horiz_violinplot_showextrema": "function",
            "test_horiz_violinplot_showall": "function",
            "test_horiz_violinplot_custompoints_10": "function",
            "test_horiz_violinplot_custompoints_200": "function",
            "test_violinplot_bad_positions": "function",
            "test_violinplot_bad_widths": "function",
            "test_violinplot_bad_quantiles": "function",
            "test_violinplot_outofrange_quantiles": "function",
            "test_violinplot_single_list_quantiles": "function",
            "test_violinplot_pandas_series": "function",
            "test_manage_xticks": "function",
            "test_boxplot_not_single": "function",
            "test_tick_space_size_0": "function",
            "test_errorbar": "function",
            "test_errorbar_colorcycle": "function",
            "test_errorbar_cycle_ecolor": "function",
            "test_errorbar_shape": "function",
            "test_errorbar_limits": "function",
            "test_errobar_nonefmt": "function",
            "test_errorbar_line_specific_kwargs": "function",
            "test_errorbar_with_prop_cycle": "function",
            "test_errorbar_every_invalid": "function",
            "test_errorbar_every": "function",
            "test_errorbar_linewidth_type": "function",
            "test_hist_stacked_stepfilled": "function",
            "test_hist_offset": "function",
            "test_hist_step": "function",
            "test_hist_step_horiz": "function",
            "test_hist_stacked_weighted": "function",
            "test_stem": "function",
            "test_stem_args": "function",
            "test_stem_dates": "function",
            "test_stem_orientation": "function",
            "test_hist_stacked_stepfilled_alpha": "function",
            "test_hist_stacked_step": "function",
            "test_hist_stacked_density": "function",
            "test_hist_step_bottom": "function",
            "test_hist_stepfilled_geometry": "function",
            "test_hist_step_geometry": "function",
            "test_hist_stepfilled_bottom_geometry": "function",
            "test_hist_step_bottom_geometry": "function",
            "test_hist_stacked_stepfilled_geometry": "function",
            "test_hist_stacked_step_geometry": "function",
            "test_hist_stacked_stepfilled_bottom_geometry": "function",
            "test_hist_stacked_step_bottom_geometry": "function",
            "test_hist_stacked_bar": "function",
            "test_hist_barstacked_bottom_unchanged": "function",
            "test_hist_emptydata": "function",
            "test_hist_labels": "function",
            "test_transparent_markers": "function",
            "test_rgba_markers": "function",
            "test_mollweide_grid": "function",
            "test_mollweide_forward_inverse_closure": "function",
            "test_mollweide_inverse_forward_closure": "function",
            "test_alpha": "function",
            "test_eventplot": "function",
            "test_eventplot_defaults": "function",
            "test_eventplot_colors": "function",
            "test_eventplot_problem_kwargs": "function",
            "test_empty_eventplot": "function",
            "test_eventplot_orientation": "function",
            "test_marker_styles": "function",
            "test_markers_fillstyle_rcparams": "function",
            "test_vertex_markers": "function",
            "test_eb_line_zorder": "function",
            "test_axline_loglog": "function",
            "test_axline": "function",
            "test_axline_transaxes": "function",
            "test_axline_transaxes_panzoom": "function",
            "test_axline_args": "function",
            "test_vlines": "function",
            "test_vlines_default": "function",
            "test_hlines": "function",
            "test_hlines_default": "function",
            "test_lines_with_colors": "function",
            "test_step_linestyle": "function",
            "test_mixed_collection": "function",
            "test_subplot_key_hash": "function",
            "test_specgram": "function",
            "test_specgram_magnitude": "function",
            "test_specgram_angle": "function",
            "test_specgram_fs_none": "function",
            "test_specgram_origin_rcparam": "function",
            "test_specgram_origin_kwarg": "function",
            "test_psd_csd": "function",
            "test_spectrum": "function",
            "test_twin_spines": "function",
            "test_twin_spines_on_top": "function",
            "test_rcparam_grid_minor": "function",
            "test_grid": "function",
            "test_reset_grid": "function",
            "test_vline_limit": "function",
            "test_axline_minmax": "function",
            "test_empty_shared_subplots": "function",
            "test_shared_with_aspect_1": "function",
            "test_shared_with_aspect_2": "function",
            "test_shared_with_aspect_3": "function",
            "test_twin_with_aspect": "function",
            "test_relim_visible_only": "function",
            "test_text_labelsize": "function",
            "test_pie_default": "function",
            "test_pie_linewidth_0": "function",
            "test_pie_center_radius": "function",
            "test_pie_linewidth_2": "function",
            "test_pie_ccw_true": "function",
            "test_pie_frame_grid": "function",
            "test_pie_rotatelabels_true": "function",
            "test_pie_nolabel_but_legend": "function",
            "test_pie_textprops": "function",
            "test_pie_get_negative_values": "function",
            "test_normalize_kwarg_warn_pie": "function",
            "test_normalize_kwarg_pie": "function",
            "test_set_get_ticklabels": "function",
            "test_subsampled_ticklabels": "function",
            "test_mismatched_ticklabels": "function",
            "test_empty_ticks_fixed_loc": "function",
            "test_retain_tick_visibility": "function",
            "test_tick_label_update": "function",
            "test_o_marker_path_snap": "function",
            "test_margins": "function",
            "test_set_margin_updates_limits": "function",
            "test_length_one_hist": "function",
            "test_pathological_hexbin": "function",
            "test_color_None": "function",
            "test_color_alias": "function",
            "test_numerical_hist_label": "function",
            "test_unicode_hist_label": "function",
            "test_move_offsetlabel": "function",
            "test_rc_spines": "function",
            "test_rc_grid": "function",
            "test_rc_tick": "function",
            "test_rc_major_minor_tick": "function",
            "test_square_plot": "function",
            "test_bad_plot_args": "function",
            "test_pcolorfast": "function",
            "test_shared_scale": "function",
            "test_shared_bool": "function",
            "test_violin_point_mass": "function",
            "generate_errorbar_inputs": "function",
            "test_errorbar_inputs_shotgun": "function",
            "test_dash_offset": "function",
            "test_title_pad": "function",
            "test_title_location_roundtrip": "function",
            "test_loglog": "function",
            "test_loglog_nonpos": "function",
            "test_axes_margins": "function",
            "shared_axis_remover": "function",
            "shared_axes_generator": "function",
            "test_remove_shared_axes": "function",
            "test_remove_shared_axes_relim": "function",
            "test_shared_axes_autoscale": "function",
            "test_adjust_numtick_aspect": "function",
            "test_auto_numticks": "function",
            "test_auto_numticks_log": "function",
            "test_broken_barh_empty": "function",
            "test_broken_barh_timedelta": "function",
            "test_pandas_pcolormesh": "function",
            "test_pandas_indexing_dates": "function",
            "test_pandas_errorbar_indexing": "function",
            "test_pandas_index_shape": "function",
            "test_pandas_indexing_hist": "function",
            "test_pandas_bar_align_center": "function",
            "test_axis_set_tick_params_labelsize_labelcolor": "function",
            "test_axes_tick_params_gridlines": "function",
            "test_axes_tick_params_ylabelside": "function",
            "test_axes_tick_params_xlabelside": "function",
            "test_none_kwargs": "function",
            "test_bar_uint8": "function",
            "test_date_timezone_x": "function",
            "test_date_timezone_y": "function",
            "test_date_timezone_x_and_y": "function",
            "test_axisbelow": "function",
            "test_titletwiny": "function",
            "test_titlesetpos": "function",
            "test_title_xticks_top": "function",
            "test_title_xticks_top_both": "function",
            "test_title_no_move_off_page": "function",
            "test_offset_label_color": "function",
            "test_offset_text_visible": "function",
            "test_large_offset": "function",
            "test_barb_units": "function",
            "test_quiver_units": "function",
            "test_bar_color_cycle": "function",
            "test_tick_param_label_rotation": "function",
            "test_fillbetween_cycle": "function",
            "test_log_margins": "function",
            "test_color_length_mismatch": "function",
            "test_eventplot_legend": "function",
            "test_bar_broadcast_args": "function",
            "test_invalid_axis_limits": "function",
            "test_minorticks_on": "function",
            "test_twinx_knows_limits": "function",
            "test_zero_linewidth": "function",
            "test_empty_errorbar_legend": "function",
            "test_plot_decimal": "function",
            "test_markerfacecolor_none_alpha": "function",
            "test_tick_padding_tightbbox": "function",
            "test_inset": "function",
            "test_zoom_inset": "function",
            "test_indicate_inset_inverted": "function",
            "test_set_position": "function",
            "test_spines_properbbox_after_zoom": "function",
            "test_cartopy_backcompat": "function",
            "test_gettightbbox_ignore_nan": "function",
            "test_scatter_series_non_zero_index": "function",
            "test_scatter_empty_data": "function",
            "test_annotate_across_transforms": "function",
            "test_secondary_xy": "function",
            "test_secondary_fail": "function",
            "test_secondary_resize": "function",
            "test_secondary_minorloc": "function",
            "test_secondary_formatter": "function",
            "color_boxes": "function",
            "test_normal_axes": "function",
            "test_nodecorator": "function",
            "test_displaced_spine": "function",
            "test_tickdirs": "function",
            "test_minor_accountedfor": "function",
            "test_axis_bool_arguments": "function",
            "test_axis_extent_arg": "function",
            "test_datetime_masked": "function",
            "test_hist_auto_bins": "function",
            "test_hist_nan_data": "function",
            "test_hist_range_and_density": "function",
            "test_bar_errbar_zorder": "function",
            "test_set_ticks_inverted": "function",
            "test_aspect_nonlinear_adjustable_box": "function",
            "test_aspect_nonlinear_adjustable_datalim": "function",
            "test_box_aspect": "function",
            "test_box_aspect_custom_position": "function",
            "test_bbox_aspect_axes_init": "function",
            "test_redraw_in_frame": "function",
            "test_invisible_axes": "function",
            "test_xtickcolor_is_not_markercolor": "function",
            "test_ytickcolor_is_not_markercolor": "function",
            "test_unautoscale": "function",
            "test_polar_interpolation_steps_variable_r": "function",
            "test_autoscale_tiny_sticky": "function",
            "test_xtickcolor_is_not_xticklabelcolor": "function",
            "test_ytickcolor_is_not_yticklabelcolor": "function",
            "test_relative_ticklabel_sizes": "function",
            "test_multiplot_autoscale": "function",
            "test_sharing_does_not_link_positions": "function",
            "test_2dcolor_plot": "function",
            "test_shared_axes_clear": "function",
            "test_shared_axes_retick": "function",
            "test_ylabel_ha_with_position": "function",
            "test_bar_label_location_vertical": "function",
            "test_bar_label_location_horizontal": "function",
            "test_bar_label_location_center": "function",
            "test_bar_label_location_errorbars": "function",
            "test_bar_label_fmt": "function",
            "test_bar_label_labels": "function",
            "test_bar_label_nan_ydata": "function",
            "test_patch_bounds": "function",
            "test_warn_ignored_scatter_kwargs": "function"
        },
        "test_backends_interactive": {
            "_get_testable_interactive_backends": "function",
            "_test_timeout": "variable",
            "_test_interactive_impl": "function",
            "test_interactive_backend": "function",
            "_test_thread_impl": "function",
            "_thread_safe_backends": "variable",
            "test_interactive_thread_safety": "function",
            "@pytest.mark.skipif(os.name": "variable",
            "test_webagg": "function",
            "test_lazy_linux_headless": "function",
            "plt.get_backend()": "variable"
        },
        "test_backend_bases": {
            "needs_xelatex": "variable",
            "test_uses_per_path": "function",
            "test_canvas_ctor": "function",
            "test_get_default_filename": "function",
            "test_canvas_change": "function",
            "test_non_gui_warning": "function",
            "test_location_event_position": "function",
            "test_pick": "function",
            "test_interactive_zoom": "function",
            "test_toolbar_zoompan": "function",
            "test_draw": "function"
        },
        "test_backend_cairo": {
            "test_patch_alpha_coloring": "function"
        },
        "test_backend_gtk3": {
            "test_correct_key": "function"
        },
        "test_backend_nbagg": {
            "nbformat": "variable",
            "test_ipynb": "function"
        },
        "test_backend_pdf": {
            "needs_usetex": "variable",
            "test_use14corefonts": "function",
            "test_type42": "function",
            "test_multipage_pagecount": "function",
            "test_multipage_properfinalize": "function",
            "test_multipage_keep_empty": "function",
            "test_composite_image": "function",
            "test_savefig_metadata": "function",
            "test_invalid_metadata": "function",
            "test_multipage_metadata": "function",
            "test_text_urls": "function",
            "test_text_urls_tex": "function",
            "test_pdfpages_fspath": "function",
            "test_hatching_legend": "function",
            "test_grayscale_alpha": "function",
            "test_missing_psfont": "function",
            "test_pdf_eps_savefig_when_color_is_none": "function",
            "test_failing_latex": "function",
            "test_empty_rasterized": "function",
            "test_kerning": "function"
        },
        "test_backend_pgf": {
            "needs_xelatex": "variable",
            "needs_pdflatex": "variable",
            "needs_lualatex": "variable",
            "needs_ghostscript": "variable",
            "compare_figure": "function",
            "create_figure": "function",
            "test_common_texification": "function",
            "test_xelatex": "function",
            "test_pdflatex": "function",
            "test_rcupdate": "function",
            "test_pathclip": "function",
            "test_mixedmode": "function",
            "test_bbox_inches": "function",
            "test_pdf_pages": "function",
            "test_pdf_pages_metadata_check": "function",
            "test_tex_restart_after_error": "function",
            "test_bbox_inches_tight": "function",
            "test_png": "function",
            "test_unknown_font": "function",
            "test_minus_signs_with_tex": "function"
        },
        "test_backend_ps": {
            "needs_ghostscript": "variable",
            "needs_usetex": "variable",
            "test_savefig_to_stringio": "function",
            "test_patheffects": "function",
            "test_tilde_in_tempfilename": "function",
            "test_transparency": "function",
            "test_bbox": "function",
            "test_failing_latex": "function",
            "test_partial_usetex": "function",
            "test_useafm": "function",
            "test_type3_font": "function",
            "test_text_clip": "function",
            "test_d_glyph": "function",
            "test_type42_font_without_prep": "function"
        },
        "test_backend_qt": {
            "qt_core": "function",
            "test_fig_close": "function",
            "test_fig_signals": "function",
            "test_correct_key": "function",
            "test_pixel_ratio_change": "function",
            "test_subplottool": "function",
            "test_figureoptions": "function",
            "test_double_resize": "function",
            "test_canvas_reinit": "function"
        },
        "test_backend_svg": {
            "needs_usetex": "variable",
            "test_visibility": "function",
            "test_fill_black_with_alpha": "function",
            "test_noscale": "function",
            "test_text_urls": "function",
            "test_bold_font_output": "function",
            "test_bold_font_output_with_none_fonttype": "function",
            "test_rasterized": "function",
            "test_rasterized_ordering": "function",
            "test_count_bitmaps": "function",
            "test_missing_psfont": "function",
            "test_unicode_won": "function",
            "test_svgnone_with_data_coordinates": "function",
            "test_gid": "function",
            "test_savefig_tight": "function",
            "test_url": "function",
            "test_url_tick": "function",
            "test_svg_default_metadata": "function",
            "test_svg_clear_default_metadata": "function",
            "test_svg_clear_all_metadata": "function",
            "test_svg_metadata": "function"
        },
        "test_backend_tk": {
            "_test_timeout": "variable",
            "test_blit": "function",
            "evil_blit": "function",
            "bad_boxes": "variable",
            "test_figuremanager_cleans_own_mainloop": "function",
            "root": "variable",
            "target": "function",
            "show_finished_event": "variable",
            "thread": "variable",
            "test_missing_back_button": "function",
            "Toolbar": "class",
            "fig": "variable"
        },
        "test_backend_tools": {
            "test_format_shortcut": "function"
        },
        "test_backend_webagg": {
            "test_webagg_fallback": "function"
        },
        "test_basic": {
            "test_simple": "function",
            "test_override_builtins": "function",
            "test_lazy_imports": "function"
        },
        "test_bbox_tight": {
            "test_bbox_inches_tight": "function",
            "test_bbox_inches_tight_suptile_legend": "function",
            "test_bbox_inches_tight_suptitle_non_default": "function",
            "test_bbox_inches_tight_clipping": "function",
            "test_bbox_inches_tight_raster": "function",
            "test_only_on_non_finite_bbox": "function",
            "test_tight_pcolorfast": "function",
            "test_noop_tight_bbox": "function"
        },
        "test_cbook": {
            "Test_delete_masked_points": "class",
            "Test_boxplot_stats": "class",
            "Test_callback_registry": "class",
            "test_callbackregistry_default_exception_handler": "function",
            "raising_cb_reg": "function",
            "test_callbackregistry_custom_exception_handler": "function",
            "test_sanitize_sequence": "function",
            "fail_mapping": "variable",
            "pass_mapping": "variable",
            "test_normalize_kwargs_fail": "function",
            "test_normalize_kwargs_pass": "function",
            "test_warn_external_frame_embedded_python": "function",
            "test_to_prestep": "function",
            "test_to_prestep_empty": "function",
            "test_to_poststep": "function",
            "test_to_poststep_empty": "function",
            "test_to_midstep": "function",
            "test_to_midstep_empty": "function",
            "test_step_fails": "function",
            "test_grouper": "function",
            "test_grouper_private": "function",
            "test_flatiter": "function",
            "test_reshape2d": "function",
            "test_reshape2d_pandas": "function",
            "test_contiguous_regions": "function",
            "test_safe_first_element_pandas_series": "function",
            "test_warn_external": "function",
            "test_array_patch_perimeters": "function",
            "test_setattr_cm": "function",
            "test_format_approx": "function"
        },
        "test_collections": {
            "generate_EventCollection_plot": "function",
            "test__EventCollection__get_props": "function",
            "test__EventCollection__set_positions": "function",
            "test__EventCollection__add_positions": "function",
            "test__EventCollection__append_positions": "function",
            "test__EventCollection__extend_positions": "function",
            "test__EventCollection__switch_orientation": "function",
            "test__EventCollection__switch_orientation_2x": "function",
            "test__EventCollection__set_orientation": "function",
            "test__EventCollection__set_linelength": "function",
            "test__EventCollection__set_lineoffset": "function",
            "test__EventCollection__set_prop": "function",
            "test__EventCollection__set_color": "function",
            "check_segments": "function",
            "test_null_collection_datalim": "function",
            "test_add_collection": "function",
            "test_collection_log_datalim": "function",
            "test_quiver_limits": "function",
            "test_barb_limits": "function",
            "test_EllipseCollection": "function",
            "test_polycollection_close": "function",
            "test_regularpolycollection_rotate": "function",
            "test_regularpolycollection_scale": "function",
            "test_picking": "function",
            "test_linestyle_single_dashes": "function",
            "test_size_in_xy": "function",
            "test_pandas_indexing": "function",
            "test_lslw_bcast": "function",
            "test_capstyle": "function",
            "test_joinstyle": "function",
            "test_cap_and_joinstyle_image": "function",
            "test_scatter_post_alpha": "function",
            "test_scatter_alpha_array": "function",
            "test_pathcollection_legend_elements": "function",
            "test_EventCollection_nosort": "function",
            "test_collection_set_verts_array": "function",
            "test_blended_collection_autolim": "function",
            "test_singleton_autolim": "function",
            "test_quadmesh_set_array": "function",
            "test_quadmesh_alpha_array": "function",
            "test_alpha_validation": "function",
            "test_legend_inverse_size_label_relationship": "function",
            "test_color_logic": "function",
            "test_LineCollection_args": "function",
            "test_array_wrong_dimensions": "function",
            "test_get_segments": "function"
        },
        "test_colorbar": {
            "_get_cmap_norms": "function",
            "_colorbar_extension_shape": "function",
            "_colorbar_extension_length": "function",
            "test_colorbar_extension_shape": "function",
            "test_colorbar_extension_length": "function",
            "test_colorbar_positioning": "function",
            "test_gridspec_make_colorbar": "function",
            "test_colorbar_single_scatter": "function",
            "test_remove_from_figure": "function",
            "test_colorbarbase": "function",
            "test_colorbar_closed_patch": "function",
            "test_colorbar_ticks": "function",
            "test_colorbar_minorticks_on_off": "function",
            "test_cbar_minorticks_for_rc_xyminortickvisible": "function",
            "test_colorbar_autoticks": "function",
            "test_colorbar_autotickslog": "function",
            "test_colorbar_get_ticks": "function",
            "test_colorbar_lognorm_extension": "function",
            "test_colorbar_powernorm_extension": "function",
            "test_colorbar_axes_kw": "function",
            "test_colorbar_log_minortick_labels": "function",
            "test_colorbar_renorm": "function",
            "test_colorbar_format": "function",
            "test_colorbar_scale_reset": "function",
            "test_colorbar_get_ticks_2": "function",
            "test_colorbar_inverted_ticks": "function",
            "test_extend_colorbar_customnorm": "function",
            "test_mappable_no_alpha": "function",
            "test_colorbar_label": "function",
            "test_colorbar_int": "function",
            "test_anchored_cbar_position_using_specgrid": "function"
        },
        "test_colors": {
            "test_create_lookup_table": "function",
            "test_resample": "function",
            "test_register_cmap": "function",
            "test_double_register_builtin_cmap": "function",
            "test_unregister_builtin_cmap": "function",
            "test_colormap_global_set_warn": "function",
            "test_colormap_dict_deprecate": "function",
            "test_colormap_copy": "function",
            "test_colormap_endian": "function",
            "test_colormap_invalid": "function",
            "test_colormap_return_types": "function",
            "test_BoundaryNorm": "function",
            "test_CenteredNorm": "function",
            "test_lognorm_invalid": "function",
            "test_LogNorm": "function",
            "test_LogNorm_inverse": "function",
            "test_PowerNorm": "function",
            "test_PowerNorm_translation_invariance": "function",
            "test_Normalize": "function",
            "test_FuncNorm": "function",
            "test_TwoSlopeNorm_autoscale": "function",
            "test_TwoSlopeNorm_autoscale_None_vmin": "function",
            "test_TwoSlopeNorm_autoscale_None_vmax": "function",
            "test_TwoSlopeNorm_scale": "function",
            "test_TwoSlopeNorm_scaleout_center": "function",
            "test_TwoSlopeNorm_scaleout_center_max": "function",
            "test_TwoSlopeNorm_Even": "function",
            "test_TwoSlopeNorm_Odd": "function",
            "test_TwoSlopeNorm_VminEqualsVcenter": "function",
            "test_TwoSlopeNorm_VmaxEqualsVcenter": "function",
            "test_TwoSlopeNorm_VminGTVcenter": "function",
            "test_TwoSlopeNorm_TwoSlopeNorm_VminGTVmax": "function",
            "test_TwoSlopeNorm_VcenterGTVmax": "function",
            "test_TwoSlopeNorm_premature_scaling": "function",
            "test_SymLogNorm": "function",
            "test_SymLogNorm_colorbar": "function",
            "test_SymLogNorm_single_zero": "function",
            "_inverse_tester": "function",
            "_scalar_tester": "function",
            "_mask_tester": "function",
            "test_cmap_and_norm_from_levels_and_colors": "function",
            "test_boundarynorm_and_colorbarbase": "function",
            "test_cmap_and_norm_from_levels_and_colors2": "function",
            "test_rgb_hsv_round_trip": "function",
            "test_autoscale_masked": "function",
            "test_light_source_topo_surface": "function",
            "test_light_source_shading_default": "function",
            "test_light_source_shading_empty_mask": "function",
            "test_light_source_masked_shading": "function",
            "test_light_source_hillshading": "function",
            "test_light_source_planar_hillshading": "function",
            "test_color_names": "function",
            "_sph2cart": "function",
            "_azimuth2math": "function",
            "test_pandas_iterable": "function",
            "test_colormap_reversing": "function",
            "test_cn": "function",
            "test_conversions": "function",
            "test_conversions_masked": "function",
            "test_to_rgba_array_single_str": "function",
            "test_to_rgba_array_alpha_array": "function",
            "test_failed_conversions": "function",
            "test_grey_gray": "function",
            "test_tableau_order": "function",
            "test_ndarray_subclass_norm": "function",
            "test_same_color": "function",
            "test_hex_shorthand_notation": "function",
            "test_repr_png": "function",
            "test_repr_html": "function",
            "test_get_under_over_bad": "function",
            "test_non_mutable_get_values": "function",
            "test_colormap_alpha_array": "function",
            "test_colormap_bad_data_with_alpha": "function",
            "test_2d_to_rgba": "function",
            "test_set_dict_to_rgba": "function",
            "test_norm_deepcopy": "function"
        },
        "test_compare_images": {
            "test_image_comparison_expect_rms": "function"
        },
        "test_constrainedlayout": {
            "example_plot": "function",
            "example_pcolor": "function",
            "test_constrained_layout1": "function",
            "test_constrained_layout2": "function",
            "test_constrained_layout3": "function",
            "test_constrained_layout4": "function",
            "test_constrained_layout5": "function",
            "test_constrained_layout6": "function",
            "test_constrained_layout7": "function",
            "test_constrained_layout8": "function",
            "test_constrained_layout9": "function",
            "test_constrained_layout10": "function",
            "test_constrained_layout11": "function",
            "test_constrained_layout11rat": "function",
            "test_constrained_layout12": "function",
            "test_constrained_layout13": "function",
            "test_constrained_layout14": "function",
            "test_constrained_layout15": "function",
            "test_constrained_layout16": "function",
            "test_constrained_layout17": "function",
            "test_constrained_layout18": "function",
            "test_constrained_layout19": "function",
            "test_constrained_layout20": "function",
            "test_constrained_layout21": "function",
            "test_constrained_layout22": "function",
            "test_constrained_layout23": "function",
            "test_colorbar_location": "function",
            "test_hidden_axes": "function",
            "test_colorbar_align": "function",
            "test_colorbars_no_overlapV": "function",
            "test_colorbars_no_overlapH": "function",
            "test_manually_set_position": "function",
            "test_bboxtight": "function",
            "test_bbox": "function",
            "test_align_labels": "function",
            "test_suplabels": "function"
        },
        "test_container": {
            "test_stem_remove": "function",
            "test_errorbar_remove": "function"
        },
        "test_contour": {
            "test_contour_shape_1d_valid": "function",
            "test_contour_shape_2d_valid": "function",
            "test_contour_shape_error": "function",
            "test_contour_empty_levels": "function",
            "test_contour_Nlevels": "function",
            "test_contour_badlevel_fmt": "function",
            "test_contour_uniform_z": "function",
            "test_contour_manual_labels": "function",
            "test_given_colors_levels_and_extends": "function",
            "test_contour_datetime_axis": "function",
            "test_labels": "function",
            "test_corner_mask": "function",
            "test_contourf_decreasing_levels": "function",
            "test_contourf_symmetric_locator": "function",
            "test_internal_cpp_api": "function",
            "test_internal_cpp_api_2": "function",
            "test_circular_contour_warning": "function",
            "test_clabel_zorder": "function",
            "test_contourf_log_extension": "function",
            "test_contour_addlines": "function",
            "test_contour_uneven": "function",
            "test_contour_linewidth": "function",
            "test_label_nonagg": "function"
        },
        "test_cycles": {
            "test_colorcycle_basic": "function",
            "test_marker_cycle": "function",
            "test_marker_cycle_kwargs_arrays_iterators": "function",
            "test_linestylecycle_basic": "function",
            "test_fillcycle_basic": "function",
            "test_fillcycle_ignore": "function",
            "test_property_collision_plot": "function",
            "test_property_collision_fill": "function",
            "test_valid_input_forms": "function",
            "test_cycle_reset": "function",
            "test_invalid_input_forms": "function"
        },
        "test_dates": {
            "test_date_numpyx": "function",
            "test_date_date2num_numpy": "function",
            "test_date2num_NaT": "function",
            "test_date2num_NaT_scalar": "function",
            "test_date_empty": "function",
            "test_date_axhspan": "function",
            "test_date_axvspan": "function",
            "test_date_axhline": "function",
            "test_date_axvline": "function",
            "test_too_many_date_ticks": "function",
            "_new_epoch_decorator": "function",
            "test_RRuleLocator": "function",
            "test_RRuleLocator_dayrange": "function",
            "test_DateFormatter": "function",
            "test_locator_set_formatter": "function",
            "test_date_formatter_callable": "function",
            "test_date_formatter_usetex": "function",
            "test_drange": "function",
            "test_auto_date_locator": "function",
            "test_auto_date_locator_intmult": "function",
            "test_concise_formatter_subsecond": "function",
            "test_concise_formatter": "function",
            "test_concise_formatter_show_offset": "function",
            "test_concise_formatter_usetex": "function",
            "test_concise_formatter_formats": "function",
            "test_concise_formatter_zformats": "function",
            "test_concise_formatter_tz": "function",
            "test_auto_date_locator_intmult_tz": "function",
            "test_date_inverted_limit": "function",
            "_test_date2num_dst": "function",
            "test_date2num_dst": "function",
            "test_date2num_dst_pandas": "function",
            "_test_rrulewrapper": "function",
            "test_rrulewrapper": "function",
            "test_rrulewrapper_pytz": "function",
            "test_yearlocator_pytz": "function",
            "test_DayLocator": "function",
            "test_tz_utc": "function",
            "test_num2timedelta": "function",
            "test_datetime64_in_list": "function",
            "test_change_epoch": "function",
            "test_warn_notintervals": "function",
            "test_change_converter": "function",
            "test_change_interval_multiples": "function",
            "test_epoch2num": "function",
            "test_julian2num": "function"
        },
        "test_determinism": {
            "needs_ghostscript": "variable",
            "needs_usetex": "variable",
            "_save_figure": "function",
            "test_determinism_check": "function",
            "test_determinism_source_date_epoch": "function"
        },
        "test_dviread": {
            "test_PsfontsMap": "function",
            "test_dviread": "function"
        },
        "test_figure": {
            "test_align_labels": "function",
            "test_figure_label": "function",
            "test_fignum_exists": "function",
            "test_clf_keyword": "function",
            "test_figure": "function",
            "test_figure_legend": "function",
            "test_gca": "function",
            "test_add_subplot_subclass": "function",
            "test_add_subplot_invalid": "function",
            "test_suptitle": "function",
            "test_suptitle_fontproperties": "function",
            "test_alpha": "function",
            "test_too_many_figures": "function",
            "test_iterability_axes_argument": "function",
            "test_set_fig_size": "function",
            "test_axes_remove": "function",
            "test_figaspect": "function",
            "test_autofmt_xdate": "function",
            "test_change_dpi": "function",
            "test_invalid_figure_size": "function",
            "test_invalid_figure_add_axes": "function",
            "test_subplots_shareax_loglabels": "function",
            "test_savefig": "function",
            "test_savefig_warns": "function",
            "test_savefig_backend": "function",
            "test_figure_repr": "function",
            "test_warn_cl_plus_tl": "function",
            "test_add_artist": "function",
            "test_fspath": "function",
            "test_tightbbox": "function",
            "test_axes_removal": "function",
            "test_removed_axis": "function",
            "test_picking_does_not_stale": "function",
            "test_add_subplot_twotuple": "function",
            "test_tightbbox_box_aspect": "function",
            "test_animated_with_canvas_change": "function",
            "TestSubplotMosaic": "class",
            "test_reused_gridspec": "function",
            "test_subfigure": "function",
            "test_subfigure_tightbbox": "function",
            "test_subfigure_ss": "function",
            "test_subfigure_double": "function",
            "test_subfigure_spanning": "function",
            "test_subfigure_ticks": "function",
            "test_subfigure_scatter_size": "function",
            "test_add_subplot_kwargs": "function",
            "test_add_axes_kwargs": "function"
        },
        "test_fontconfig_pattern": {
            "keys": "variable",
            "test_fontconfig_pattern": "function",
            "test_fontconfig_str": "function"
        },
        "test_font_manager": {
            "has_fclist": "variable",
            "test_font_priority": "function",
            "test_score_weight": "function",
            "test_json_serialization": "function",
            "test_otf": "function",
            "test_get_fontconfig_fonts": "function",
            "test_hinting_factor": "function",
            "test_utf16m_sfnt": "function",
            "test_find_ttc": "function",
            "test_find_invalid": "function",
            "test_user_fonts_linux": "function",
            "test_user_fonts_win32": "function",
            "_model_handler": "function",
            "test_fork": "function",
            "test_missing_family": "function",
            "_test_threading": "function",
            "test_fontcache_thread_safe": "function"
        },
        "test_gridspec": {
            "test_equal": "function",
            "test_width_ratios": "function",
            "test_height_ratios": "function",
            "test_repr": "function"
        },
        "test_image": {
            "test_image_interps": "function",
            "test_alpha_interp": "function",
            "test_interp_nearest_vs_none": "function",
            "test_figimage": "function",
            "test_image_python_io": "function",
            "test_imshow_antialiased": "function",
            "test_imshow_zoom": "function",
            "test_imshow_pil": "function",
            "test_imread_pil_uint16": "function",
            "test_imread_fspath": "function",
            "test_imsave": "function",
            "test_imsave_fspath": "function",
            "test_imsave_color_alpha": "function",
            "test_imsave_pil_kwargs_png": "function",
            "test_imsave_pil_kwargs_tiff": "function",
            "test_image_alpha": "function",
            "test_cursor_data": "function",
            "test_format_cursor_data": "function",
            "test_image_clip": "function",
            "test_image_cliprect": "function",
            "test_imshow": "function",
            "test_imshow_10_10_1": "function",
            "test_imshow_10_10_2": "function",
            "test_imshow_10_10_5": "function",
            "test_no_interpolation_origin": "function",
            "test_image_shift": "function",
            "test_image_edges": "function",
            "test_image_composite_background": "function",
            "test_image_composite_alpha": "function",
            "test_rasterize_dpi": "function",
            "test_bbox_image_inverted": "function",
            "test_get_window_extent_for_AxisImage": "function",
            "test_zoom_and_clip_upper_origin": "function",
            "test_nonuniformimage_setcmap": "function",
            "test_nonuniformimage_setnorm": "function",
            "test_jpeg_2d": "function",
            "test_jpeg_alpha": "function",
            "test_axesimage_setdata": "function",
            "test_figureimage_setdata": "function",
            "test_setdata_xya": "function",
            "test_minimized_rasterized": "function",
            "test_load_from_url": "function",
            "test_log_scale_image": "function",
            "test_rotate_image": "function",
            "test_image_preserve_size": "function",
            "test_image_preserve_size2": "function",
            "test_mask_image_over_under": "function",
            "test_mask_image": "function",
            "test_mask_image_all": "function",
            "test_imshow_endianess": "function",
            "test_imshow_masked_interpolation": "function",
            "test_imshow_no_warn_invalid": "function",
            "test_imshow_clips_rgb_to_valid_range": "function",
            "test_imshow_flatfield": "function",
            "test_imshow_bignumbers": "function",
            "test_imshow_bignumbers_real": "function",
            "test_empty_imshow": "function",
            "test_imshow_float128": "function",
            "test_imshow_bool": "function",
            "test_full_invalid": "function",
            "test_composite": "function",
            "test_relim": "function",
            "test_unclipped": "function",
            "test_respects_bbox": "function",
            "test_image_cursor_formatting": "function",
            "test_image_array_alpha": "function",
            "test_image_array_alpha_validation": "function",
            "test_exact_vmin": "function",
            "test_https_imread_smoketest": "function",
            "QuantityND": "class",
            "test_quantitynd": "function",
            "test_imshow_quantitynd": "function",
            "test_norm_change": "function",
            "test_huge_range_log": "function",
            "test_spy_box": "function"
        },
        "test_legend": {
            "test_legend_ordereddict": "function",
            "test_legend_auto1": "function",
            "test_legend_auto2": "function",
            "test_legend_auto3": "function",
            "test_various_labels": "function",
            "test_labels_first": "function",
            "test_multiple_keys": "function",
            "test_alpha_rgba": "function",
            "test_alpha_rcparam": "function",
            "test_fancy": "function",
            "test_framealpha": "function",
            "test_rc": "function",
            "test_legend_expand": "function",
            "test_hatching": "function",
            "test_legend_remove": "function",
            "TestLegendFunction": "class",
            "TestLegendFigureFunction": "class",
            "test_legend_stackplot": "function",
            "test_cross_figure_patch_legend": "function",
            "test_nanscatter": "function",
            "test_legend_repeatcheckok": "function",
            "test_not_covering_scatter": "function",
            "test_not_covering_scatter_transform": "function",
            "test_linecollection_scaled_dashes": "function",
            "test_handler_numpoints": "function",
            "test_empty_bar_chart_with_legend": "function",
            "test_shadow_framealpha": "function",
            "test_legend_title_empty": "function",
            "test_legend_proper_window_extent": "function",
            "test_window_extent_cached_renderer": "function",
            "test_legend_title_fontsize": "function",
            "test_legend_labelcolor_single": "function",
            "test_legend_labelcolor_list": "function",
            "test_legend_labelcolor_linecolor": "function",
            "test_legend_labelcolor_markeredgecolor": "function",
            "test_legend_labelcolor_markerfacecolor": "function",
            "test_get_set_draggable": "function",
            "test_alpha_handles": "function",
            "test_usetex_no_warn": "function",
            "test_warn_big_data_best_loc": "function",
            "test_no_warn_big_data_when_loc_specified": "function",
            "test_plot_multiple_input_multiple_label": "function",
            "test_plot_multiple_input_single_label": "function",
            "test_plot_single_input_multiple_label": "function",
            "test_plot_multiple_label_incorrect_length_exception": "function",
            "test_legend_face_edgecolor": "function"
        },
        "test_lines": {
            "test_segment_hits": "function",
            "test_invisible_Line_rendering": "function",
            "test_set_line_coll_dash": "function",
            "test_line_dashes": "function",
            "test_line_colors": "function",
            "test_valid_colors": "function",
            "test_linestyle_variants": "function",
            "test_valid_linestyles": "function",
            "test_drawstyle_variants": "function",
            "test_valid_drawstyles": "function",
            "test_set_drawstyle": "function",
            "test_set_line_coll_dash_image": "function",
            "test_marker_fill_styles": "function",
            "test_markerfacecolor_fillstyle": "function",
            "test_lw_scaling": "function",
            "test_nan_is_sorted": "function",
            "test_step_markers": "function",
            "test_markevery": "function",
            "test_marker_as_markerstyle": "function",
            "test_odd_dashes": "function",
            "test_picking": "function"
        },
        "test_marker": {
            "test_marker_fillstyle": "function",
            "test_markers_valid": "function",
            "test_markers_invalid": "function",
            "UnsnappedMarkerStyle": "class",
            "test_poly_marker": "function",
            "test_star_marker": "function",
            "test_asterisk_marker": "function",
            "test_marker_clipping": "function"
        },
        "test_mathtext": {
            "math_tests": "variable",
            "lightweight_math_tests": "variable",
            "digits": "variable",
            "uppercase": "variable",
            "lowercase": "variable",
            "uppergreek": "variable",
            "lowergreek": "variable",
            "all": "variable",
            "font_test_specs": "variable",
            "font_tests": "variable",
            "baseline_images": "function",
            "test_mathtext_rendering": "function",
            "test_mathtext_rendering_lightweight": "function",
            "test_mathfont_rendering": "function",
            "test_fontinfo": "function",
            "test_mathtext_exceptions": "function",
            "test_single_minus_sign": "function",
            "test_spaces": "function",
            "test_operator_space": "function",
            "test_mathtext_fallback_valid": "function",
            "test_mathtext_fallback_invalid": "function",
            "test_mathtext_fallback_to_cm_invalid": "function",
            "test_mathtext_fallback": "function",
            "test_math_to_image": "function",
            "test_mathtext_to_png": "function",
            "test_math_fontfamily": "function"
        },
        "test_matplotlib": {
            "test_tmpconfigdir_warning": "function",
            "test_importable_with_no_home": "function",
            "test_use_doc_standard_backends": "function",
            "test_importable_with__OO": "function"
        },
        "test_mlab": {
            "TestStride": "class",
            "test_window": "function",
            "TestDetrend": "class",
            "TestSpectral": "class",
            "test_cohere": "function",
            "TestGaussianKDE": "class",
            "TestGaussianKDECustom": "class",
            "TestGaussianKDEEvaluate": "class",
            "test_psd_onesided_norm": "function",
            "test_psd_oversampling": "function"
        },
        "test_offsetbox": {
            "test_offsetbox_clipping": "function",
            "test_offsetbox_clip_children": "function",
            "test_offsetbox_loc_codes": "function",
            "test_expand_with_tight_layout": "function",
            "test_get_packed_offsets": "function",
            "_Params": "variable",
            "test_get_packed_offsets_fixed": "function",
            "test_get_packed_offsets_expand": "function",
            "test_get_packed_offsets_equal": "function",
            "test_get_packed_offsets_equal_total_none_sep_none": "function",
            "test_picking": "function",
            "test_anchoredtext_horizontal_alignment": "function",
            "test_annotationbbox_extents": "function"
        },
        "test_patches": {
            "on_win": "variable",
            "test_Polygon_close": "function",
            "test_rotate_rect": "function",
            "test_negative_rect": "function",
            "test_clip_to_bbox": "function",
            "test_patch_alpha_coloring": "function",
            "test_patch_alpha_override": "function",
            "test_patch_color_none": "function",
            "test_patch_custom_linestyle": "function",
            "test_patch_linestyle_accents": "function",
            "test_patch_linestyle_none": "function",
            "test_wedge_movement": "function",
            "test_wedge_range": "function",
            "test_patch_str": "function",
            "test_multi_color_hatch": "function",
            "test_units_rectangle": "function",
            "test_connection_patch": "function",
            "test_connection_patch_fig": "function",
            "test_datetime_rectangle": "function",
            "test_datetime_datetime_fails": "function",
            "test_contains_point": "function",
            "test_contains_points": "function",
            "test_shadow": "function",
            "test_fancyarrow_units": "function",
            "test_large_arc": "function",
            "test_rotated_arcs": "function",
            "test_degenerate_polygon": "function",
            "test_color_override_warning": "function",
            "test_empty_verts": "function",
            "test_default_antialiased": "function",
            "test_default_linestyle": "function",
            "test_default_capstyle": "function",
            "test_default_joinstyle": "function"
        },
        "test_path": {
            "test_empty_closed_path": "function",
            "test_readonly_path": "function",
            "test_path_exceptions": "function",
            "test_point_in_path": "function",
            "test_contains_points_negative_radius": "function",
            "_test_paths": "variable",
            "_test_path_extents": "variable",
            "test_exact_extents": "function",
            "test_extents_with_ignored_codes": "function",
            "test_point_in_path_nan": "function",
            "test_nonlinear_containment": "function",
            "test_arrow_contains_point": "function",
            "test_path_clipping": "function",
            "test_log_transform_with_zero": "function",
            "test_make_compound_path_empty": "function",
            "test_make_compound_path_stops": "function",
            "test_xkcd": "function",
            "test_xkcd_marker": "function",
            "test_marker_paths_pdf": "function",
            "test_nan_isolated_points": "function",
            "test_path_no_doubled_point_in_to_polygon": "function",
            "test_path_to_polygons": "function",
            "test_path_deepcopy": "function",
            "test_path_intersect_path": "function",
            "test_full_arc": "function",
            "test_disjoint_zero_length_segment": "function",
            "test_intersect_zero_length_segment": "function",
            "test_cleanup_closepoly": "function"
        },
        "test_patheffects": {
            "test_patheffect1": "function",
            "test_patheffect2": "function",
            "test_patheffect3": "function",
            "test_patheffects_stroked_text": "function",
            "test_PathEffect_points_to_pixels": "function",
            "test_SimplePatchShadow_offset": "function",
            "test_collection": "function",
            "test_tickedstroke": "function"
        },
        "test_pickle": {
            "test_simple": "function",
            "test_complete": "function",
            "test_no_pyplot": "function",
            "test_renderer": "function",
            "test_image": "function",
            "test_polar": "function",
            "TransformBlob": "class",
            "test_transform": "function",
            "test_rrulewrapper": "function",
            "test_shared": "function",
            "test_inset_and_secondary": "function",
            "test_cmap": "function",
            "test_unpickle_canvas": "function"
        },
        "test_png": {
            "test_pngsuite": "function",
            "test_truncated_file": "function",
            "test_truncated_buffer": "function"
        },
        "test_polar": {
            "test_polar_annotations": "function",
            "test_polar_coord_annotations": "function",
            "test_polar_alignment": "function",
            "test_polar_twice": "function",
            "test_polar_wrap": "function",
            "test_polar_units_1": "function",
            "test_polar_units_2": "function",
            "test_polar_rmin": "function",
            "test_polar_negative_rmin": "function",
            "test_polar_rorigin": "function",
            "test_polar_invertedylim": "function",
            "test_polar_invertedylim_rorigin": "function",
            "test_polar_theta_position": "function",
            "test_polar_rlabel_position": "function",
            "test_polar_theta_limits": "function",
            "test_polar_rlim": "function",
            "test_polar_rlim_bottom": "function",
            "test_polar_rlim_zero": "function",
            "test_polar_no_data": "function",
            "test_polar_not_datalim_adjustable": "function",
            "test_polar_gridlines": "function",
            "test_get_tightbbox_polar": "function",
            "test_polar_interpolation_steps_constant_r": "function",
            "test_polar_interpolation_steps_variable_r": "function",
            "test_thetalim_valid_invalid": "function",
            "test_thetalim_args": "function"
        },
        "test_preprocess_data": {
            "plot_func": "function",
            "all_funcs": "variable",
            "all_func_ids": "variable",
            "test_compiletime_checks": "function",
            "test_function_call_without_data": "function",
            "test_function_call_with_dict_input": "function",
            "test_function_call_with_dict_data": "function",
            "test_function_call_with_dict_data_not_in_data": "function",
            "test_function_call_with_pandas_data": "function",
            "test_function_call_replace_all": "function",
            "test_no_label_replacements": "function",
            "test_more_args_than_pos_parameter": "function",
            "test_docstring_addition": "function",
            "TestPlotTypes": "class"
        },
        "test_pyplot": {
            "test_pyplot_up_to_date": "function",
            "test_copy_docstring_and_deprecators": "function",
            "test_pyplot_box": "function",
            "test_stackplot_smoke": "function",
            "test_nrows_error": "function",
            "test_ioff": "function",
            "test_ion": "function",
            "test_nested_ion_ioff": "function",
            "test_close": "function",
            "test_subplot_reuse": "function",
            "test_axes_kwargs": "function",
            "test_subplot_replace_projection": "function",
            "test_subplot_kwarg_collision": "function",
            "test_gca_kwargs": "function",
            "test_subplot_projection_reuse": "function",
            "test_subplot_polar_normalization": "function",
            "test_subplot_change_projection": "function"
        },
        "test_quiver": {
            "draw_quiver": "function",
            "test_quiver_memory_leak": "function",
            "test_quiver_key_memory_leak": "function",
            "test_quiver_number_of_args": "function",
            "test_quiver_arg_sizes": "function",
            "test_no_warnings": "function",
            "test_zero_headlength": "function",
            "test_quiver_animate": "function",
            "test_quiver_with_key": "function",
            "test_quiver_single": "function",
            "test_quiver_copy": "function",
            "test_quiver_key_pivot": "function",
            "test_quiver_key_xy": "function",
            "test_barbs": "function",
            "test_barbs_pivot": "function",
            "test_barbs_flip": "function",
            "test_barb_copy": "function",
            "test_bad_masked_sizes": "function",
            "test_angles_and_scale": "function",
            "test_quiver_xy": "function",
            "test_quiverkey_angles": "function",
            "test_quiver_setuvc_numbers": "function"
        },
        "test_rcparams": {
            "test_rcparams": "function",
            "test_RcParams_class": "function",
            "test_rcparams_update": "function",
            "test_rcparams_init": "function",
            "test_Bug_2543": "function",
            "legend_color_tests": "variable",
            "legend_color_test_ids": "variable",
            "test_legend_colors": "function",
            "test_mfc_rcparams": "function",
            "test_mec_rcparams": "function",
            "test_axes_titlecolor_rcparams": "function",
            "test_Issue_1713": "function",
            "test_animation_frame_formats": "function",
            "generate_validator_testcases": "function",
            "test_validator_valid": "function",
            "test_validator_invalid": "function",
            "test_validate_fontweight": "function",
            "test_keymaps": "function",
            "test_rcparams_reset_after_fail": "function",
            "test_backend_fallback_headless": "function",
            "test_backend_fallback_headful": "function"
        },
        "test_sankey": {
            "test_sankey": "function",
            "test_label": "function",
            "test_format_using_callable": "function"
        },
        "test_scale": {
            "test_log_scales": "function",
            "test_symlog_mask_nan": "function",
            "test_logit_scales": "function",
            "test_log_scatter": "function",
            "test_logscale_subs": "function",
            "test_logscale_mask": "function",
            "test_extra_kwargs_raise": "function",
            "test_logscale_invert_transform": "function",
            "test_logscale_transform_repr": "function",
            "test_logscale_nonpos_values": "function",
            "test_invalid_log_lims": "function",
            "test_function_scale": "function",
            "test_pass_scale": "function",
            "test_scale_deepcopy": "function"
        },
        "test_simplification": {
            "test_clipping": "function",
            "test_overflow": "function",
            "test_diamond": "function",
            "test_noise": "function",
            "test_antiparallel_simplification": "function",
            "test_angled_antiparallel": "function",
            "test_sine_plus_noise": "function",
            "test_simplify_curve": "function",
            "test_hatch": "function",
            "test_fft_peaks": "function",
            "test_start_with_moveto": "function",
            "test_throw_rendering_complexity_exceeded": "function",
            "test_clipper": "function",
            "test_para_equal_perp": "function",
            "test_clipping_with_nans": "function",
            "test_clipping_full": "function"
        },
        "test_skew": {
            "SkewXTick": "class",
            "SkewXAxis": "class",
            "SkewSpine": "class",
            "SkewXAxes": "class",
            "test_set_line_coll_dash_image": "function",
            "test_skew_rectangle": "function"
        },
        "test_spines": {
            "test_spine_class": "function",
            "test_spines_axes_positions": "function",
            "test_spines_data_positions": "function",
            "test_spine_nonlinear_data_positions": "function",
            "test_spines_capstyle": "function",
            "test_label_without_ticks": "function"
        },
        "test_streamplot": {
            "on_win": "variable",
            "on_mac": "variable",
            "velocity_field": "function",
            "swirl_velocity_field": "function",
            "test_startpoints": "function",
            "test_colormap": "function",
            "test_linewidth": "function",
            "test_masks_and_nans": "function",
            "test_maxlength": "function",
            "test_direction": "function",
            "test_streamplot_limits": "function",
            "test_streamplot_grid": "function"
        },
        "test_style": {
            "PARAM": "variable",
            "VALUE": "variable",
            "DUMMY_SETTINGS": "variable",
            "temp_style": "function",
            "test_invalid_rc_warning_includes_filename": "function",
            "test_available": "function",
            "test_use": "function",
            "test_use_url": "function",
            "test_single_path": "function",
            "test_context": "function",
            "test_context_with_dict": "function",
            "test_context_with_dict_after_namedstyle": "function",
            "test_context_with_dict_before_namedstyle": "function",
            "test_context_with_union_of_dict_and_namedstyle": "function",
            "test_context_with_badparam": "function",
            "test_alias": "function",
            "test_xkcd_no_cm": "function",
            "test_xkcd_cm": "function"
        },
        "test_subplots": {
            "check_shared": "function",
            "check_visible": "function",
            "test_shared": "function",
            "test_label_outer_span": "function",
            "test_shared_and_moved": "function",
            "test_exceptions": "function",
            "test_subplots_offsettext": "function",
            "test_subplots_hide_labels": "function",
            "test_get_gridspec": "function",
            "test_dont_mutate_kwargs": "function",
            "test_subplot_factory_reapplication": "function"
        },
        "test_table": {
            "test_non_square": "function",
            "test_zorder": "function",
            "test_label_colours": "function",
            "test_diff_cell_table": "function",
            "test_customcell": "function",
            "test_auto_column": "function",
            "test_table_cells": "function"
        },
        "test_testing": {
            "test_warn_to_fail": "function",
            "test_parametrize_with_check_figure_equal": "function",
            "test_wrap_failure": "function",
            "test_check_figures_equal_extra_fig": "function",
            "test_check_figures_equal_closed_fig": "function"
        },
        "test_texmanager": {
            "test_fontconfig_preamble": "function"
        },
        "test_text": {
            "needs_usetex": "variable",
            "test_font_styles": "function",
            "test_multiline": "function",
            "test_multiline2": "function",
            "test_antialiasing": "function",
            "test_afm_kerning": "function",
            "test_contains": "function",
            "test_annotation_contains": "function",
            "test_titles": "function",
            "test_alignment": "function",
            "test_axes_titles": "function",
            "test_set_position": "function",
            "test_non_default_dpi": "function",
            "test_get_rotation_string": "function",
            "test_get_rotation_float": "function",
            "test_get_rotation_int": "function",
            "test_get_rotation_raises": "function",
            "test_get_rotation_none": "function",
            "test_get_rotation_mod360": "function",
            "test_null_rotation_with_rotation_mode": "function",
            "test_bbox_clipping": "function",
            "test_annotation_negative_ax_coords": "function",
            "test_annotation_negative_fig_coords": "function",
            "test_text_stale": "function",
            "test_agg_text_clip": "function",
            "test_text_size_binding": "function",
            "test_font_scaling": "function",
            "test_two_2line_texts": "function",
            "test_nonfinite_pos": "function",
            "test_hinting_factor_backends": "function",
            "test_usetex_is_copied": "function",
            "test_single_artist_usetex": "function",
            "test_single_artist_usenotex": "function",
            "test_text_as_path_opacity": "function",
            "test_text_as_text_opacity": "function",
            "test_text_repr": "function",
            "test_annotation_update": "function",
            "test_annotation_units": "function",
            "test_large_subscript_title": "function",
            "test_wrap": "function",
            "test_long_word_wrap": "function",
            "test_wrap_no_wrap": "function",
            "test_buffer_size": "function",
            "test_fontproperties_kwarg_precedence": "function",
            "test_transform_rotates_text": "function",
            "test_update_mutate_input": "function",
            "test_invalid_color": "function",
            "test_pdf_kerning": "function"
        },
        "test_ticker": {
            "TestMaxNLocator": "class",
            "TestLinearLocator": "class",
            "TestMultipleLocator": "class",
            "TestAutoMinorLocator": "class",
            "TestLogLocator": "class",
            "TestNullLocator": "class",
            "_LogitHelper": "class",
            "TestLogitLocator": "class",
            "TestFixedLocator": "class",
            "TestIndexLocator": "class",
            "TestSymmetricalLogLocator": "class",
            "TestIndexFormatter": "class",
            "TestScalarFormatter": "class",
            "FakeAxis": "class",
            "TestLogFormatterExponent": "class",
            "TestLogFormatterMathtext": "class",
            "TestLogFormatterSciNotation": "class",
            "TestLogFormatter": "class",
            "TestLogitFormatter": "class",
            "TestFormatStrFormatter": "class",
            "TestStrMethodFormatter": "class",
            "TestEngFormatter": "class",
            "test_engformatter_usetex_useMathText": "function",
            "TestPercentFormatter": "class",
            "test_majformatter_type": "function",
            "test_minformatter_type": "function",
            "test_majlocator_type": "function",
            "test_minlocator_type": "function",
            "test_minorticks_rc": "function",
            "test_remove_overlap": "function",
            "test_bad_locator_subs": "function",
            "test_small_range_loglocator": "function"
        },
        "test_tightlayout": {
            "example_plot": "function",
            "test_tight_layout1": "function",
            "test_tight_layout2": "function",
            "test_tight_layout3": "function",
            "test_tight_layout4": "function",
            "test_tight_layout5": "function",
            "test_tight_layout6": "function",
            "test_tight_layout7": "function",
            "test_tight_layout8": "function",
            "test_tight_layout9": "function",
            "test_outward_ticks": "function",
            "add_offsetboxes": "function",
            "test_tight_layout_offsetboxes": "function",
            "test_empty_layout": "function",
            "test_verybig_decorators": "function",
            "test_big_decorators_horizontal": "function",
            "test_big_decorators_vertical": "function",
            "test_badsubplotgrid": "function",
            "test_collapsed": "function",
            "test_suptitle": "function",
            "test_non_agg_renderer": "function"
        },
        "test_transforms": {
            "test_non_affine_caching": "function",
            "test_external_transform_api": "function",
            "test_pre_transform_plotting": "function",
            "test_contour_pre_transform_limits": "function",
            "test_pcolor_pre_transform_limits": "function",
            "test_pcolormesh_pre_transform_limits": "function",
            "test_Affine2D_from_values": "function",
            "test_affine_inverted_invalidated": "function",
            "test_clipping_of_log": "function",
            "NonAffineForTest": "class",
            "TestBasicTransform": "class",
            "TestTransformPlotInterface": "class",
            "assert_bbox_eq": "function",
            "test_bbox_intersection": "function",
            "test_bbox_as_strings": "function",
            "test_str_transform": "function",
            "test_transform_single_point": "function",
            "test_log_transform": "function",
            "test_nan_overlap": "function",
            "test_transform_angles": "function",
            "test_nonsingular": "function",
            "test_invalid_arguments": "function",
            "test_transformed_path": "function",
            "test_transformed_patch_path": "function",
            "test_lockable_bbox": "function",
            "test_copy": "function",
            "test_deepcopy": "function"
        },
        "test_triangulation": {
            "test_delaunay": "function",
            "test_delaunay_duplicate_points": "function",
            "test_delaunay_points_in_line": "function",
            "test_delaunay_insufficient_points": "function",
            "test_delaunay_robust": "function",
            "test_tripcolor": "function",
            "test_no_modify": "function",
            "test_trifinder": "function",
            "test_triinterp": "function",
            "test_triinterpcubic_C1_continuity": "function",
            "test_triinterpcubic_cg_solver": "function",
            "test_triinterpcubic_geom_weights": "function",
            "test_triinterp_colinear": "function",
            "test_triinterp_transformations": "function",
            "test_tri_smooth_contouring": "function",
            "test_tri_smooth_gradient": "function",
            "test_tritools": "function",
            "test_trirefine": "function",
            "test_trirefine_masked": "function",
            "meshgrid_triangles": "function",
            "test_triplot_return": "function",
            "test_trirefiner_fortran_contiguous_triangles": "function",
            "test_qhull_triangle_orientation": "function",
            "test_trianalyzer_mismatched_indices": "function",
            "test_tricontourf_decreasing_levels": "function",
            "test_internal_cpp_api": "function",
            "test_qhull_large_offset": "function",
            "test_tricontour_non_finite_z": "function"
        },
        "test_ttconv": {
            "test_truetype_conversion": "function"
        },
        "test_type1font": {
            "test_Type1Font": "function",
            "test_overprecision": "function"
        },
        "test_units": {
            "Quantity": "class",
            "quantity_converter": "function",
            "test_numpy_facade": "function",
            "test_plot_masked_units": "function",
            "test_empty_set_limits_with_units": "function",
            "test_jpl_bar_units": "function",
            "test_jpl_barh_units": "function",
            "test_empty_arrays": "function",
            "test_scatter_element0_masked": "function",
            "test_subclass": "function",
            "test_shared_axis_quantity": "function",
            "test_shared_axis_datetime": "function",
            "test_shared_axis_categorical": "function"
        },
        "test_usetex": {
            "test_usetex": "function",
            "test_empty": "function",
            "test_unicode_minus": "function",
            "test_mathdefault": "function",
            "test_minus_no_descent": "function",
            "test_usetex_xcolor": "function",
            "test_textcomp_full": "function"
        },
        "test_widgets": {
            "check_rectangle": "function",
            "test_rectangle_selector": "function",
            "test_ellipse": "function",
            "test_rectangle_handles": "function",
            "check_span": "function",
            "test_span_selector": "function",
            "check_lasso_selector": "function",
            "test_lasso_selector": "function",
            "test_CheckButtons": "function",
            "test_check_radio_buttons_image": "function",
            "test_check_bunch_of_radio_buttons": "function",
            "test_slider_slidermin_slidermax_invalid": "function",
            "test_slider_slidermin_slidermax": "function",
            "test_slider_valmin_valmax": "function",
            "test_slider_valstep_snapping": "function",
            "test_slider_horizontal_vertical": "function",
            "test_range_slider": "function",
            "check_polygon_selector": "function",
            "polygon_place_vertex": "function",
            "test_polygon_selector": "function",
            "test_MultiCursor": "function"
        }
    },
    "typing": {
        "tests": {
            "data": {
                "fail": {
                    "arithmetic": {
                        "b_": "variable",
                        "dt": "variable",
                        "td": "variable"
                    },
                    "array_constructors": {
                        "generator": "variable"
                    },
                    "array_like": {
                        "A": "class",
                        "scalar": "variable",
                        "array": "variable"
                    },
                    "bitwise_ops": {
                        "i8": "variable",
                        "i4": "variable",
                        "u8": "variable",
                        "b_": "variable",
                        "i": "variable",
                        "f8": "variable"
                    },
                    "constants": {
                        "np.Inf": "variable",
                        "np.ALLOW_THREADS": "variable",
                        "np.little_endian": "variable",
                        "np.UFUNC_PYVALS_NAME": "variable"
                    },
                    "dtype": {
                        "Test": "class"
                    },
                    "flatiter": {
                        "Index": "class",
                        "a.base": "variable",
                        "a.coords": "variable",
                        "a.index": "variable"
                    },
                    "ndarray": {
                        "float_array": "variable",
                        "float_array.dtype": "variable"
                    },
                    "scalars": {
                        "A": "class"
                    }
                },
                "pass": {
                    "arithmetic": {
                        "c16": "variable",
                        "f8": "variable",
                        "i8": "variable",
                        "u8": "variable",
                        "c8": "variable",
                        "f4": "variable",
                        "i4": "variable",
                        "u4": "variable",
                        "dt": "variable",
                        "td": "variable",
                        "b_": "variable",
                        "b": "variable",
                        "c": "variable",
                        "f": "variable",
                        "i": "variable",
                        "AR": "variable"
                    },
                    "array_constructors": {
                        "Index": "class",
                        "SubClass": "class",
                        "func": "function",
                        "i8": "variable",
                        "A": "variable",
                        "B": "variable",
                        "B_stack": "variable",
                        "C": "variable"
                    },
                    "array_like": {
                        "A": "class"
                    },
                    "bitwise_ops": {
                        "i8": "variable",
                        "u8": "variable",
                        "i4": "variable",
                        "u4": "variable",
                        "b_": "variable",
                        "b": "variable",
                        "i": "variable",
                        "AR": "variable"
                    },
                    "dtype": {
                        "dtype_obj": "variable",
                        "void_dtype_obj": "variable",
                        "Test": "class"
                    },
                    "flatiter": {
                        "a": "variable"
                    },
                    "literal": {
                        "AR": "variable",
                        "KACF": "variable",
                        "ACF": "variable",
                        "CF": "variable"
                    },
                    "mod": {
                        "f8": "variable",
                        "i8": "variable",
                        "u8": "variable",
                        "f4": "variable",
                        "i4": "variable",
                        "u4": "variable",
                        "td": "variable",
                        "b_": "variable",
                        "b": "variable",
                        "f": "variable",
                        "i": "variable",
                        "AR": "variable",
                        "AR2": "variable"
                    },
                    "ndarray_conversion": {
                        "nd": "variable",
                        "scalar_array": "variable",
                        "complex_array": "variable"
                    },
                    "ndarray_misc": {
                        "SubClass": "class",
                        "i4": "variable",
                        "A": "variable",
                        "B0": "variable",
                        "B1": "variable",
                        "B2": "variable",
                        "C": "variable",
                        "D": "variable",
                        "_choices": "variable",
                        "void": "variable"
                    },
                    "ndarray_shape_manipulation": {
                        "nd1": "variable",
                        "nd2": "variable",
                        "nd3": "variable",
                        "nd4": "variable"
                    },
                    "numeric": {
                        "SubClass": "class",
                        "i8": "variable",
                        "A": "variable",
                        "C": "variable"
                    },
                    "scalars": {
                        "D": "class",
                        "C": "class",
                        "B": "class",
                        "A": "class",
                        "i8": "variable",
                        "u8": "variable",
                        "f8": "variable",
                        "c16": "variable",
                        "b_": "variable",
                        "td": "variable",
                        "U": "variable",
                        "S": "variable",
                        "AR": "variable"
                    },
                    "simple_py3": {
                        "array": "variable"
                    }
                },
                "reveal": {
                    "arithmetic": {
                        "c16": "variable",
                        "f8": "variable",
                        "i8": "variable",
                        "u8": "variable",
                        "c8": "variable",
                        "f4": "variable",
                        "i4": "variable",
                        "u4": "variable",
                        "dt": "variable",
                        "td": "variable",
                        "b_": "variable",
                        "b": "variable",
                        "c": "variable",
                        "f": "variable",
                        "i": "variable",
                        "AR": "variable"
                    },
                    "array_constructors": {
                        "SubClass": "class",
                        "func": "function"
                    },
                    "bitwise_ops": {
                        "i8": "variable",
                        "u8": "variable",
                        "i4": "variable",
                        "u4": "variable",
                        "b_": "variable",
                        "b": "variable",
                        "i": "variable",
                        "AR": "variable"
                    },
                    "mod": {
                        "f8": "variable",
                        "i8": "variable",
                        "u8": "variable",
                        "f4": "variable",
                        "i4": "variable",
                        "u4": "variable",
                        "td": "variable",
                        "b_": "variable",
                        "b": "variable",
                        "f": "variable",
                        "i": "variable",
                        "AR": "variable",
                        "AR2": "variable"
                    },
                    "nbit_base_example": {
                        "T": "variable",
                        "add": "function"
                    },
                    "ndarray_conversion": {
                        "nd": "variable",
                        "SubArray": "class"
                    },
                    "ndarray_misc": {
                        "SubClass": "class"
                    },
                    "ndarray_shape_manipulation": {
                        "nd": "variable"
                    },
                    "numeric": {
                        "SubClass": "class"
                    },
                    "scalars": {
                        "x": "variable"
                    }
                }
            },
            "test_isfile": {
                "ROOT": "variable",
                "FILES": "variable",
                "TestIsFile": "class"
            },
            "test_typing": {
                "DATA_DIR": "variable",
                "PASS_DIR": "variable",
                "FAIL_DIR": "variable",
                "REVEAL_DIR": "variable",
                "MYPY_INI": "variable",
                "CACHE_DIR": "variable",
                "get_test_cases": "function",
                "test_success": "function",
                "test_fail": "function",
                "_FAIL_MSG1": "variable",
                "_test_fail": "function",
                "test_reveal": "function",
                "_REVEAL_MSG": "variable"
            }
        },
        "setup": {
            "configuration": "function"
        },
        "_array_like": {
            "ArrayLike": "variable"
        },
        "_dtype_like": {
            "_DTypeLikeNested": "variable",
            "_VoidDTypeLike": "variable",
            "DTypeLike": "variable"
        },
        "_scalars": {
            "_CharLike": "variable",
            "_BoolLike": "variable",
            "_IntLike": "variable",
            "_FloatLike": "variable",
            "_ComplexLike": "variable",
            "_NumberLike": "variable",
            "_ScalarLike": "variable",
            "_VoidLike": "variable"
        },
        "_shape": {
            "_Shape": "variable",
            "_ShapeLike": "variable"
        },
        "": {
            "NBitBase": "class",
            "_256Bit": "class",
            "_128Bit": "class",
            "_96Bit": "class",
            "_80Bit": "class",
            "_64Bit": "class",
            "_32Bit": "class",
            "_16Bit": "class",
            "_8Bit": "class",
            "test": "variable"
        }
    },
    "conftest": {
        "_old_fpu_mode": "variable",
        "_collect_results": "variable",
        "_pytest_ini": "variable",
        "pytest_configure": "function",
        "pytest_addoption": "function",
        "pytest_sessionstart": "function",
        "pytest_itemcollected": "function",
        "check_fpu_mode": "function",
        "add_np": "function",
        "env_setup": "function"
    },
    "ctypeslib": {
        "__all__": "variable",
        "_num_fromflags": "function",
        "_flagnames": "variable",
        "_flags_fromnum": "function",
        "_ndptr": "class",
        "_concrete_ndptr": "class",
        "_pointer_type_cache": "variable",
        "ndpointer": "function"
    },
    "dual": {
        "__all__": "variable",
        "fft": "variable",
        "ifft": "variable",
        "fftn": "variable",
        "ifftn": "variable",
        "fft2": "variable",
        "ifft2": "variable",
        "norm": "variable",
        "inv": "variable",
        "svd": "variable",
        "solve": "variable",
        "det": "variable",
        "eig": "variable",
        "eigvals": "variable",
        "eigh": "variable",
        "eigvalsh": "variable",
        "lstsq": "variable",
        "pinv": "variable",
        "cholesky": "variable",
        "_restore_dict": "variable",
        "register_func": "function",
        "restore_func": "function",
        "restore_all": "function"
    },
    "matlib": {
        "__version__": "variable",
        "__all__": "variable",
        "empty": "function",
        "ones": "function",
        "zeros": "function",
        "identity": "function",
        "eye": "function",
        "rand": "function",
        "randn": "function",
        "repmat": "function"
    },
    "setup": {
        "configuration": "function"
    },
    "version": {
        "__version__": "variable",
        "git_version": "variable"
    },
    "_globals": {
        "__ALL__": "variable",
        "_is_loaded": "variable",
        "ModuleDeprecationWarning": "class",
        "ModuleDeprecationWarning.__module__": "variable",
        "VisibleDeprecationWarning": "class",
        "VisibleDeprecationWarning.__module__": "variable",
        "_NoValueType": "class",
        "_NoValue": "variable"
    },
    "_pytesttester": {
        "__all__": "variable",
        "_show_numpy_info": "function",
        "PytestTester": "class"
    },
    "__config__": {
        "show": "function",
        "_cxx_flags": "function",
        "parallel_info": "function"
    },
    "": {
        "__all__": "variable"
    },
    "axes": {
        "_axes": {
            "_log": "variable",
            "Axes": "class"
        },
        "_base": {
            "_log": "variable",
            "_axis_method_wrapper": "class",
            "_TransformedBoundsLocator": "class",
            "_process_plot_format": "function",
            "_process_plot_var_args": "class",
            "_AxesBase": "class"
        },
        "_secondary_axes": {
            "SecondaryAxis": "class",
            "_secax_docstring": "variable"
        },
        "_subplots": {
            "SubplotBase": "class",
            "_subplot_classes": "variable",
            "subplot_class_factory": "function",
            "Subplot": "variable",
            "_picklable_subplot_class_constructor": "function"
        }
    },
    "backends": {
        "cuda": {
            "": {
                "is_built": "function",
                "cuFFTPlanCacheAttrContextProp": "class",
                "cuFFTPlanCache": "class",
                "cuFFTPlanCacheManager": "class",
                "cuBLASModule": "class",
                "cufft_plan_cache": "variable",
                "matmul": "variable"
            }
        },
        "cudnn": {
            "rnn": {
                "get_cudnn_mode": "function",
                "Unserializable": "class",
                "init_dropout_state": "function"
            },
            "": {
                "__cudnn_version": "variable",
                "version": "function",
                "CUDNN_TENSOR_DTYPES": "variable",
                "is_available": "function",
                "is_acceptable": "function",
                "set_flags": "function",
                "flags": "function",
                "CudnnModule": "class",
                "sys.modules[__name__]": "variable"
            }
        },
        "mkl": {
            "": {
                "is_available": "function"
            }
        },
        "mkldnn": {
            "": {
                "is_available": "function",
                "set_flags": "function",
                "flags": "function",
                "MkldnnModule": "class",
                "sys.modules[__name__]": "variable"
            }
        },
        "openmp": {
            "": {
                "is_available": "function"
            }
        },
        "quantized": {
            "": {
                "_get_qengine_id": "function",
                "_get_qengine_str": "function",
                "_QEngineProp": "class",
                "_SupportedQEnginesProp": "class",
                "QuantizedEngine": "class",
                "sys.modules[__name__]": "variable"
            }
        },
        "xnnpack": {
            "": {
                "_XNNPACKEnabled": "class",
                "XNNPACKEngine": "class",
                "sys.modules[__name__]": "variable"
            }
        },
        "_coreml": {
            "preprocess": {
                "CT_METADATA_VERSION": "variable",
                "CT_METADATA_SOURCE": "variable",
                "ScalarType": "class",
                "torch_to_mil_types": "variable",
                "CoreMLComputeUnit": "class",
                "_TensorSpec": "class",
                "TensorSpec": "function",
                "_CompileSpec": "class",
                "CompileSpec": "function",
                "_convert_to_mil_type": "function",
                "preprocess": "function"
            }
        },
        "_nnapi": {
            "prepare": {
                "NnapiModule": "class",
                "convert_model_to_nnapi": "function",
                "process_for_nnapi": "function"
            },
            "serializer": {
                "LOG": "variable",
                "NNAPI_OperandCode": "class",
                "NNAPI_OperationCode": "class",
                "NNAPI_FuseCode": "class",
                "OperandValueSourceType": "class",
                "TorchScalarTypes": "class",
                "approx_equal": "function",
                "tensor_size": "function",
                "change_element": "function",
                "ConvPoolArgs2d": "class",
                "DimOrder": "class",
                "Operand": "class",
                "broadcast_shapes": "function",
                "get_conv_pool_shape": "function",
                "fix_shape": "function",
                "reverse_map_dim": "function",
                "flex_name": "function",
                "_NnapiSerializer": "class",
                "serialize_model": "function"
            }
        },
        "": {
            "__allow_nonbracketed_mutation_flag": "variable",
            "disable_global_flags": "function",
            "flags_frozen": "function",
            "__allow_nonbracketed_mutation": "function",
            "ContextProp": "class",
            "PropModule": "class"
        }
    },
    "cbook": {
        "": {
            "deprecated": "function",
            "warn_deprecated": "function",
            "_get_running_interactive_framework": "function",
            "_exception_printer": "function",
            "_StrongRef": "class",
            "_weak_or_strong_ref": "function",
            "CallbackRegistry": "class",
            "silent_list": "class",
            "IgnoredKeywordWarning": "class",
            "local_over_kwdict": "function",
            "_local_over_kwdict": "function",
            "strip_math": "function",
            "is_writable_file_like": "function",
            "file_requires_unicode": "function",
            "to_filehandle": "function",
            "open_file_cm": "function",
            "is_scalar_or_string": "function",
            "get_sample_data": "function",
            "_get_data_path": "function",
            "flatten": "function",
            "get_realpath_and_stat": "function",
            "_find_dedent_regex": "variable",
            "_dedent_regex": "variable",
            "maxdict": "class",
            "Stack": "class",
            "report_memory": "function",
            "safe_masked_invalid": "function",
            "print_cycles": "function",
            "Grouper": "class",
            "simple_linear_interpolation": "function",
            "delete_masked_points": "function",
            "_combine_masks": "function",
            "boxplot_stats": "function",
            "ls_mapper": "variable",
            "ls_mapper_r": "variable",
            "contiguous_regions": "function",
            "is_math_text": "function",
            "_to_unmasked_float_array": "function",
            "_check_1d": "function",
            "_reshape_2D": "function",
            "violin_stats": "function",
            "pts_to_prestep": "function",
            "pts_to_poststep": "function",
            "pts_to_midstep": "function",
            "STEP_LOOKUP_MAP": "variable",
            "index_of": "function",
            "safe_first_element": "function",
            "sanitize_sequence": "function",
            "normalize_kwargs": "function",
            "_lock_path": "function",
            "_topmost_artist": "function",
            "_str_equal": "function",
            "_str_lower_equal": "function",
            "_define_aliases": "function",
            "_array_perimeter": "function",
            "_unfold": "function",
            "_array_patch_perimeters": "function",
            "_setattr_cm": "function",
            "_OrderedSet": "class",
            "_premultiplied_argb32_to_unmultiplied_rgba8888": "function",
            "_unmultiplied_rgba8888_to_premultiplied_argb32": "function",
            "_get_nonzero_slices": "function",
            "_pformat_subprocess": "function",
            "_check_and_log_subprocess": "function",
            "_backend_module_name": "function",
            "_setup_new_guiapp": "function",
            "_format_approx": "function",
            "_unikey_or_keysym_to_mplkey": "function"
        }
    },
    "projections": {
        "geo": {
            "GeoAxes": "class",
            "_GeoTransform": "class",
            "AitoffAxes": "class",
            "HammerAxes": "class",
            "MollweideAxes": "class",
            "LambertAxes": "class"
        },
        "polar": {
            "PolarTransform": "class",
            "PolarAffine": "class",
            "InvertedPolarTransform": "class",
            "ThetaFormatter": "class",
            "_AxisWrapper": "class",
            "ThetaLocator": "class",
            "ThetaTick": "class",
            "ThetaAxis": "class",
            "RadialLocator": "class",
            "_ThetaShift": "class",
            "RadialTick": "class",
            "RadialAxis": "class",
            "_is_full_circle_deg": "function",
            "_is_full_circle_rad": "function",
            "_WedgeBbox": "class",
            "PolarAxes": "class",
            "PolarAxes.PolarTransform": "variable",
            "PolarAxes.PolarAffine": "variable",
            "PolarAxes.InvertedPolarTransform": "variable",
            "PolarAxes.ThetaFormatter": "variable",
            "PolarAxes.RadialLocator": "variable",
            "PolarAxes.ThetaLocator": "variable"
        },
        "": {
            "ProjectionRegistry": "class",
            "projection_registry": "variable",
            "register_projection": "function",
            "get_projection_class": "function",
            "get_projection_names": "variable"
        }
    },
    "sphinxext": {
        "mathmpl": {
            "latex_math": "class",
            "fontset_choice": "function",
            "math_role": "function",
            "math_role.options": "variable",
            "MathDirective": "class",
            "latex2png": "function",
            "latex2html": "function",
            "setup": "function"
        },
        "plot_directive": {
            "align": "variable",
            "__version__": "variable",
            "_option_boolean": "function",
            "_option_context": "function",
            "_option_format": "function",
            "mark_plot_labels": "function",
            "PlotDirective": "class",
            "_copy_css_file": "function",
            "setup": "function",
            "contains_doctest": "function",
            "unescape_doctest": "function",
            "split_code_at_show": "function",
            "TEMPLATE": "variable",
            "plot_context": "variable",
            "ImageFile": "class",
            "out_of_date": "function",
            "PlotError": "class",
            "run_code": "function",
            "clear_state": "function",
            "get_plot_formats": "function",
            "render_figures": "function",
            "run": "function"
        }
    },
    "style": {
        "core": {
            "_log": "variable",
            "__all__": "variable",
            "BASE_LIBRARY_PATH": "variable",
            "USER_LIBRARY_PATHS": "variable",
            "STYLE_EXTENSION": "variable",
            "STYLE_FILE_PATTERN": "variable",
            "STYLE_BLACKLIST": "variable",
            "_remove_blacklisted_style_params": "function",
            "_apply_style": "function",
            "use": "function",
            "context": "function",
            "load_base_library": "function",
            "iter_user_libraries": "function",
            "update_user_library": "function",
            "read_style_directory": "function",
            "update_nested_dict": "function",
            "_base_library": "variable",
            "library": "variable",
            "available": "variable",
            "reload_library": "function"
        }
    },
    "tri": {
        "triangulation": {
            "Triangulation": "class"
        },
        "tricontour": {
            "TriContourSet": "class",
            "tricontour": "function",
            "tricontourf": "function"
        },
        "trifinder": {
            "TriFinder": "class",
            "TrapezoidMapTriFinder": "class"
        },
        "triinterpolate": {
            "__all__": "variable",
            "TriInterpolator": "class",
            "LinearTriInterpolator": "class",
            "CubicTriInterpolator": "class",
            "_ReducedHCT_Element": "class",
            "_DOF_estimator": "class",
            "_DOF_estimator_user": "class",
            "_DOF_estimator_geom": "class",
            "_DOF_estimator_min_E": "class",
            "_Sparse_Matrix_coo": "class",
            "_cg": "function",
            "_safe_inv22_vectorized": "function",
            "_pseudo_inv22sym_vectorized": "function",
            "_scalar_vectorized": "function",
            "_transpose_vectorized": "function",
            "_roll_vectorized": "function",
            "_to_matrix_vectorized": "function",
            "_extract_submatrices": "function"
        },
        "tripcolor": {
            "tripcolor": "function"
        },
        "triplot": {
            "triplot": "function"
        },
        "trirefine": {
            "TriRefiner": "class",
            "UniformTriRefiner": "class"
        },
        "tritools": {
            "TriAnalyzer": "class"
        }
    },
    "_api": {
        "deprecation": {
            "MatplotlibDeprecationWarning": "class",
            "mplDeprecation": "variable",
            "_generate_deprecation_warning": "function",
            "warn_deprecated": "function",
            "deprecated": "function",
            "deprecate_privatize_attribute": "class",
            "rename_parameter": "function",
            "_deprecated_parameter_class": "class",
            "_deprecated_parameter": "variable",
            "delete_parameter": "function",
            "make_keyword_only": "function",
            "deprecate_method_override": "function",
            "suppress_matplotlib_deprecation_warning": "function"
        },
        "": {
            "classproperty": "class",
            "check_isinstance": "function",
            "check_in_list": "function",
            "check_shape": "function",
            "check_getitem": "function",
            "warn_external": "function"
        }
    },
    "afm": {
        "_log": "variable",
        "_to_int": "function",
        "_to_float": "function",
        "_to_str": "function",
        "_to_list_of_ints": "function",
        "_to_list_of_floats": "function",
        "_to_bool": "function",
        "_parse_header": "function",
        "CharMetrics": "variable",
        "CharMetrics.__doc__": "variable",
        "CharMetrics.width.__doc__": "variable",
        "CharMetrics.name.__doc__": "variable",
        "CharMetrics.bbox.__doc__": "variable",
        "_parse_char_metrics": "function",
        "_parse_kern_pairs": "function",
        "CompositePart": "variable",
        "CompositePart.__doc__": "variable",
        "CompositePart.name.__doc__": "variable",
        "CompositePart.dx.__doc__": "variable",
        "CompositePart.dy.__doc__": "variable",
        "_parse_composites": "function",
        "_parse_optional": "function",
        "AFM": "class"
    },
    "animation": {
        "_log": "variable",
        "adjusted_figsize": "function",
        "MovieWriterRegistry": "class",
        "writers": "variable",
        "AbstractMovieWriter": "class",
        "MovieWriter": "class",
        "FileMovieWriter": "class",
        "PillowWriter": "class",
        "FFMpegBase": "class",
        "FFMpegWriter": "class",
        "FFMpegFileWriter": "class",
        "AVConvBase": "class",
        "AVConvWriter": "class",
        "AVConvFileWriter": "class",
        "ImageMagickBase": "class",
        "ImageMagickWriter": "class",
        "ImageMagickFileWriter": "class",
        "_included_frames": "function",
        "_embedded_frames": "function",
        "HTMLWriter": "class",
        "Animation": "class",
        "TimedAnimation": "class",
        "ArtistAnimation": "class",
        "FuncAnimation": "class"
    },
    "artist": {
        "_log": "variable",
        "allow_rasterization": "function",
        "_finalize_rasterization": "function",
        "_stale_axes_callback": "function",
        "_XYPair": "variable",
        "Artist": "class",
        "ArtistInspector": "class",
        "getp": "function",
        "get": "variable",
        "setp": "function",
        "kwdoc": "function"
    },
    "axis": {
        "_log": "variable",
        "GRIDLINE_INTERPOLATION_STEPS": "variable",
        "_line_inspector": "variable",
        "_line_param_names": "variable",
        "_line_param_aliases": "variable",
        "_gridline_param_names": "variable",
        "Tick": "class",
        "XTick": "class",
        "YTick": "class",
        "Ticker": "class",
        "_LazyTickList": "class",
        "Axis": "class",
        "_make_getset_interval": "function",
        "XAxis": "class",
        "YAxis": "class"
    },
    "backend_bases": {
        "_log": "variable",
        "_default_filetypes": "variable",
        "_default_backends": "variable",
        "_safe_pyplot_import": "function",
        "register_backend": "function",
        "get_registered_canvas_class": "function",
        "RendererBase": "class",
        "GraphicsContextBase": "class",
        "TimerBase": "class",
        "Event": "class",
        "DrawEvent": "class",
        "ResizeEvent": "class",
        "CloseEvent": "class",
        "LocationEvent": "class",
        "MouseButton": "class",
        "MouseEvent": "class",
        "PickEvent": "class",
        "KeyEvent": "class",
        "_get_renderer": "function",
        "_no_output_draw": "function",
        "_is_non_interactive_terminal_ipython": "function",
        "_check_savefig_extra_args": "function",
        "FigureCanvasBase": "class",
        "key_press_handler": "function",
        "button_press_handler": "function",
        "NonGuiException": "class",
        "FigureManagerBase": "class",
        "cursors": "variable",
        "_Mode": "class",
        "NavigationToolbar2": "class",
        "ToolContainerBase": "class",
        "StatusbarBase": "class",
        "_Backend": "class",
        "ShowBase": "class"
    },
    "backend_managers": {
        "ToolEvent": "class",
        "ToolTriggerEvent": "class",
        "ToolManagerMessageEvent": "class",
        "ToolManager": "class"
    },
    "backend_tools": {
        "Cursors": "class",
        "cursors": "variable",
        "_views_positions": "variable",
        "ToolBase": "class",
        "ToolToggleBase": "class",
        "SetCursorBase": "class",
        "ToolCursorPosition": "class",
        "RubberbandBase": "class",
        "ToolQuit": "class",
        "ToolQuitAll": "class",
        "_ToolEnableAllNavigation": "class",
        "ToolEnableAllNavigation": "class",
        "_ToolEnableNavigation": "class",
        "ToolEnableNavigation": "class",
        "ToolGrid": "class",
        "ToolMinorGrid": "class",
        "ToolFullScreen": "class",
        "AxisScaleBase": "class",
        "ToolYScale": "class",
        "ToolXScale": "class",
        "ToolViewsPositions": "class",
        "ViewsPositionsBase": "class",
        "ToolHome": "class",
        "ToolBack": "class",
        "ToolForward": "class",
        "ConfigureSubplotsBase": "class",
        "SaveFigureBase": "class",
        "ZoomPanBase": "class",
        "ToolZoom": "class",
        "ToolPan": "class",
        "ToolHelpBase": "class",
        "ToolCopyToClipboardBase": "class",
        "default_tools": "variable",
        "add_tools_to_manager": "function",
        "add_tools_to_container": "function"
    },
    "bezier": {
        "_comb": "function",
        "NonIntersectingPathException": "class",
        "get_intersection": "function",
        "get_normal_points": "function",
        "_de_casteljau1": "function",
        "split_de_casteljau": "function",
        "find_bezier_t_intersecting_with_closedpath": "function",
        "BezierSegment": "class",
        "split_bezier_intersecting_with_closedpath": "function",
        "split_path_inout": "function",
        "inside_circle": "function",
        "get_cos_sin": "function",
        "check_if_parallel": "function",
        "get_parallels": "function",
        "find_control_points": "function",
        "make_wedged_bezier2": "function",
        "make_path_regular": "function",
        "concatenate_paths": "function"
    },
    "blocking_input": {
        "_log": "variable",
        "BlockingInput": "class",
        "BlockingMouseInput": "class",
        "BlockingContourLabeler": "class",
        "BlockingKeyMouseInput": "class"
    },
    "category": {
        "_log": "variable",
        "StrCategoryConverter": "class",
        "StrCategoryLocator": "class",
        "StrCategoryFormatter": "class",
        "UnitData": "class",
        "units.registry[str]": "variable",
        "units.registry[np.str_]": "variable",
        "units.registry[bytes]": "variable",
        "units.registry[np.bytes_]": "variable"
    },
    "cm": {
        "LUTSIZE": "variable",
        "_gen_cmap_registry": "function",
        "_DeprecatedCmapDictWrapper": "class",
        "_cmap_registry": "variable",
        "cmap_d": "variable",
        "__builtin_cmaps": "variable",
        "register_cmap": "function",
        "get_cmap": "function",
        "unregister_cmap": "function",
        "ScalarMappable": "class"
    },
    "collections": {
        "Collection": "class",
        "_CollectionWithSizes": "class",
        "PathCollection": "class",
        "PolyCollection": "class",
        "BrokenBarHCollection": "class",
        "RegularPolyCollection": "class",
        "StarPolygonCollection": "class",
        "AsteriskPolygonCollection": "class",
        "LineCollection": "class",
        "EventCollection": "class",
        "CircleCollection": "class",
        "EllipseCollection": "class",
        "PatchCollection": "class",
        "TriMesh": "class",
        "QuadMesh": "class",
        "_artist_kwdoc": "variable"
    },
    "colorbar": {
        "_log": "variable",
        "_make_axes_param_doc": "variable",
        "_colormap_kw_doc": "variable",
        "colorbar_doc": "variable",
        "colormap_kw_doc": "variable",
        "make_axes_kw_doc": "variable",
        "_set_ticks_on_axis_warn": "function",
        "_ColorbarAutoLocator": "class",
        "_ColorbarAutoMinorLocator": "class",
        "_ColorbarLogLocator": "class",
        "_ColorbarSpine": "class",
        "ColorbarBase": "class",
        "_add_disjoint_kwargs": "function",
        "Colorbar": "class",
        "_normalize_location_orientation": "function",
        "make_axes": "function",
        "make_axes_gridspec": "function",
        "ColorbarPatch": "class",
        "colorbar_factory": "function"
    },
    "colors": {
        "_ColorMapping": "class",
        "_colors_full_map": "variable",
        "_REPR_PNG_SIZE": "variable",
        "get_named_colors_mapping": "function",
        "_sanitize_extrema": "function",
        "_is_nth_color": "function",
        "is_color_like": "function",
        "_check_color_like": "function",
        "same_color": "function",
        "to_rgba": "function",
        "_to_rgba_no_colorcycle": "function",
        "to_rgba_array": "function",
        "to_rgb": "function",
        "to_hex": "function",
        "cnames": "variable",
        "hexColorPattern": "variable",
        "rgb2hex": "variable",
        "hex2color": "variable",
        "ColorConverter": "class",
        "colorConverter": "variable",
        "_create_lookup_table": "function",
        "_warn_if_global_cmap_modified": "function",
        "Colormap": "class",
        "LinearSegmentedColormap": "class",
        "ListedColormap": "class",
        "Normalize": "class",
        "TwoSlopeNorm": "class",
        "CenteredNorm": "class",
        "_make_norm_from_scale": "function",
        "FuncNorm": "class",
        "LogNorm": "class",
        "SymLogNorm": "class",
        "PowerNorm": "class",
        "BoundaryNorm": "class",
        "NoNorm": "class",
        "rgb_to_hsv": "function",
        "hsv_to_rgb": "function",
        "_vector_magnitude": "function",
        "LightSource": "class",
        "from_levels_and_colors": "function"
    },
    "container": {
        "Container": "class",
        "BarContainer": "class",
        "ErrorbarContainer": "class",
        "StemContainer": "class"
    },
    "contour": {
        "ClabelText": "class",
        "ContourLabeler": "class",
        "_is_closed_polygon": "function",
        "_find_closest_point_on_path": "function"
    },
    "dates": {
        "__all__": "variable",
        "_log": "variable",
        "UTC": "variable",
        "_get_rc_timezone": "function",
        "EPOCH_OFFSET": "variable",
        "JULIAN_OFFSET": "variable",
        "MICROSECONDLY": "variable",
        "HOURS_PER_DAY": "variable",
        "MIN_PER_HOUR": "variable",
        "SEC_PER_MIN": "variable",
        "MONTHS_PER_YEAR": "variable",
        "DAYS_PER_WEEK": "variable",
        "DAYS_PER_MONTH": "variable",
        "DAYS_PER_YEAR": "variable",
        "MINUTES_PER_DAY": "variable",
        "SEC_PER_HOUR": "variable",
        "SEC_PER_DAY": "variable",
        "SEC_PER_WEEK": "variable",
        "MUSECONDS_PER_DAY": "variable",
        "WEEKDAYS": "variable",
        "_epoch": "variable",
        "_reset_epoch_test_example": "function",
        "set_epoch": "function",
        "get_epoch": "function",
        "_dt64_to_ordinalf": "function",
        "_from_ordinalf": "function",
        "_from_ordinalf_np_vectorized": "variable",
        "_dateutil_parser_parse_np_vectorized": "variable",
        "datestr2num": "function",
        "date2num": "function",
        "julian2num": "function",
        "num2julian": "function",
        "num2date": "function",
        "_ordinalf_to_timedelta_np_vectorized": "variable",
        "num2timedelta": "function",
        "drange": "function",
        "_wrap_in_tex": "function",
        "DateFormatter": "class",
        "IndexDateFormatter": "class",
        "ConciseDateFormatter": "class",
        "AutoDateFormatter": "class",
        "rrulewrapper": "class",
        "DateLocator": "class",
        "RRuleLocator": "class",
        "AutoDateLocator": "class",
        "YearLocator": "class",
        "MonthLocator": "class",
        "WeekdayLocator": "class",
        "DayLocator": "class",
        "HourLocator": "class",
        "MinuteLocator": "class",
        "SecondLocator": "class",
        "MicrosecondLocator": "class",
        "epoch2num": "function",
        "num2epoch": "function",
        "date_ticker_factory": "function",
        "DateConverter": "class",
        "ConciseDateConverter": "class",
        "_rcParam_helper": "class"
    },
    "docstring": {
        "Substitution": "class",
        "copy": "function",
        "interpd": "variable",
        "dedent_interpd": "variable"
    },
    "dviread": {
        "_log": "variable",
        "_dvistate": "variable",
        "Page": "variable",
        "Text": "variable",
        "Box": "variable",
        "_arg_raw": "function",
        "_arg": "function",
        "_arg_slen": "function",
        "_arg_slen1": "function",
        "_arg_ulen1": "function",
        "_arg_olen1": "function",
        "_arg_mapping": "variable",
        "_dispatch": "function",
        "Dvi": "class",
        "DviFont": "class",
        "Vf": "class",
        "_fix2comp": "function",
        "_mul2012": "function",
        "Tfm": "class",
        "PsFont": "variable",
        "PsfontsMap": "class",
        "Encoding": "class",
        "_parse_enc": "function",
        "find_tex_file": "function",
        "_fontfile": "function",
        "_tfmfile": "variable",
        "_vffile": "variable"
    },
    "figure": {
        "_log": "variable",
        "_stale_figure_callback": "function",
        "_AxesStack": "class",
        "SubplotParams": "class",
        "FigureBase": "class",
        "SubFigure": "class",
        "Figure": "class",
        "figaspect": "function"
    },
    "fontconfig_pattern": {
        "family_punc": "variable",
        "family_unescape": "variable",
        "family_escape": "variable",
        "value_punc": "variable",
        "value_unescape": "variable",
        "value_escape": "variable",
        "FontconfigPatternParser": "class",
        "parse_fontconfig_pattern": "variable",
        "_escape_val": "function",
        "generate_fontconfig_pattern": "function"
    },
    "font_manager": {
        "_log": "variable",
        "font_scalings": "variable",
        "stretch_dict": "variable",
        "weight_dict": "variable",
        "_weight_regexes": "variable",
        "font_family_aliases": "variable",
        "MSFolders": "variable",
        "MSFontDirectories": "variable",
        "MSUserFontDirectories": "variable",
        "X11FontDirectories": "variable",
        "OSXFontDirectories": "variable",
        "_cached_realpath": "function",
        "get_fontext_synonyms": "function",
        "list_fonts": "function",
        "win32FontDirectory": "function",
        "_win32RegistryFonts": "function",
        "win32InstalledFonts": "function",
        "_call_fc_list": "function",
        "get_fontconfig_fonts": "function",
        "findSystemFonts": "function",
        "FontEntry": "class",
        "ttfFontProperty": "function",
        "afmFontProperty": "function",
        "FontProperties": "class",
        "_JSONEncoder": "class",
        "_json_decode": "function",
        "json_dump": "function",
        "json_load": "function",
        "_normalize_font_family": "function",
        "FontManager": "class",
        "is_opentype_cff_font": "function",
        "_get_font": "function",
        "get_font": "function",
        "_load_fontmanager": "function",
        "fontManager": "variable",
        "findfont": "variable"
    },
    "gridspec": {
        "_log": "variable",
        "GridSpecBase": "class",
        "GridSpec": "class",
        "GridSpecFromSubplotSpec": "class",
        "SubplotSpec": "class"
    },
    "image": {
        "_log": "variable",
        "_interpd_": "variable",
        "interpolations_names": "variable",
        "composite_images": "function",
        "_draw_list_compositing_images": "function",
        "_resample": "function",
        "_rgb_to_rgba": "function",
        "_ImageBase": "class",
        "AxesImage": "class",
        "NonUniformImage": "class",
        "PcolorImage": "class",
        "FigureImage": "class",
        "BboxImage": "class",
        "imread": "function",
        "imsave": "function",
        "pil_to_array": "function",
        "_pil_png_to_float_array": "function",
        "thumbnail": "function"
    },
    "legend": {
        "DraggableLegend": "class"
    },
    "legend_handler": {
        "update_from_first_child": "function",
        "HandlerBase": "class",
        "HandlerNpoints": "class",
        "HandlerNpointsYoffsets": "class",
        "HandlerLine2D": "class",
        "HandlerPatch": "class",
        "HandlerStepPatch": "class",
        "HandlerLineCollection": "class",
        "HandlerRegularPolyCollection": "class",
        "HandlerPathCollection": "class",
        "HandlerCircleCollection": "class",
        "HandlerErrorbar": "class",
        "HandlerStem": "class",
        "HandlerTuple": "class",
        "HandlerPolyCollection": "class"
    },
    "lines": {
        "_log": "variable",
        "_get_dash_pattern": "function",
        "_scale_dashes": "function",
        "segment_hits": "function",
        "_mark_every_path": "function",
        "Line2D": "class",
        "_AxLine": "class",
        "VertexSelector": "class",
        "lineStyles": "variable",
        "lineMarkers": "variable",
        "drawStyles": "variable",
        "fillStyles": "variable"
    },
    "markers": {
        "_empty_path": "variable",
        "MarkerStyle": "class"
    },
    "mathtext": {
        "_log": "variable",
        "get_unicode_index": "variable",
        "get_unicode_index.__module__": "variable",
        "MathtextBackend": "class",
        "MathtextBackendAgg": "class",
        "MathtextBackendBitmap": "class",
        "MathtextBackendPs": "class",
        "MathtextBackendPdf": "class",
        "MathtextBackendSvg": "class",
        "MathtextBackendPath": "class",
        "MathtextBackendCairo": "class",
        "MathTextWarning": "class",
        "GlueSpec": "class",
        "ship": "function",
        "MathTextParser": "class",
        "math_to_image": "function"
    },
    "mlab": {
        "window_hanning": "function",
        "window_none": "function",
        "detrend": "function",
        "detrend_mean": "function",
        "detrend_none": "function",
        "detrend_linear": "function",
        "stride_windows": "function",
        "_spectral_helper": "function",
        "_single_spectrum_helper": "function",
        "psd": "function",
        "csd": "function",
        "_single_spectrum_docs": "variable"
    },
    "offsetbox": {
        "DEBUG": "variable",
        "bbox_artist": "function",
        "_get_packed_offsets": "function",
        "_get_aligned_offsets": "function",
        "OffsetBox": "class",
        "PackerBase": "class",
        "VPacker": "class",
        "HPacker": "class",
        "PaddedBox": "class",
        "DrawingArea": "class",
        "TextArea": "class",
        "AuxTransformBox": "class",
        "AnchoredOffsetbox": "class",
        "AnchoredText": "class",
        "OffsetImage": "class",
        "AnnotationBbox": "class",
        "DraggableBase": "class",
        "DraggableOffsetBox": "class",
        "DraggableAnnotation": "class"
    },
    "patches": {
        "Patch": "class",
        "_patch_kwdoc": "variable",
        "Shadow": "class",
        "Rectangle": "class",
        "RegularPolygon": "class",
        "PathPatch": "class",
        "StepPatch": "class",
        "Polygon": "class",
        "Wedge": "class",
        "Arrow": "class",
        "FancyArrow": "class",
        "CirclePolygon": "class",
        "Ellipse": "class",
        "Circle": "class",
        "Arc": "class",
        "bbox_artist": "function",
        "draw_bbox": "function",
        "_simpleprint_styles": "function",
        "_Style": "class",
        "_register_style": "function",
        "BoxStyle": "class",
        "ConnectionStyle": "class",
        "_point_along_a_line": "function",
        "ArrowStyle": "class",
        "FancyBboxPatch": "class",
        "FancyArrowPatch": "class",
        "ConnectionPatch": "class"
    },
    "path": {
        "Path": "class",
        "get_path_collection_extents": "function"
    },
    "patheffects": {
        "AbstractPathEffect": "class",
        "PathEffectRenderer": "class",
        "Normal": "class",
        "_subclass_with_normal": "function",
        "Stroke": "class",
        "withStroke": "variable",
        "SimplePatchShadow": "class",
        "withSimplePatchShadow": "variable",
        "SimpleLineShadow": "class",
        "PathPatchEffect": "class",
        "TickedStroke": "class",
        "withTickedStroke": "variable"
    },
    "matplotliblab": {
        "bytes": "variable"
    },
    "matplotlibplot": {
        "_log": "variable",
        "_code_objs": "variable",
        "_copy_docstring_and_deprecators": "function",
        "_IP_REGISTERED": "variable",
        "_INSTALL_FIG_OBSERVER": "variable",
        "install_repl_displayhook": "function",
        "uninstall_repl_displayhook": "function",
        "draw_all": "variable",
        "set_loglevel": "function",
        "findobj": "function",
        "_get_required_interactive_framework": "function",
        "switch_backend": "function",
        "_warn_if_gui_out_of_main_thread": "function",
        "new_figure_manager": "function",
        "draw_if_interactive": "function",
        "show": "function",
        "isinteractive": "function",
        "_IoffContext": "class",
        "_IonContext": "class",
        "ioff": "function",
        "ion": "function",
        "pause": "function",
        "rc": "function",
        "rc_context": "function",
        "rcdefaults": "function",
        "getp": "function",
        "get": "function",
        "setp": "function",
        "xkcd": "function",
        "_xkcd": "class",
        "figure": "function",
        "_auto_draw_if_interactive": "function",
        "gcf": "function",
        "fignum_exists": "function",
        "get_fignums": "function",
        "get_figlabels": "function",
        "get_current_fig_manager": "function",
        "connect": "function",
        "disconnect": "function",
        "close": "function",
        "clf": "function",
        "draw": "function",
        "savefig": "function",
        "figlegend": "function",
        "axes": "function",
        "delaxes": "function",
        "sca": "function",
        "cla": "function",
        "subplot": "function",
        "subplots": "function",
        "subplot_mosaic": "function",
        "subplot2grid": "function",
        "twinx": "function",
        "twiny": "function",
        "subplot_tool": "function",
        "tight_layout": "function",
        "box": "function",
        "xlim": "function",
        "ylim": "function",
        "xticks": "function",
        "yticks": "function",
        "rgrids": "function",
        "thetagrids": "function",
        "plotting": "function",
        "get_plot_commands": "function",
        "colormaps": "function",
        "_setup_pyplot_info_docstrings": "function",
        "colorbar": "function",
        "clim": "function",
        "set_cmap": "function",
        "imread": "function",
        "imsave": "function",
        "matshow": "function",
        "polar": "function",
        "figimage": "function",
        "figtext": "function",
        "gca": "function",
        "gci": "function",
        "ginput": "function",
        "subplots_adjust": "function",
        "suptitle": "function",
        "waitforbuttonpress": "function",
        "acorr": "function",
        "angle_spectrum": "function",
        "annotate": "function",
        "arrow": "function",
        "autoscale": "function",
        "axhline": "function",
        "axhspan": "function",
        "axis": "function",
        "axline": "function",
        "axvline": "function",
        "axvspan": "function",
        "bar": "function",
        "barbs": "function",
        "barh": "function",
        "bar_label": "function",
        "boxplot": "function",
        "broken_barh": "function",
        "clabel": "function",
        "cohere": "function",
        "contour": "function",
        "contourf": "function",
        "csd": "function",
        "errorbar": "function",
        "eventplot": "function",
        "fill": "function",
        "fill_between": "function",
        "fill_betweenx": "function",
        "grid": "function",
        "hexbin": "function",
        "hist": "function",
        "stairs": "function",
        "hist2d": "function",
        "hlines": "function",
        "imshow": "function",
        "legend": "function",
        "locator_params": "function",
        "loglog": "function",
        "magnitude_spectrum": "function",
        "margins": "function",
        "minorticks_off": "function",
        "minorticks_on": "function",
        "pcolor": "function",
        "pcolormesh": "function",
        "phase_spectrum": "function",
        "pie": "function",
        "plot": "function",
        "plot_date": "function",
        "psd": "function",
        "quiver": "function",
        "quiverkey": "function",
        "scatter": "function",
        "semilogx": "function",
        "semilogy": "function",
        "specgram": "function",
        "spy": "function",
        "stackplot": "function",
        "stem": "function",
        "step": "function",
        "streamplot": "function",
        "table": "function",
        "text": "function",
        "tick_params": "function",
        "ticklabel_format": "function",
        "tricontour": "function",
        "tricontourf": "function",
        "tripcolor": "function",
        "triplot": "function",
        "violinplot": "function",
        "vlines": "function",
        "xcorr": "function",
        "sci": "function",
        "title": "function",
        "xlabel": "function",
        "ylabel": "function",
        "xscale": "function",
        "yscale": "function",
        "autumn": "function",
        "bone": "function",
        "cool": "function",
        "copper": "function",
        "flag": "function",
        "gray": "function",
        "hot": "function",
        "hsv": "function",
        "jet": "function",
        "pink": "function",
        "prism": "function",
        "spring": "function",
        "summer": "function",
        "winter": "function",
        "magma": "function",
        "inferno": "function",
        "plasma": "function",
        "viridis": "function",
        "nipy_spectral": "function"
    },
    "quiver": {
        "_quiver_doc": "variable",
        "Barbs": "class"
    },
    "rcsetup": {
        "interactive_bk": "variable",
        "non_interactive_bk": "variable",
        "all_backends": "variable",
        "ValidateInStrings": "class",
        "_listify_validator": "function",
        "validate_any": "function",
        "validate_anylist": "variable",
        "_validate_date": "function",
        "validate_bool": "function",
        "validate_bool_maybe_none": "function",
        "_validate_date_converter": "function",
        "_validate_date_int_mult": "function",
        "_validate_tex_preamble": "function",
        "validate_axisbelow": "function",
        "validate_dpi": "function",
        "_make_type_validator": "function",
        "validate_string": "variable",
        "validate_string_or_None": "variable",
        "validate_stringlist": "variable",
        "validate_int": "variable",
        "validate_int_or_None": "variable",
        "validate_float": "variable",
        "validate_float_or_None": "variable",
        "validate_floatlist": "variable",
        "validate_fonttype": "function",
        "_validate_standard_backends": "variable",
        "_auto_backend_sentinel": "variable",
        "validate_backend": "function",
        "validate_toolbar": "variable",
        "_validate_toolbar": "function",
        "_make_nseq_validator": "function",
        "validate_nseq_float": "function",
        "validate_nseq_int": "function",
        "validate_color_or_inherit": "function",
        "validate_color_or_auto": "function",
        "validate_color_for_prop_cycle": "function",
        "validate_color": "function",
        "validate_colorlist": "variable",
        "_validate_cmap": "function",
        "validate_orientation": "variable",
        "validate_aspect": "function",
        "validate_fontsize_None": "function",
        "validate_fontsize": "function",
        "validate_fontsizelist": "variable",
        "validate_fontweight": "function",
        "validate_font_properties": "function",
        "_validate_mathtext_fallback_to_cm": "function",
        "_validate_mathtext_fallback": "function",
        "validate_fontset": "variable",
        "validate_mathtext_default": "variable",
        "_validate_alignment": "variable",
        "validate_whiskers": "function",
        "validate_ps_papersize": "variable",
        "validate_ps_distiller": "function",
        "_validate_named_linestyle": "variable",
        "_validate_linestyle": "function",
        "validate_fillstyle": "variable",
        "validate_fillstylelist": "variable",
        "validate_markevery": "function",
        "validate_markeverylist": "variable",
        "validate_legend_loc": "variable",
        "validate_svg_fonttype": "variable",
        "validate_hinting": "function",
        "_validate_hinting": "variable",
        "validate_pgf_texsystem": "variable",
        "validate_movie_writer": "function",
        "validate_movie_frame_fmt": "variable",
        "validate_axis_locator": "variable",
        "validate_movie_html_fmt": "variable",
        "validate_bbox": "function",
        "validate_sketch": "function",
        "_validate_greaterequal0_lessthan1": "function",
        "_validate_greaterequal0_lessequal1": "function",
        "_range_validators": "variable",
        "validate_grid_axis": "variable",
        "validate_hatch": "function",
        "validate_hatchlist": "variable",
        "validate_dashlist": "variable",
        "_prop_validators": "variable",
        "_prop_aliases": "variable",
        "cycler": "function",
        "validate_cycler": "function",
        "validate_hist_bins": "function",
        "validate_webagg_address": "function",
        "validate_axes_titlelocation": "variable",
        "_ignorecase": "class",
        "_convert_validator_spec": "function",
        "_validators": "variable",
        "_hardcoded_defaults": "variable"
    },
    "sankey": {
        "_log": "variable",
        "__author__": "variable",
        "__credits__": "variable",
        "__license__": "variable",
        "__version__": "variable",
        "RIGHT": "variable",
        "UP": "variable",
        "DOWN": "variable",
        "Sankey": "class"
    },
    "scale": {
        "ScaleBase": "class",
        "LinearScale": "class",
        "FuncTransform": "class",
        "FuncScale": "class",
        "LogTransform": "class",
        "InvertedLogTransform": "class",
        "LogScale": "class",
        "FuncScaleLog": "class",
        "SymmetricalLogTransform": "class",
        "InvertedSymmetricalLogTransform": "class",
        "SymmetricalLogScale": "class",
        "LogitTransform": "class",
        "LogisticTransform": "class",
        "LogitScale": "class",
        "_scale_mapping": "variable",
        "get_scale_names": "function",
        "scale_factory": "function",
        "register_scale": "function",
        "_get_scale_docs": "function"
    },
    "spines": {
        "Spine": "class",
        "SpinesProxy": "class",
        "Spines": "class"
    },
    "stackplot": {
        "__all__": "variable",
        "stackplot": "function"
    },
    "streamplot": {
        "__all__": "variable",
        "streamplot": "function",
        "StreamplotSet": "class",
        "DomainMap": "class",
        "Grid": "class",
        "StreamMask": "class",
        "InvalidIndexError": "class",
        "TerminateTrajectory": "class",
        "get_integrator": "function",
        "OutOfBounds": "class",
        "_integrate_rk12": "function",
        "_euler_step": "function",
        "interpgrid": "function",
        "_gen_starting_points": "function"
    },
    "table": {
        "Cell": "class",
        "CustomCell": "variable",
        "Table": "class",
        "table": "function"
    },
    "texmanager": {
        "_log": "variable",
        "TexManager": "class"
    },
    "text": {
        "_log": "variable",
        "_wrap_text": "function",
        "get_rotation": "function",
        "_get_textbox": "function",
        "Text": "class",
        "OffsetFrom": "class",
        "_AnnotationBase": "class",
        "Annotation": "class"
    },
    "textpath": {
        "_log": "variable",
        "TextToPath": "class",
        "text_to_path": "variable",
        "TextPath": "class"
    },
    "ticker": {
        "_log": "variable",
        "__all__": "variable",
        "_DummyAxis": "class",
        "TickHelper": "class",
        "Formatter": "class",
        "IndexFormatter": "class",
        "NullFormatter": "class",
        "FixedFormatter": "class",
        "FuncFormatter": "class",
        "FormatStrFormatter": "class",
        "StrMethodFormatter": "class",
        "OldScalarFormatter": "class",
        "ScalarFormatter": "class",
        "LogFormatter": "class",
        "LogFormatterExponent": "class",
        "LogFormatterMathtext": "class",
        "LogFormatterSciNotation": "class",
        "LogitFormatter": "class",
        "EngFormatter": "class",
        "PercentFormatter": "class",
        "_if_refresh_overridden_call_and_emit_deprec": "function",
        "Locator": "class",
        "IndexLocator": "class",
        "FixedLocator": "class",
        "NullLocator": "class",
        "LinearLocator": "class",
        "MultipleLocator": "class",
        "scale_range": "function",
        "_Edge_integer": "class",
        "MaxNLocator": "class",
        "is_decade": "function",
        "_decade_less_equal": "function",
        "_decade_greater_equal": "function",
        "_decade_less": "function",
        "_decade_greater": "function",
        "is_close_to_int": "function",
        "LogLocator": "class",
        "SymmetricalLogLocator": "class",
        "LogitLocator": "class",
        "AutoLocator": "class",
        "AutoMinorLocator": "class",
        "OldAutoLocator": "class"
    },
    "tight_bbox": {
        "adjust_bbox": "function",
        "process_figure_for_rasterizing": "function"
    },
    "tight_layout": {
        "auto_adjust_subplotpars": "function",
        "get_renderer": "function",
        "get_subplotspec_list": "function",
        "get_tight_layout_figure": "function"
    },
    "transforms": {
        "__all__": "variable",
        "Spectrogram": "class",
        "InverseSpectrogram": "class",
        "GriffinLim": "class",
        "AmplitudeToDB": "class",
        "MelScale": "class",
        "InverseMelScale": "class",
        "MelSpectrogram": "class",
        "MFCC": "class",
        "LFCC": "class",
        "MuLawEncoding": "class",
        "MuLawDecoding": "class",
        "Resample": "class",
        "ComplexNorm": "class",
        "ComputeDeltas": "class",
        "TimeStretch": "class",
        "Fade": "class",
        "_AxisMasking": "class",
        "FrequencyMasking": "class",
        "TimeMasking": "class",
        "Vol": "class",
        "SlidingWindowCmn": "class",
        "Vad": "class",
        "SpectralCentroid": "class",
        "PitchShift": "class",
        "RNNTLoss": "class",
        "_get_mat_trace": "function",
        "PSD": "class",
        "MVDR": "class"
    },
    "type1font": {
        "_TokenType": "variable",
        "Type1Font": "class"
    },
    "units": {
        "ConversionError": "class",
        "_is_natively_supported": "function",
        "AxisInfo": "class",
        "ConversionInterface": "class",
        "DecimalConverter": "class",
        "Registry": "class",
        "registry": "variable",
        "registry[Decimal]": "variable"
    },
    "widgets": {
        "LockDraw": "class",
        "Widget": "class",
        "AxesWidget": "class",
        "Button": "class",
        "SliderBase": "class",
        "Slider": "class",
        "RangeSlider": "class",
        "CheckButtons": "class",
        "TextBox": "class",
        "RadioButtons": "class",
        "SubplotTool": "class",
        "Cursor": "class",
        "MultiCursor": "class",
        "_SelectorWidget": "class",
        "SpanSelector": "class",
        "ToolHandles": "class",
        "RectangleSelector": "class",
        "EllipseSelector": "class",
        "LassoSelector": "class",
        "PolygonSelector": "class",
        "Lasso": "class"
    },
    "_animation_data": {
        "JS_INCLUDE": "variable",
        "DISPLAY_TEMPLATE": "variable"
    },
    "_cm": {
        "_binary_data": "variable",
        "_autumn_data": "variable",
        "_bone_data": "variable",
        "_cool_data": "variable",
        "_copper_data": "variable",
        "_flag_red": "function",
        "_flag_green": "function",
        "_flag_blue": "function",
        "_flag_data": "variable",
        "_prism_red": "function",
        "_prism_green": "function",
        "_prism_blue": "function",
        "_prism_data": "variable",
        "_ch_helper": "function",
        "cubehelix": "function",
        "_cubehelix_data": "variable",
        "_bwr_data": "variable",
        "_brg_data": "variable",
        "_g0": "function",
        "_g1": "function",
        "_g2": "function",
        "_g3": "function",
        "_g4": "function",
        "_g5": "function",
        "_g6": "function",
        "_g7": "function",
        "_g8": "function",
        "_g9": "function",
        "_g10": "function",
        "_g11": "function",
        "_g12": "function",
        "_g13": "function",
        "_g14": "function",
        "_g15": "function",
        "_g16": "function",
        "_g17": "function",
        "_g18": "function",
        "_g19": "function",
        "_g20": "function",
        "_g21": "function",
        "_g22": "function",
        "_g23": "function",
        "_g24": "function",
        "_g25": "function",
        "_g26": "function",
        "_g27": "function",
        "_g28": "function",
        "_g29": "function",
        "_g30": "function",
        "_g31": "function",
        "_g32": "function",
        "_g33": "function",
        "_g34": "function",
        "_g35": "function",
        "_g36": "function",
        "gfunc": "variable",
        "_gnuplot_data": "variable",
        "_gnuplot2_data": "variable",
        "_ocean_data": "variable",
        "_afmhot_data": "variable",
        "_rainbow_data": "variable",
        "_seismic_data": "variable",
        "_terrain_data": "variable",
        "_gray_data": "variable",
        "_hot_data": "variable",
        "_hsv_data": "variable",
        "_jet_data": "variable",
        "_pink_data": "variable",
        "_spring_data": "variable",
        "_summer_data": "variable",
        "_winter_data": "variable",
        "_nipy_spectral_data": "variable",
        "_Blues_data": "variable",
        "_BrBG_data": "variable",
        "_BuGn_data": "variable",
        "_BuPu_data": "variable",
        "_GnBu_data": "variable",
        "_Greens_data": "variable",
        "_Greys_data": "variable",
        "_Oranges_data": "variable",
        "_OrRd_data": "variable",
        "_PiYG_data": "variable",
        "_PRGn_data": "variable",
        "_PuBu_data": "variable",
        "_PuBuGn_data": "variable",
        "_PuOr_data": "variable",
        "_PuRd_data": "variable",
        "_Purples_data": "variable",
        "_RdBu_data": "variable",
        "_RdGy_data": "variable",
        "_RdPu_data": "variable",
        "_RdYlBu_data": "variable",
        "_RdYlGn_data": "variable",
        "_Reds_data": "variable",
        "_Spectral_data": "variable",
        "_YlGn_data": "variable",
        "_YlGnBu_data": "variable",
        "_YlOrBr_data": "variable",
        "_YlOrRd_data": "variable",
        "_Accent_data": "variable",
        "_Dark2_data": "variable",
        "_Paired_data": "variable",
        "_Pastel1_data": "variable",
        "_Pastel2_data": "variable",
        "_Set1_data": "variable",
        "_Set2_data": "variable",
        "_Set3_data": "variable",
        "_gist_earth_data": "variable",
        "_gist_gray_data": "variable",
        "_gist_heat_red": "function",
        "_gist_heat_green": "function",
        "_gist_heat_blue": "function",
        "_gist_heat_data": "variable",
        "_gist_ncar_data": "variable",
        "_gist_rainbow_data": "variable",
        "_gist_stern_data": "variable",
        "_gist_yarg": "function",
        "_gist_yarg_data": "variable",
        "_coolwarm_data": "variable",
        "_CMRmap_data": "variable",
        "_wistia_data": "variable",
        "_tab10_data": "variable",
        "_tab20_data": "variable",
        "_tab20b_data": "variable",
        "_tab20c_data": "variable",
        "datad": "variable"
    },
    "_cm_listed": {
        "_magma_data": "variable",
        "_inferno_data": "variable",
        "_plasma_data": "variable",
        "_viridis_data": "variable",
        "_cividis_data": "variable",
        "_twilight_data": "variable",
        "_twilight_shifted_data": "variable",
        "_turbo_data": "variable",
        "cmaps": "variable"
    },
    "_color_data": {
        "BASE_COLORS": "variable",
        "TABLEAU_COLORS": "variable",
        "XKCD_COLORS": "variable",
        "CSS4_COLORS": "variable"
    },
    "_constrained_layout": {
        "_log": "variable",
        "do_constrained_layout": "function",
        "_check_no_collapsed_axes": "function",
        "_get_margin_from_padding": "function",
        "_make_layout_margins": "function",
        "_make_margin_suptitles": "function",
        "_match_submerged_margins": "function",
        "_get_cb_parent_spans": "function",
        "_get_pos_and_bbox": "function",
        "_reposition_axes": "function",
        "_reposition_colorbar": "function",
        "_reset_margins": "function",
        "_colorbar_get_pad": "function"
    },
    "_enums": {
        "_AutoStringNameEnum": "class",
        "_deprecate_case_insensitive_join_cap": "function",
        "JoinStyle": "class",
        "JoinStyle.input_description": "variable",
        "CapStyle": "class",
        "CapStyle.input_description": "variable"
    },
    "_internal_utils": {
        "graphviz_dump_transform": "function"
    },
    "_layoutgrid": {
        "_log": "variable",
        "LayoutGrid": "class",
        "_layoutboxobjnum": "variable",
        "seq_id": "function",
        "print_children": "function",
        "plot_children": "function"
    },
    "_mathtext": {
        "_log": "variable",
        "get_unicode_index": "function",
        "Fonts": "class",
        "TruetypeFonts": "class",
        "BakomaFonts": "class",
        "UnicodeFonts": "class",
        "DejaVuFonts": "class",
        "DejaVuSerifFonts": "class",
        "DejaVuSansFonts": "class",
        "StixFonts": "class",
        "StixSansFonts": "class",
        "StandardPsFonts": "class",
        "NUM_SIZE_LEVELS": "variable",
        "FontConstantsBase": "class",
        "ComputerModernFontConstants": "class",
        "STIXFontConstants": "class",
        "STIXSansFontConstants": "class",
        "DejaVuSerifFontConstants": "class",
        "DejaVuSansFontConstants": "class",
        "_font_constant_mapping": "variable",
        "_get_font_constant_set": "function",
        "Node": "class",
        "Box": "class",
        "Vbox": "class",
        "Hbox": "class",
        "Char": "class",
        "Accent": "class",
        "List": "class",
        "Hlist": "class",
        "Vlist": "class",
        "Rule": "class",
        "Hrule": "class",
        "Vrule": "class",
        "_GlueSpec": "variable",
        "_GlueSpec._named": "variable",
        "Glue": "class",
        "Fil": "class",
        "Fill": "class",
        "Filll": "class",
        "NegFil": "class",
        "NegFill": "class",
        "NegFilll": "class",
        "SsGlue": "class",
        "HCentered": "class",
        "VCentered": "class",
        "Kern": "class",
        "SubSuperCluster": "class",
        "AutoHeightChar": "class",
        "AutoWidthChar": "class",
        "Ship": "class",
        "ship": "variable",
        "Error": "function",
        "Parser": "class"
    },
    "_mathtext_data": {
        "latex_to_bakoma": "variable",
        "latex_to_cmex": "variable",
        "latex_to_standard": "variable",
        "type12uni": "variable",
        "uni2type1": "variable",
        "tex2uni": "variable",
        "stix_virtual_fonts": "variable"
    },
    "_pylab_helpers": {
        "Gcf": "class"
    },
    "_text_layout": {
        "LayoutItem": "variable",
        "layout": "function"
    },
    "_version": {
        "version_json": "variable"
    },
    "ao": {
        "nn": {
            "sparse": {
                "quantized": {
                    "dynamic": {
                        "linear": {
                            "Linear": "class"
                        },
                        "": {
                            "__all__": "variable"
                        }
                    },
                    "linear": {
                        "LinearPackedParams": "class",
                        "Linear": "class"
                    },
                    "utils": {
                        "is_valid_linear_block_sparse_pattern": "function",
                        "LinearBlockSparsePattern": "class"
                    },
                    "": {
                        "__all__": "variable"
                    }
                }
            }
        },
        "ns": {
            "fx": {
                "graph_matcher": {
                    "toq": "variable",
                    "_get_output_nodes": "function",
                    "_NSGraphMatchableSubgraphsIterator": "class",
                    "GraphMatchingException": "class",
                    "SubgraphTypeRelationship": "class",
                    "_get_subgraph_relationship_type": "function",
                    "_get_name_for_subgraph": "function",
                    "_get_node_target_type": "function",
                    "get_matching_subgraph_pairs": "function"
                },
                "graph_passes": {
                    "_maybe_get_fqn": "function",
                    "_insert_logger_after_node": "function",
                    "add_loggers_to_model": "function",
                    "_insert_quantize_per_tensor_node": "function",
                    "_insert_dtype_cast_after_node": "function",
                    "_copy_node_from_a_to_c": "function",
                    "_insert_copy_of_subgraph_a_after_input_node_c": "function",
                    "_insert_copy_of_node_a_after_input_node_c": "function",
                    "create_a_shadows_b": "function"
                },
                "mappings": {
                    "toq": "variable",
                    "get_base_name_to_sets_of_related_ops": "function",
                    "get_base_name_for_op": "function",
                    "add_op_to_sets_of_related_ops": "function",
                    "get_node_type_to_io_type_map": "function",
                    "get_unmatchable_types_map": "function"
                },
                "ns_types": {
                    "NSSingleResultValuesType": "class",
                    "NSSubgraph": "variable",
                    "NSSingleResultType": "variable",
                    "NSResultsType": "variable",
                    "NSNodeTargetType": "variable"
                },
                "pattern_utils": {
                    "toq": "variable",
                    "get_type_a_related_to_b": "function",
                    "NSFusionElType": "variable",
                    "NSFusionType": "variable",
                    "get_reversed_fusions": "function",
                    "end_node_matches_reversed_fusion": "function"
                },
                "utils": {
                    "toq": "variable",
                    "NodeInputOrOutputType": "class",
                    "get_node_first_input_and_output_type": "function",
                    "get_node_input_qparams": "function",
                    "return_first_non_observer_node": "function",
                    "get_number_of_non_param_args": "function",
                    "get_arg_indices_of_inputs_to_log": "function",
                    "get_target_type_str": "function",
                    "rekey_logger_info_on_node_name_of_model": "function",
                    "maybe_add_missing_fqns": "function",
                    "maybe_dequantize_first_two_tensor_args_and_handle_tuples": "function",
                    "compute_sqnr": "function",
                    "compute_normalized_l2_error": "function",
                    "compute_cosine_similarity": "function"
                },
                "weight_utils": {
                    "toq": "variable",
                    "mod_weight_detach": "function",
                    "mod_0_weight_detach": "function",
                    "mod_weight_bias_0": "function",
                    "get_lstm_weight": "function",
                    "get_qlstm_weight": "function",
                    "get_conv_mod_weight": "function",
                    "get_linear_mod_weight": "function",
                    "get_lstm_mod_weights": "function",
                    "get_conv_fun_weight": "function",
                    "get_qconv_fun_weight": "function",
                    "get_linear_fun_weight": "function",
                    "get_qlinear_fun_weight": "function",
                    "get_op_to_type_to_weight_extraction_fn": "function",
                    "extract_weight_from_node": "function"
                }
            },
            "_numeric_suite": {
                "NON_LEAF_MODULE_TO_ADD_OBSERVER_ALLOW_LIST": "variable",
                "_find_match": "function",
                "compare_weights": "function",
                "_get_logger_dict_helper": "function",
                "get_logger_dict": "function",
                "Logger": "class",
                "ShadowLogger": "class",
                "OutputLogger": "class",
                "_convert_tuple_to_list": "function",
                "_dequantize_tensor_list": "function",
                "Shadow": "class",
                "prepare_model_with_stubs": "function",
                "_is_identical_module_type": "function",
                "compare_model_stub": "function",
                "get_matching_activations": "function",
                "prepare_model_outputs": "function",
                "compare_model_outputs": "function"
            },
            "_numeric_suite_fx": {
                "RNNReturnType": "variable",
                "OutputLogger": "class",
                "NSTracer": "class",
                "_extract_weights_one_model": "function",
                "_extract_weights_impl": "function",
                "extract_weights": "function",
                "_add_loggers_one_model": "function",
                "_add_loggers_impl": "function",
                "add_loggers": "function",
                "_extract_logger_info_one_model": "function",
                "extract_logger_info": "function",
                "_add_shadow_loggers_impl": "function",
                "add_shadow_loggers": "function",
                "extract_shadow_logger_info": "function",
                "extend_logger_results_with_comparison": "function"
            }
        },
        "quantization": {
            "fake_quantize": {
                "_is_per_channel": "function",
                "_is_per_tensor": "function",
                "_is_symmetric_quant": "function",
                "FakeQuantizeBase": "class",
                "FakeQuantize": "class",
                "FixedQParamsFakeQuantize": "class",
                "FusedMovingAvgObsFakeQuantize": "class",
                "default_fake_quant": "variable",
                "default_weight_fake_quant": "variable",
                "default_symmetric_fixed_qparams_fake_quant": "variable",
                "default_affine_fixed_qparams_fake_quant": "variable",
                "default_per_channel_weight_fake_quant": "variable",
                "default_histogram_fake_quant": "variable",
                "default_fused_act_fake_quant": "variable",
                "default_fused_wt_fake_quant": "variable",
                "default_fused_per_channel_wt_fake_quant": "variable",
                "_is_fake_quant_script_module": "function",
                "disable_fake_quant": "function",
                "enable_fake_quant": "function",
                "disable_observer": "function",
                "enable_observer": "function"
            },
            "fuser_method_mappings": {
                "fuse_conv_bn": "function",
                "fuse_conv_bn_relu": "function",
                "fuse_linear_bn": "function",
                "get_fuser_method": "function"
            },
            "fuse_modules": {
                "_get_module": "function",
                "_set_module": "function",
                "fuse_known_modules": "function",
                "_fuse_modules": "function",
                "fuse_modules": "function"
            },
            "observer": {
                "_PartialWrapper": "class",
                "_with_args": "function",
                "_with_callable_args": "function",
                "ObserverBase": "class",
                "_ObserverBase": "class",
                "MinMaxObserver": "class",
                "MovingAverageMinMaxObserver": "class",
                "PerChannelMinMaxObserver": "class",
                "MovingAveragePerChannelMinMaxObserver": "class",
                "HistogramObserver": "class",
                "PlaceholderObserver": "class",
                "RecordingObserver": "class",
                "NoopObserver": "class",
                "_is_observer_script_module": "function",
                "_is_activation_post_process": "function",
                "_is_per_channel_script_obs_instance": "function",
                "get_observer_state_dict": "function",
                "load_observer_state_dict": "function",
                "default_observer": "variable",
                "default_placeholder_observer": "variable",
                "default_debug_observer": "variable",
                "default_weight_observer": "variable",
                "default_histogram_observer": "variable",
                "default_per_channel_weight_observer": "variable",
                "default_dynamic_quant_observer": "variable",
                "default_float_qparams_observer": "variable"
            },
            "qconfig": {
                "QConfig": "class",
                "default_qconfig": "variable",
                "default_debug_qconfig": "variable",
                "default_per_channel_qconfig": "variable",
                "QConfigDynamic": "class",
                "default_dynamic_qconfig": "variable",
                "float16_dynamic_qconfig": "variable",
                "float16_static_qconfig": "variable",
                "per_channel_dynamic_qconfig": "variable",
                "float_qparams_weight_only_qconfig": "variable",
                "default_qat_qconfig": "variable",
                "default_weight_only_qconfig": "variable",
                "default_activation_only_qconfig": "variable",
                "default_qat_qconfig_v2": "variable",
                "get_default_qconfig": "function",
                "get_default_qat_qconfig": "function",
                "assert_valid_qconfig": "function",
                "QConfigAny": "variable",
                "add_module_to_qconfig_obs_ctr": "function",
                "qconfig_equals": "function"
            },
            "quantization_mappings": {
                "no_observer_set": "function",
                "get_default_static_quant_module_mappings": "function",
                "get_static_quant_module_class": "function",
                "get_dynamic_quant_module_class": "function",
                "get_default_qat_module_mappings": "function",
                "get_default_dynamic_quant_module_mappings": "function",
                "get_default_qconfig_propagation_list": "function",
                "get_default_compare_output_module_list": "function",
                "get_default_float_to_quantized_operator_mappings": "function",
                "get_quantized_operator": "function",
                "_get_special_act_post_process": "function",
                "_has_special_act_post_process": "function"
            },
            "quantize": {
                "is_activation_post_process": "function",
                "_propagate_qconfig_helper": "function",
                "propagate_qconfig_": "function",
                "_observer_forward_hook": "function",
                "register_activation_post_process_hook": "function",
                "add_observer_": "function",
                "get_unique_devices_": "function",
                "add_quant_dequant": "function",
                "prepare": "function",
                "_remove_activation_post_process": "function",
                "_remove_qconfig": "function",
                "quantize": "function",
                "quantize_dynamic": "function",
                "prepare_qat": "function",
                "quantize_qat": "function",
                "convert": "function",
                "_convert": "function",
                "swap_module": "function",
                "get_observer_dict": "function"
            },
            "quantize_jit": {
                "_check_is_script_module": "function",
                "_check_forward_method": "function",
                "script_qconfig": "function",
                "script_qconfig_dict": "function",
                "fuse_conv_bn_jit": "function",
                "_prepare_jit": "function",
                "prepare_jit": "function",
                "prepare_dynamic_jit": "function",
                "_convert_jit": "function",
                "convert_jit": "function",
                "convert_dynamic_jit": "function",
                "_quantize_jit": "function",
                "quantize_jit": "function",
                "quantize_dynamic_jit": "function"
            },
            "quant_type": {
                "QuantType": "class",
                "quant_type_to_str": "function"
            },
            "stubs": {
                "QuantStub": "class",
                "DeQuantStub": "class",
                "QuantWrapper": "class"
            },
            "utils": {
                "get_combined_dict": "function",
                "is_per_tensor": "function",
                "is_per_channel": "function",
                "getattr_from_fqn": "function",
                "get_qparam_dict": "function",
                "get_swapped_custom_module_class": "function",
                "activation_dtype": "function",
                "weight_dtype": "function",
                "activation_is_statically_quantized": "function",
                "activation_is_int8_quantized": "function",
                "weight_is_quantized": "function",
                "weight_is_statically_quantized": "function",
                "get_qconfig_dtypes": "function",
                "get_quant_type": "function",
                "check_min_max_valid": "function",
                "calculate_qmin_qmax": "function"
            },
            "_correct_bias": {
                "_supported_modules": "variable",
                "_supported_modules_quantized": "variable",
                "get_module": "function",
                "parent_child_names": "function",
                "get_param": "function",
                "MeanShadowLogger": "class",
                "bias_correction": "function"
            },
            "_equalize": {
                "_supported_types": "variable",
                "_supported_intrinsic_types": "variable",
                "_all_supported_types": "variable",
                "set_module_weight": "function",
                "set_module_bias": "function",
                "get_module_weight": "function",
                "get_module_bias": "function",
                "max_over_ndim": "function",
                "min_over_ndim": "function",
                "channel_range": "function",
                "cross_layer_equalization": "function",
                "equalize": "function",
                "converged": "function"
            },
            "_learnable_fake_quantize": {
                "_LearnableFakeQuantize": "class"
            }
        },
        "sparsity": {
            "experimental": {
                "pruner": {
                    "base_pruner": {
                        "SUPPORTED_MODULES": "variable",
                        "NEEDS_ZEROS": "variable",
                        "BasePruner": "class"
                    },
                    "parametrization": {
                        "PruningParametrization": "class",
                        "ZeroesParametrization": "class",
                        "ActivationReconstruction": "class",
                        "BiasHook": "class"
                    }
                }
            },
            "scheduler": {
                "base_scheduler": {
                    "BaseScheduler": "class"
                },
                "lambda_scheduler": {
                    "LambdaSL": "class"
                }
            },
            "sparsifier": {
                "base_sparsifier": {
                    "SUPPORTED_MODULES": "variable",
                    "BaseSparsifier": "class"
                },
                "utils": {
                    "module_to_fqn": "function",
                    "fqn_to_module": "function",
                    "FakeSparsity": "class"
                },
                "weight_norm_sparsifier": {
                    "_flat_idx_to_2d": "function",
                    "WeightNormSparsifier": "class"
                }
            },
            "_mappings": {
                "get_static_sparse_quantized_mapping": "function",
                "get_dynamic_sparse_quantized_mapping": "function"
            }
        }
    },
    "autograd": {
        "_functions": {
            "tensor": {
                "Type": "class",
                "Resize": "class"
            },
            "utils": {
                "maybe_view": "function",
                "maybe_unexpand": "function",
                "check_onnx_broadcast": "function"
            }
        },
        "anomaly_mode": {
            "detect_anomaly": "class",
            "set_detect_anomaly": "class"
        },
        "forward_ad": {
            "_current_level": "variable",
            "enter_dual_level": "function",
            "exit_dual_level": "function",
            "make_dual": "function",
            "unpack_dual": "function",
            "dual_level": "class"
        },
        "function": {
            "FunctionCtx": "class",
            "_ContextMethodMixin": "variable",
            "_HookMixin": "class",
            "BackwardCFunction": "class",
            "FunctionMeta": "class",
            "Function": "class",
            "once_differentiable": "function",
            "traceable": "function",
            "InplaceFunction": "class",
            "_nested_map": "function",
            "_jit_unwrap_structured": "function",
            "_iter_filter": "function",
            "_unflatten": "function",
            "_iter_jit_values": "variable",
            "_iter_tensors": "variable",
            "_iter_tensors_permissive": "variable",
            "_iter_None_tensors": "variable",
            "_map_tensor_data": "variable",
            "NestedIOFunction": "class"
        },
        "functional": {
            "_as_tuple": "function",
            "_tuple_postprocess": "function",
            "_grad_preprocess": "function",
            "_grad_postprocess": "function",
            "_validate_v": "function",
            "_check_requires_grad": "function",
            "_autograd_grad": "function",
            "_fill_in_zeros": "function",
            "vjp": "function",
            "jvp": "function",
            "_construct_standard_basis_for": "function",
            "jacobian": "function",
            "hessian": "function",
            "vhp": "function",
            "hvp": "function"
        },
        "gradcheck": {
            "GradcheckError": "class",
            "_is_float_or_complex_tensor": "function",
            "_allocate_jacobians_with_inputs": "function",
            "_allocate_jacobians_with_outputs": "function",
            "_iter_tensors": "function",
            "_iter_tensor": "function",
            "_get_numerical_jacobian": "function",
            "get_numerical_jacobian": "function",
            "_compute_numerical_gradient": "function",
            "_compute_numerical_jvps_wrt_specific_input": "function",
            "_combine_jacobian_cols": "function",
            "_prepare_input": "function",
            "check_outputs_same_dtype_and_shape": "function",
            "get_numerical_jacobian_wrt_specific_input": "function",
            "_get_analytical_jacobian_forward_ad": "function",
            "_get_input_to_perturb": "function",
            "_with_prepare_inputs": "function",
            "_get_numerical_jvp_fn": "function",
            "_reshape_tensor_or_tuple": "function",
            "_mul_tensor_or_tuple": "function",
            "_get_numerical_jvp_wrt_specific_input": "function",
            "_get_numerical_vJu": "function",
            "_check_jacobians_equal": "function",
            "_stack_and_check_tensors": "function",
            "FAILED_NONDET_MSG": "variable",
            "_get_failed_batched_grad_test_msg": "function",
            "_run_slow_mode_and_get_error": "function",
            "_to_flat_dense_if_sparse": "function",
            "_make_vectors": "function",
            "_check_analytical_numerical_equal": "function",
            "_fast_gradcheck": "function",
            "gradcheck": "function",
            "_gradcheck_helper": "function",
            "gradgradcheck": "function"
        },
        "grad_mode": {
            "__all__": "variable",
            "FuncType": "variable",
            "F": "variable",
            "_DecoratorContextManager": "class",
            "no_grad": "class",
            "enable_grad": "class",
            "set_grad_enabled": "class",
            "inference_mode": "class"
        },
        "graph": {
            "saved_tensors_hooks": "class",
            "save_on_cpu": "class"
        },
        "profiler": {
            "profile": "class",
            "record_function": "class",
            "emit_nvtx": "class",
            "load_nvprof": "function",
            "EnforceUnique": "class",
            "parse_nvprof_trace": "function"
        },
        "profiler_legacy": {
            "profile": "class",
            "_parse_legacy_records": "function"
        },
        "profiler_util": {
            "EventList": "class",
            "_format_time": "function",
            "_format_time_share": "function",
            "_format_memory": "function",
            "_attr_formatter": "function",
            "FormattedTimesMixin": "class",
            "Interval": "class",
            "Kernel": "variable",
            "FunctionEvent": "class",
            "FunctionEventAvg": "class",
            "StringTable": "class",
            "MemRecordsAcc": "class",
            "_filter_stack_entry": "function",
            "MEMORY_EVENT_NAME": "variable",
            "_filter_name": "function",
            "_rewrite_name": "function",
            "_build_table": "function"
        },
        "variable": {
            "VariableMeta": "class",
            "Variable": "class",
            "Variable._execution_engine": "variable"
        },
        "": {
            "__all__": "variable",
            "_OptionalTensor": "variable",
            "_make_grads": "function",
            "_tensor_or_tensors_to_tuple": "function",
            "backward": "function",
            "grad": "function",
            "_is_checkpoint_valid": "function",
            "variable": "function"
        }
    },
    "contrib": {
        "_tensorboard_vis": {
            "dump_tensorboard_summary": "function",
            "visualize": "function",
            "visualize_graph_executor": "function",
            "visualize_rec": "function"
        }
    },
    "cpu": {
        "amp": {
            "autocast_mode": {
                "autocast": "class"
            }
        }
    },
    "cuda": {
        "amp": {
            "autocast_mode": {
                "autocast": "class",
                "_cast": "function",
                "custom_fwd": "function",
                "custom_bwd": "function"
            },
            "common": {
                "amp_definitely_not_available": "function"
            },
            "grad_scaler": {
                "_MultiDeviceReplicator": "class",
                "OptState": "class",
                "_refresh_per_optimizer_state": "function",
                "GradScaler": "class"
            }
        },
        "comm": {
            "__all__": "variable"
        },
        "graphs": {
            "graph_pool_handle": "function",
            "CUDAGraph": "class",
            "graph": "class",
            "make_graphed_callables": "function"
        },
        "memory": {
            "_host_allocator": "function",
            "_free_mutex": "function",
            "caching_allocator_alloc": "function",
            "caching_allocator_delete": "function",
            "set_per_process_memory_fraction": "function",
            "empty_cache": "function",
            "memory_stats": "function",
            "memory_stats_as_nested_dict": "function",
            "reset_accumulated_memory_stats": "function",
            "reset_peak_memory_stats": "function",
            "reset_max_memory_allocated": "function",
            "reset_max_memory_cached": "function",
            "memory_allocated": "function",
            "max_memory_allocated": "function",
            "memory_reserved": "function",
            "max_memory_reserved": "function",
            "memory_cached": "function",
            "max_memory_cached": "function",
            "memory_snapshot": "function",
            "memory_summary": "function",
            "list_gpu_processes": "function",
            "mem_get_info": "function"
        },
        "nccl": {
            "__all__": "variable",
            "SUM": "variable",
            "is_available": "function",
            "version": "function",
            "unique_id": "function",
            "init_rank": "function",
            "_check_sequence_type": "function",
            "all_reduce": "function",
            "reduce": "function",
            "broadcast": "function",
            "all_gather": "function",
            "reduce_scatter": "function"
        },
        "nvtx": {
            "__all__": "variable",
            "range_push": "function",
            "range_pop": "function",
            "mark": "function",
            "range": "function"
        },
        "profiler": {
            "DEFAULT_FLAGS": "variable",
            "init": "function",
            "start": "function",
            "stop": "function",
            "profile": "function"
        },
        "random": {
            "__all__": "variable",
            "get_rng_state": "function",
            "get_rng_state_all": "function",
            "set_rng_state": "function",
            "set_rng_state_all": "function",
            "manual_seed": "function",
            "manual_seed_all": "function",
            "seed": "function",
            "seed_all": "function",
            "initial_seed": "function"
        },
        "streams": {
            "Stream": "class",
            "ExternalStream": "class",
            "Event": "class"
        },
        "_utils": {
            "_get_device_index": "function",
            "_dummy_type": "function"
        },
        "": {
            "_initialized": "variable",
            "_tls": "variable",
            "_initialization_lock": "variable",
            "_queued_calls": "variable",
            "_is_in_bad_fork": "variable",
            "_device_t": "variable",
            "_LazySeedTracker": "class",
            "_lazy_seed_tracker": "variable",
            "is_available": "function",
            "is_bf16_supported": "function",
            "_sleep": "function",
            "_check_capability": "function",
            "_check_cubins": "function"
        }
    },
    "distributed": {
        "algorithms": {
            "ddp_comm_hooks": {
                "ddp_zero_hook": {
                    "_NO_PARAM_UPDATE": "variable",
                    "_perform_local_step": "function",
                    "_broadcast_bucket": "function",
                    "_save_ddp_bucket_info": "function",
                    "_hook_with_zero_step_setup": "function",
                    "hook_with_zero_step": "function",
                    "hook_with_zero_step_interleaved": "function"
                },
                "debugging_hooks": {
                    "noop_hook": "function"
                },
                "default_hooks": {
                    "_allreduce_fut": "function",
                    "allreduce_hook": "function",
                    "fp16_compress_hook": "function",
                    "bf16_compress_hook": "function",
                    "_OptimizerHookState": "class",
                    "_hook_then_optimizer": "function",
                    "fp16_compress_wrapper": "function",
                    "bf16_compress_wrapper": "function"
                },
                "post_localSGD_hook": {
                    "PostLocalSGDState": "class",
                    "post_localSGD_hook": "function"
                },
                "powerSGD_hook": {
                    "_orthogonalize": "function",
                    "_should_compress": "function",
                    "_report_compression_stats": "function",
                    "PowerSGDState": "class",
                    "powerSGD_hook": "function",
                    "batched_powerSGD_hook": "function"
                },
                "quantization_hooks": {
                    "_quantize_per_tensor_cuda": "function",
                    "_dequantize_per_tensor_cuda": "function",
                    "_quantize_per_channel_cuda": "function",
                    "_dequantize_per_channel_cuda": "function",
                    "_get_allgather_out_list": "function",
                    "quantization_pertensor_hook": "function",
                    "quantization_perchannel_hook": "function"
                },
                "": {
                    "_ddp_comm_hook_wrapper": "function",
                    "_powerSGD_comm_hook_wrapper": "function",
                    "DDPCommHookType": "class",
                    "register_ddp_comm_hook": "function"
                }
            },
            "model_averaging": {
                "averagers": {
                    "ModelAverager": "class",
                    "PeriodicModelAverager": "class"
                },
                "utils": {
                    "average_parameters": "function"
                }
            },
            "join": {
                "JoinHook": "class",
                "Joinable": "class",
                "_JoinConfig": "class",
                "Join": "class"
            }
        },
        "autograd": {
            "": {
                "is_available": "function",
                "context": "class"
            }
        },
        "elastic": {
            "agent": {
                "server": {
                    "api": {
                        "_TERMINAL_STATE_SYNC_ID": "variable",
                        "DEFAULT_ROLE": "variable",
                        "log": "variable",
                        "WorkerSpec": "class",
                        "Worker": "class",
                        "WorkerState": "class",
                        "WorkerGroup": "class",
                        "_RoleInstanceInfo": "class",
                        "RunResult": "class",
                        "_get_socket_with_port": "function",
                        "_get_fq_hostname": "function",
                        "ElasticAgent": "class",
                        "SimpleElasticAgent": "class"
                    },
                    "local_elastic_agent": {
                        "log": "variable",
                        "LocalElasticAgent": "class"
                    }
                }
            },
            "events": {
                "api": {
                    "EventMetadataValue": "variable",
                    "EventSource": "class",
                    "Event": "class",
                    "NodeState": "class",
                    "RdzvEvent": "class"
                },
                "handlers": {
                    "get_logging_handler": "function"
                },
                "": {
                    "_get_or_create_logger": "function",
                    "record": "function",
                    "record_rdzv_event": "function",
                    "construct_and_record_rdzv_event": "function"
                }
            },
            "metrics": {
                "api": {
                    "MetricData": "variable",
                    "MetricsConfig": "class",
                    "MetricHandler": "class",
                    "ConsoleMetricHandler": "class",
                    "NullMetricHandler": "class",
                    "MetricStream": "class",
                    "_metrics_map": "variable",
                    "_default_metrics_handler": "variable",
                    "configure": "function",
                    "getStream": "function",
                    "_get_metric_name": "function",
                    "prof": "function",
                    "profile": "function",
                    "put_metric": "function",
                    "publish_metric": "function",
                    "get_elapsed_time_ms": "function"
                },
                "": {
                    "initialize_metrics": "function"
                }
            },
            "multiprocessing": {
                "errors": {
                    "error_handler": {
                        "log": "variable",
                        "_write_error": "function",
                        "ErrorHandler": "class"
                    },
                    "handlers": {
                        "get_error_handler": "function"
                    },
                    "": {
                        "log": "variable",
                        "JSON": "variable",
                        "_EMPTY_ERROR_DATA": "variable",
                        "_NOT_AVAILABLE": "variable",
                        "T": "variable",
                        "ProcessFailure": "class",
                        "GlobalRank": "variable",
                        "_FAILURE_FORMAT_TEMPLATE": "variable",
                        "_MSG_FORMAT_TEMPLATE": "variable",
                        "ChildFailedError": "class",
                        "record": "function"
                    }
                },
                "api": {
                    "IS_WINDOWS": "variable",
                    "IS_MACOS": "variable",
                    "log": "variable",
                    "SignalException": "class",
                    "_terminate_process_handler": "function",
                    "_get_kill_signal": "function",
                    "_get_default_signal": "function",
                    "_validate_full_rank": "function",
                    "_MAPPING_REGEX": "variable",
                    "_VALUE_REGEX": "variable",
                    "Std": "class",
                    "to_map": "function",
                    "RunProcsResult": "class",
                    "PContext": "class",
                    "_nullcontext": "class",
                    "get_std_cm": "function",
                    "_wrap": "function",
                    "MultiprocessContext": "class",
                    "SubprocessHandler": "class",
                    "SubprocessContext": "class"
                },
                "redirects": {
                    "IS_WINDOWS": "variable",
                    "IS_MACOS": "variable",
                    "logger": "variable",
                    "get_libc": "function",
                    "libc": "variable",
                    "_c_std": "function",
                    "_python_std": "function",
                    "_VALID_STD": "variable",
                    "redirect": "function",
                    "redirect_stdout": "variable",
                    "redirect_stderr": "variable"
                },
                "tail_log": {
                    "log": "variable",
                    "tail_logfile": "function",
                    "TailLog": "class"
                },
                "": {
                    "log": "variable",
                    "start_processes": "function"
                }
            },
            "rendezvous": {
                "api": {
                    "RendezvousError": "class",
                    "RendezvousClosedError": "class",
                    "RendezvousTimeoutError": "class",
                    "RendezvousConnectionError": "class",
                    "RendezvousStateError": "class",
                    "RendezvousHandler": "class",
                    "RendezvousParameters": "class",
                    "RendezvousHandlerCreator": "variable",
                    "RendezvousHandlerRegistry": "class",
                    "rendezvous_handler_registry": "variable"
                },
                "c10d_rendezvous_backend": {
                    "log": "variable",
                    "C10dRendezvousBackend": "class",
                    "_create_tcp_store": "function",
                    "_create_file_store": "function",
                    "create_backend": "function"
                },
                "dynamic_rendezvous": {
                    "log": "variable",
                    "get_method_name": "function",
                    "Token": "variable"
                },
                "etcd_rendezvous": {
                    "_log_fmt": "variable",
                    "_log_handler": "variable",
                    "log": "variable",
                    "log.propagate": "variable",
                    "EtcdRendezvousRetryableFailure": "class",
                    "EtcdRendezvousRetryImmediately": "class",
                    "CONST_ETCD_SETUP_TTL": "variable",
                    "CONST_ETCD_FROZEN_TTL": "variable",
                    "CONST_ETCD_JOINABLE_EPHEMERAL_TTL": "variable",
                    "CONST_WORKER_KEEPALIVE_TTL": "variable",
                    "CONST_RUNID_SUBROOT_TTL": "variable",
                    "EtcdRendezvousHandler": "class",
                    "EtcdRendezvous": "class",
                    "_create_etcd_client": "function",
                    "create_rdzv_handler": "function"
                },
                "etcd_rendezvous_backend": {
                    "EtcdRendezvousBackend": "class",
                    "_create_etcd_client": "function",
                    "create_backend": "function"
                },
                "etcd_server": {
                    "log": "variable",
                    "find_free_port": "function",
                    "stop_etcd": "function",
                    "EtcdServer": "class"
                },
                "etcd_store": {
                    "cas_delay": "function",
                    "EtcdStore": "class"
                },
                "registry": {
                    "_create_static_handler": "function",
                    "_create_etcd_handler": "function",
                    "_create_etcd_v2_handler": "function",
                    "_create_c10d_handler": "function",
                    "_register_default_handlers": "function",
                    "get_rendezvous_handler": "function"
                },
                "static_tcp_rendezvous": {
                    "log": "variable",
                    "_default_timeout_seconds": "variable",
                    "StaticTCPRendezvous": "class",
                    "create_rdzv_handler": "function"
                },
                "utils": {
                    "_parse_rendezvous_config": "function",
                    "_try_parse_port": "function",
                    "parse_rendezvous_endpoint": "function",
                    "_matches_machine_hostname": "function",
                    "_delay": "function",
                    "_PeriodicTimer": "class"
                },
                "": {
                    "__all__": "variable"
                }
            },
            "timer": {
                "api": {
                    "TimerRequest": "class",
                    "TimerClient": "class",
                    "RequestQueue": "class",
                    "TimerServer": "class",
                    "_timer_client": "variable",
                    "configure": "function",
                    "expires": "function"
                },
                "local_timer": {
                    "LocalTimerClient": "class",
                    "MultiprocessingRequestQueue": "class",
                    "LocalTimerServer": "class"
                }
            },
            "utils": {
                "data": {
                    "cycling_iterator": {
                        "CyclingIterator": "class"
                    },
                    "elastic_distributed_sampler": {
                        "ElasticDistributedSampler": "class"
                    }
                },
                "api": {
                    "get_env_variable_or_raise": "function",
                    "get_socket_with_port": "function",
                    "macros": "class"
                },
                "distributed": {
                    "log": "variable",
                    "_ADDRESS_IN_USE": "variable",
                    "_CONNECT_TIMEOUT": "variable",
                    "_SOCKET_TIMEOUT": "variable",
                    "_MEMBER_CHECKIN": "variable",
                    "_LAST_MEMBER_CHECKIN": "variable",
                    "create_c10d_store": "function",
                    "_check_full_rank": "function",
                    "get_free_port": "function",
                    "get_socket_with_port": "function"
                },
                "logging": {
                    "get_logger": "function",
                    "_setup_logger": "function",
                    "_derive_module_name": "function"
                },
                "log_level": {
                    "get_log_level": "function"
                },
                "store": {
                    "get_all": "function",
                    "synchronize": "function",
                    "barrier": "function"
                }
            }
        },
        "launcher": {
            "api": {
                "logger": "variable",
                "LaunchConfig": "class",
                "elastic_launch": "class",
                "_construct_event": "function",
                "_get_entrypoint_name": "function",
                "_get_addr_and_port": "function",
                "launch_agent": "function"
            }
        },
        "nn": {
            "api": {
                "remote_module": {
                    "_grad_t": "variable",
                    "T": "variable",
                    "_NON_SCRIPTABLE_REMOTE_MODULE_MODULE": "variable",
                    "_REMOTE_MODULE_PICKLED_ATTRIBUTES": "variable",
                    "_SerializedRemoteModule": "variable",
                    "_REMOTE_MODULE_ATTRIBUTES_IGNORE_FOR_PICKLING": "variable",
                    "_instantiate_template": "function",
                    "_create_module": "function",
                    "_create_module_with_interface": "function",
                    "_param_rrefs": "function",
                    "_raise_not_supported": "function",
                    "_RemoteModule": "class",
                    "RemoteModule": "class",
                    "_remote_module_receiver": "function",
                    "_remote_module_reducer": "function",
                    "_recursive_script_module_receiver": "function",
                    "_recursive_script_module_reducer": "function"
                }
            },
            "jit": {
                "templates": {
                    "remote_module_template": {
                        "get_remote_module_template": "function",
                        "_TEMPLATE_PREFIX": "variable",
                        "forward_async": "function",
                        "forward": "function",
                        "_generated_methods": "variable",
                        "_REMOTE_FORWARD_TEMPLATE": "variable",
                        "_remote_forward": "function"
                    }
                },
                "instantiator": {
                    "logger": "variable",
                    "_FILE_PREFIX": "variable",
                    "_TEMP_DIR": "variable",
                    "INSTANTIATED_TEMPLATE_DIR_PATH": "variable",
                    "get_arg_return_types_from_interface": "function",
                    "_write": "function",
                    "_do_instantiate_remote_module_template": "function",
                    "instantiate_scriptable_remote_module_template": "function",
                    "instantiate_non_scriptable_remote_module_template": "function"
                }
            },
            "functional": {
                "broadcast": "function",
                "gather": "function",
                "scatter": "function",
                "reduce": "function",
                "all_gather": "function",
                "all_to_all": "function",
                "all_reduce": "function",
                "_Broadcast": "class",
                "_Gather": "class",
                "_Scatter": "class",
                "_Reduce": "class",
                "_AllGather": "class",
                "_AlltoAll": "class",
                "_AllReduce": "class"
            }
        },
        "optim": {
            "functional_adadelta": {
                "_FunctionalAdadelta": "class"
            },
            "functional_adagrad": {
                "_FunctionalAdagrad": "class"
            },
            "functional_adam": {
                "_FunctionalAdam": "class"
            },
            "functional_adamax": {
                "_FunctionalAdamax": "class"
            },
            "functional_adamw": {
                "_FunctionalAdamW": "class"
            },
            "functional_rmsprop": {
                "_FunctionalRMSprop": "class"
            },
            "functional_rprop": {
                "_FunctionalRprop": "class"
            },
            "functional_sgd": {
                "_FunctionalSGD": "class"
            },
            "optimizer": {
                "logger": "variable",
                "_ScriptLocalOptimizerInterface": "class",
                "_ScriptLocalOptimizer": "class",
                "_LocalOptimizer": "class",
                "_new_local_optimizer": "function",
                "_local_optimizer_step": "function",
                "_new_script_local_optimizer": "function",
                "_script_local_optimizer_step": "function",
                "_wait_for_all": "function",
                "DistributedOptimizer": "class"
            },
            "post_localSGD_optimizer": {
                "PostLocalSGDOptimizer": "class"
            },
            "zero_redundancy_optimizer": {
                "__all__": "variable",
                "_recursive_copy_to_device": "function",
                "_is_trainable": "function",
                "_broadcast_object": "function",
                "_get_global_rank": "function",
                "_ZeROJoinHook": "class",
                "_DDPBucketAssignment": "class",
                "_OverlapStatus": "class",
                "_OverlapInfo": "class",
                "ZeroRedundancyOptimizer": "class"
            },
            "": {
                "functional_optim_map": "variable"
            }
        },
        "pipeline": {
            "sync": {
                "skip": {
                    "portal": {
                        "Portal": "class",
                        "Context": "class",
                        "PortalBlue": "class",
                        "PortalOrange": "class",
                        "PortalCopy": "class"
                    }
                },
                "_balance": {
                    "blockpartition": {
                        "__all__": "variable",
                        "solve": "function"
                    },
                    "": {
                        "__all__": "variable",
                        "Device": "variable",
                        "Tensors": "variable",
                        "TensorOrTensors": "variable",
                        "balance_cost": "function",
                        "balance_by_time": "function",
                        "balance_by_size": "function"
                    }
                },
                "checkpoint": {
                    "__all__": "variable",
                    "Tensors": "variable",
                    "TensorOrTensors": "variable",
                    "Recomputed": "variable",
                    "RNGStates": "variable",
                    "Function": "class",
                    "checkpoint": "function",
                    "Checkpointing": "class",
                    "ThreadLocal": "class",
                    "thread_local": "variable",
                    "enable_checkpointing": "function",
                    "enable_recomputing": "function",
                    "is_checkpointing": "function",
                    "is_recomputing": "function",
                    "Context": "class",
                    "save_rng_states": "function",
                    "restore_rng_states": "function",
                    "Checkpoint": "class",
                    "Recompute": "class"
                },
                "copy": {
                    "Tensors": "variable",
                    "Context": "class",
                    "Copy": "class",
                    "Wait": "class"
                },
                "pipe": {
                    "_verify_module": "function",
                    "_verify_splitting": "function",
                    "BalanceError": "class",
                    "_retrieve_device": "function",
                    "PipeSequential": "class",
                    "WithDevice": "class",
                    "_assemble_partition": "function",
                    "_split_module": "function",
                    "MOVING_DENIED": "variable",
                    "Pipe": "class"
                },
                "stream": {
                    "CPUStreamType": "class",
                    "CPUStream": "variable",
                    "AbstractStream": "variable",
                    "new_stream": "function",
                    "current_stream": "function",
                    "default_stream": "function",
                    "use_device": "function",
                    "use_stream": "function",
                    "get_device": "function",
                    "wait_stream": "function",
                    "record_stream": "function",
                    "is_cuda": "function",
                    "as_cuda": "function"
                },
                "utils": {
                    "partition_model": "function"
                }
            }
        },
        "rpc": {
            "_testing": {
                "faulty_agent_backend_registry": {
                    "_init_process_group": "function",
                    "_faulty_tensorpipe_construct_rpc_backend_options_handler": "function",
                    "_faulty_tensorpipe_init_backend_handler": "function"
                },
                "": {
                    "is_available": "function"
                }
            },
            "api": {
                "logger": "variable",
                "_ignore_rref_leak": "variable",
                "_default_pickler": "variable",
                "_use_rpc_pickler": "function",
                "_require_initialized": "function",
                "AllGatherStates": "class",
                "_all_gather_dict_lock": "variable",
                "_init_rpc_states": "function",
                "_gather_to_leader": "function",
                "_broadcast_to_followers": "function",
                "_thread_local_var": "variable",
                "_wait_all": "function",
                "_all_gather": "function",
                "_barrier": "function",
                "_wait_all_workers": "function",
                "shutdown": "function",
                "_finalize_shutdown": "function",
                "get_worker_info": "function",
                "_to_worker_info": "function",
                "_rref_typeof_on_owner": "function",
                "_rref_typeof_on_user": "function",
                "T": "variable",
                "GenericWithOneTypeVar": "variable",
                "method_factory": "function",
                "remote": "function",
                "_invoke_rpc": "function",
                "rpc_sync": "function",
                "rpc_async": "function",
                "_enable_rpc_profiler": "function"
            },
            "backend_registry": {
                "BackendValue": "variable",
                "_backend_type_repr": "function",
                "_backend_type_doc": "variable"
            },
            "functions": {
                "async_execution": "function"
            },
            "internal": {
                "_thread_local_tensor_tables": "variable",
                "_pickler": "variable",
                "_unpickler": "variable",
                "RPCExecMode": "class",
                "_InternalRPCPickler": "class",
                "_internal_rpc_pickler": "variable",
                "serialize": "function",
                "deserialize": "function",
                "_run_function": "function",
                "_handle_exception": "function",
                "_build_rpc_profiling_key": "function",
                "_start_record_function": "function",
                "PythonUDF": "variable",
                "RemoteException": "variable"
            },
            "options": {
                "DeviceType": "variable",
                "_to_device": "function",
                "_to_device_map": "function",
                "_to_device_list": "function",
                "TensorPipeRpcBackendOptions": "class"
            },
            "rref_proxy": {
                "_local_invoke": "function",
                "_local_invoke_async_execution": "function",
                "_invoke_rpc": "function",
                "RRefProxy": "class"
            },
            "server_process_global_profiler": {
                "_server_process_global_profile": "class"
            },
            "": {
                "logger": "variable",
                "_init_counter": "variable",
                "_init_counter_lock": "variable",
                "is_available": "function"
            }
        },
        "_sharded_tensor": {
            "ops": {
                "linear": {
                    "sharded_linear": "function",
                    "_handle_col_wise_sharding": "function",
                    "_handle_row_wise_sharding": "function"
                }
            },
            "api": {
                "_sharded_tensor_lock": "variable",
                "_sharded_tensor_current_id": "variable",
                "_CURRENT_PROCESS_GROUP": "variable",
                "load_with_process_group": "function",
                "Shard": "class",
                "TensorProperties": "class",
                "MEM_FORMAT_ENCODING": "class",
                "ShardedTensorMetadata": "class",
                "_register_remote_shards": "function",
                "CreateOp": "class",
                "TensorInitParams": "class",
                "ShardedTensor": "class",
                "_create_tensor_from_params": "function"
            },
            "": {
                "empty": "function",
                "ones": "function",
                "rand": "function",
                "zeros": "function",
                "full": "function",
                "init_from_local_shards": "function",
                "state_dict_hook": "function",
                "pre_load_state_dict_hook": "function",
                "_recurse_update_module": "function",
                "_recurse_update_dict": "function",
                "shard_parameter": "function"
            }
        },
        "_sharding_spec": {
            "api": {
                "PlacementSpec": "class",
                "DevicePlacementSpec": "class",
                "ShardingSpec": "class",
                "ChunkShardingSpec": "class",
                "EnumerableShardingSpec": "class"
            },
            "_internals": {
                "ShardMetadata": "class",
                "_check_shard_metadata_pair_overlap": "function",
                "validate_non_overlapping_shards_metadata": "function",
                "check_tensor": "function",
                "get_split_size": "function",
                "get_chunked_dim_size": "function"
            }
        },
        "argparse_util": {
            "env": "class",
            "check_env": "class"
        },
        "constants": {
            "default_pg_timeout": "variable"
        },
        "distributed_c10d": {
            "_MPI_AVAILABLE": "variable",
            "_NCCL_AVAILABLE": "variable",
            "_GLOO_AVAILABLE": "variable",
            "_pickler": "variable",
            "_unpickler": "variable",
            "logger": "variable",
            "PG_WRAPPER_STORE_PREFIX": "variable",
            "supports_complex": "function",
            "Backend": "class",
            "dist_backend": "variable",
            "_reduce_op": "class",
            "reduce_op": "variable",
            "group": "class",
            "GroupMember": "class",
            "_default_pg_init_method": "variable",
            "_group_count": "variable",
            "STORE_BASED_BARRIER_PREFIX": "variable",
            "_store_based_barrier": "function",
            "_rank_not_in_group": "function",
            "_get_group_rank": "function",
            "_get_global_rank": "function",
            "_get_group_size": "function",
            "_check_single_tensor": "function",
            "_check_tensor_list": "function",
            "_check_op": "function",
            "_check_p2p_op_list": "function",
            "is_mpi_available": "function",
            "is_nccl_available": "function",
            "is_gloo_available": "function",
            "is_initialized": "function",
            "is_torchelastic_launched": "function",
            "_get_default_group": "function",
            "_get_default_store": "function",
            "_update_default_pg": "function",
            "get_backend": "function",
            "init_process_group": "function",
            "_new_process_group_helper": "function",
            "destroy_process_group": "function",
            "get_rank": "function",
            "get_world_size": "function",
            "isend": "function",
            "irecv": "function",
            "send": "function",
            "recv": "function",
            "P2POp": "class",
            "_batch_p2p_manager": "function",
            "batch_isend_irecv": "function",
            "broadcast_multigpu": "function",
            "broadcast": "function",
            "all_reduce_multigpu": "function",
            "all_reduce": "function",
            "all_reduce_coalesced": "function",
            "reduce_multigpu": "function",
            "reduce": "function",
            "all_gather_multigpu": "function",
            "_object_to_tensor": "function",
            "_tensor_to_object": "function",
            "all_gather_object": "function",
            "gather_object": "function",
            "broadcast_object_list": "function",
            "scatter_object_list": "function",
            "all_gather": "function",
            "_all_gather_base": "function",
            "all_gather_coalesced": "function",
            "_validate_output_list_for_rank": "function",
            "gather": "function",
            "scatter": "function",
            "reduce_scatter_multigpu": "function",
            "reduce_scatter": "function",
            "_reduce_scatter_base": "function",
            "all_to_all_single": "function",
            "all_to_all": "function",
            "barrier": "function",
            "monitored_barrier": "function",
            "_create_process_group_wrapper": "function",
            "new_group": "function",
            "new_subgroups": "function",
            "new_subgroups_by_enumeration": "function"
        },
        "launch": {
            "logger": "variable",
            "parse_args": "function",
            "launch": "function",
            "main": "function"
        },
        "remote_device": {
            "_remote_device": "class"
        },
        "rendezvous": {
            "_rendezvous_handlers": "variable",
            "register_rendezvous_handler": "function",
            "rendezvous": "function",
            "_rendezvous_error": "function",
            "_file_rendezvous_handler": "function",
            "_torchelastic_use_agent_store": "function",
            "_create_c10d_store": "function",
            "_tcp_rendezvous_handler": "function",
            "_env_rendezvous_handler": "function"
        },
        "run": {
            "log": "variable",
            "get_args_parser": "function",
            "parse_args": "function",
            "parse_min_max_nnodes": "function",
            "determine_local_world_size": "function",
            "get_rdzv_endpoint": "function",
            "get_use_env": "function",
            "config_from_args": "function",
            "run_script_path": "function",
            "run": "function",
            "main": "function"
        },
        "": {
            "is_available": "function"
        }
    },
    "distributions": {
        "bernoulli": {
            "Bernoulli": "class"
        },
        "beta": {
            "Beta": "class"
        },
        "binomial": {
            "_clamp_by_zero": "function",
            "Binomial": "class"
        },
        "categorical": {
            "Categorical": "class"
        },
        "cauchy": {
            "Cauchy": "class"
        },
        "chi2": {
            "Chi2": "class"
        },
        "constraints": {
            "__all__": "variable",
            "Constraint": "class",
            "_Dependent": "class",
            "is_dependent": "function",
            "_DependentProperty": "class",
            "_IndependentConstraint": "class",
            "_Boolean": "class",
            "_OneHot": "class",
            "_IntegerInterval": "class",
            "_IntegerLessThan": "class",
            "_IntegerGreaterThan": "class",
            "_Real": "class",
            "_GreaterThan": "class",
            "_GreaterThanEq": "class",
            "_LessThan": "class",
            "_Interval": "class",
            "_HalfOpenInterval": "class",
            "_Simplex": "class",
            "_Multinomial": "class",
            "_LowerTriangular": "class",
            "_LowerCholesky": "class",
            "_CorrCholesky": "class",
            "_PositiveDefinite": "class",
            "_Cat": "class",
            "_Stack": "class",
            "dependent": "variable",
            "dependent_property": "variable",
            "independent": "variable",
            "boolean": "variable",
            "one_hot": "variable",
            "nonnegative_integer": "variable",
            "positive_integer": "variable",
            "integer_interval": "variable",
            "real": "variable",
            "real_vector": "variable",
            "positive": "variable",
            "nonnegative": "variable",
            "greater_than": "variable",
            "greater_than_eq": "variable",
            "less_than": "variable",
            "multinomial": "variable",
            "unit_interval": "variable",
            "interval": "variable",
            "half_open_interval": "variable",
            "simplex": "variable",
            "lower_triangular": "variable",
            "lower_cholesky": "variable",
            "corr_cholesky": "variable",
            "positive_definite": "variable",
            "cat": "variable",
            "stack": "variable"
        },
        "constraint_registry": {
            "__all__": "variable",
            "ConstraintRegistry": "class",
            "biject_to": "variable",
            "transform_to": "variable",
            "_transform_to_real": "function",
            "_biject_to_independent": "function",
            "_transform_to_independent": "function",
            "_transform_to_positive": "function",
            "_transform_to_greater_than": "function",
            "_transform_to_less_than": "function",
            "_transform_to_interval": "function",
            "_biject_to_simplex": "function",
            "_transform_to_simplex": "function",
            "_transform_to_lower_cholesky": "function",
            "_transform_to_corr_cholesky": "function",
            "_biject_to_cat": "function",
            "_transform_to_cat": "function",
            "_biject_to_stack": "function",
            "_transform_to_stack": "function"
        },
        "continuous_bernoulli": {
            "ContinuousBernoulli": "class"
        },
        "dirichlet": {
            "_Dirichlet_backward": "function",
            "_Dirichlet": "class",
            "Dirichlet": "class"
        },
        "distribution": {
            "Distribution": "class"
        },
        "exponential": {
            "Exponential": "class"
        },
        "exp_family": {
            "ExponentialFamily": "class"
        },
        "fishersnedecor": {
            "FisherSnedecor": "class"
        },
        "gamma": {
            "_standard_gamma": "function",
            "Gamma": "class"
        },
        "geometric": {
            "Geometric": "class"
        },
        "gumbel": {
            "Gumbel": "class"
        },
        "half_cauchy": {
            "HalfCauchy": "class"
        },
        "half_normal": {
            "HalfNormal": "class"
        },
        "independent": {
            "Independent": "class"
        },
        "kl": {
            "_KL_REGISTRY": "variable",
            "register_kl": "function",
            "_Match": "class",
            "_dispatch_kl": "function",
            "_infinite_like": "function",
            "_x_log_x": "function",
            "_batch_trace_XXT": "function",
            "kl_divergence": "function",
            "_kl_bernoulli_bernoulli": "function",
            "_kl_beta_beta": "function",
            "_kl_binomial_binomial": "function",
            "_kl_categorical_categorical": "function",
            "_kl_continuous_bernoulli_continuous_bernoulli": "function",
            "_kl_dirichlet_dirichlet": "function",
            "_kl_exponential_exponential": "function",
            "_kl_expfamily_expfamily": "function",
            "_kl_gamma_gamma": "function",
            "_kl_gumbel_gumbel": "function",
            "_kl_geometric_geometric": "function",
            "_kl_halfnormal_halfnormal": "function",
            "_kl_laplace_laplace": "function",
            "_kl_lowrankmultivariatenormal_lowrankmultivariatenormal": "function",
            "_kl_multivariatenormal_lowrankmultivariatenormal": "function",
            "_kl_lowrankmultivariatenormal_multivariatenormal": "function",
            "_kl_multivariatenormal_multivariatenormal": "function",
            "_kl_normal_normal": "function",
            "_kl_onehotcategorical_onehotcategorical": "function",
            "_kl_pareto_pareto": "function",
            "_kl_poisson_poisson": "function",
            "_kl_transformed_transformed": "function",
            "_kl_uniform_uniform": "function",
            "_kl_bernoulli_poisson": "function",
            "_kl_beta_continuous_bernoulli": "function",
            "_kl_beta_infinity": "function",
            "_kl_beta_exponential": "function",
            "_kl_beta_gamma": "function",
            "_kl_beta_normal": "function",
            "_kl_beta_uniform": "function",
            "_kl_continuous_bernoulli_infinity": "function",
            "_kl_continuous_bernoulli_exponential": "function",
            "_kl_continuous_bernoulli_normal": "function",
            "_kl_continuous_bernoulli_uniform": "function",
            "_kl_exponential_infinity": "function",
            "_kl_exponential_gamma": "function",
            "_kl_exponential_gumbel": "function",
            "_kl_exponential_normal": "function",
            "_kl_gamma_infinity": "function",
            "_kl_gamma_exponential": "function",
            "_kl_gamma_gumbel": "function",
            "_kl_gamma_normal": "function",
            "_kl_gumbel_infinity": "function",
            "_kl_gumbel_normal": "function",
            "_kl_laplace_infinity": "function",
            "_kl_laplace_normal": "function",
            "_kl_normal_infinity": "function",
            "_kl_normal_gumbel": "function",
            "_kl_pareto_infinity": "function",
            "_kl_pareto_exponential": "function",
            "_kl_pareto_gamma": "function",
            "_kl_pareto_normal": "function",
            "_kl_poisson_infinity": "function",
            "_kl_uniform_beta": "function",
            "_kl_uniform_continuous_bernoulli": "function",
            "_kl_uniform_exponetial": "function",
            "_kl_uniform_gamma": "function",
            "_kl_uniform_gumbel": "function",
            "_kl_uniform_normal": "function",
            "_kl_uniform_pareto": "function",
            "_kl_independent_independent": "function",
            "_kl_cauchy_cauchy": "function"
        },
        "kumaraswamy": {
            "_moments": "function",
            "Kumaraswamy": "class"
        },
        "laplace": {
            "Laplace": "class"
        },
        "lkj_cholesky": {
            "LKJCholesky": "class"
        },
        "logistic_normal": {
            "LogisticNormal": "class"
        },
        "log_normal": {
            "LogNormal": "class"
        },
        "lowrank_multivariate_normal": {
            "_batch_capacitance_tril": "function",
            "_batch_lowrank_logdet": "function",
            "_batch_lowrank_mahalanobis": "function",
            "LowRankMultivariateNormal": "class"
        },
        "mixture_same_family": {
            "MixtureSameFamily": "class"
        },
        "multinomial": {
            "Multinomial": "class"
        },
        "multivariate_normal": {
            "_batch_mv": "function",
            "_batch_mahalanobis": "function",
            "_precision_to_scale_tril": "function",
            "MultivariateNormal": "class"
        },
        "negative_binomial": {
            "NegativeBinomial": "class"
        },
        "normal": {
            "Normal": "class"
        },
        "one_hot_categorical": {
            "OneHotCategorical": "class",
            "OneHotCategoricalStraightThrough": "class"
        },
        "pareto": {
            "Pareto": "class"
        },
        "poisson": {
            "Poisson": "class"
        },
        "relaxed_bernoulli": {
            "LogitRelaxedBernoulli": "class",
            "RelaxedBernoulli": "class"
        },
        "relaxed_categorical": {
            "ExpRelaxedCategorical": "class",
            "RelaxedOneHotCategorical": "class"
        },
        "studentT": {
            "StudentT": "class"
        },
        "transformed_distribution": {
            "TransformedDistribution": "class"
        },
        "transforms": {
            "__all__": "variable",
            "Transform": "class",
            "_InverseTransform": "class",
            "ComposeTransform": "class",
            "identity_transform": "variable",
            "IndependentTransform": "class",
            "ReshapeTransform": "class",
            "ExpTransform": "class",
            "PowerTransform": "class",
            "_clipped_sigmoid": "function",
            "SigmoidTransform": "class",
            "TanhTransform": "class",
            "AbsTransform": "class",
            "AffineTransform": "class",
            "CorrCholeskyTransform": "class",
            "SoftmaxTransform": "class",
            "StickBreakingTransform": "class",
            "LowerCholeskyTransform": "class",
            "CatTransform": "class",
            "StackTransform": "class"
        },
        "uniform": {
            "Uniform": "class"
        },
        "utils": {
            "euler_constant": "variable",
            "broadcast_all": "function",
            "_standard_normal": "function",
            "_sum_rightmost": "function",
            "logits_to_probs": "function",
            "clamp_probs": "function",
            "probs_to_logits": "function",
            "lazy_property": "class",
            "_lazy_property_and_property": "class",
            "tril_matrix_to_vec": "function",
            "vec_to_tril_matrix": "function"
        },
        "von_mises": {
            "_eval_poly": "function",
            "_I0_COEF_SMALL": "variable",
            "_I0_COEF_LARGE": "variable",
            "_I1_COEF_SMALL": "variable",
            "_I1_COEF_LARGE": "variable",
            "_COEF_SMALL": "variable",
            "_COEF_LARGE": "variable",
            "_log_modified_bessel_fn": "function",
            "_rejection_sample": "function",
            "VonMises": "class"
        },
        "weibull": {
            "Weibull": "class"
        },
        "": {
            "__all__": "variable"
        }
    },
    "futures": {
        "": {
            "T": "variable",
            "S": "variable",
            "Future": "class",
            "collect_all": "function",
            "wait_all": "function"
        }
    },
    "fx": {
        "experimental": {
            "fx2trt": {
                "converters": {
                    "acc_ops_converters": {
                        "to_numpy": "function",
                        "has_dynamic_shape": "function",
                        "get_axes_for_reduce_op": "function",
                        "create_constant": "function",
                        "get_trt_tensor": "function",
                        "append_ones": "function",
                        "broadcast": "function",
                        "add_binary_elementwise_layer": "function",
                        "add_unary_layer": "function",
                        "add_activation_layer": "function",
                        "add_transpose_layer": "function",
                        "add_matrix_multiply_layer": "function",
                        "process_attr": "function",
                        "acc_ops_conv2d": "function",
                        "acc_ops_flatten": "function",
                        "IMPLICIT_BATCH_DIM": "variable",
                        "acc_ops_size": "function",
                        "acc_ops_batch_norm": "function",
                        "acc_ops_layer_norm": "function",
                        "acc_ops_softmax": "function",
                        "acc_ops_relu": "function",
                        "acc_ops_sin": "function",
                        "acc_ops_cos": "function",
                        "acc_ops_tan": "function",
                        "acc_ops_sinh": "function",
                        "acc_ops_cosh": "function",
                        "acc_ops_tanh": "function",
                        "acc_ops_asin": "function",
                        "acc_ops_acos": "function",
                        "acc_ops_atan": "function",
                        "acc_ops_exp": "function",
                        "acc_ops_log": "function",
                        "acc_ops_sqrt": "function",
                        "acc_ops_reciprocal": "function",
                        "acc_ops_abs": "function",
                        "acc_ops_neg": "function",
                        "acc_ops_floor": "function",
                        "acc_ops_ceil": "function",
                        "acc_ops_sum": "function",
                        "add_acc_ops_full_reduce": "function",
                        "add_acc_ops_dim_reduce": "function",
                        "acc_ops_max_full_reduce": "function",
                        "acc_ops_min_full_reduce": "function",
                        "acc_ops_max_dim_reduce": "function",
                        "acc_ops_min_dim_reduce": "function",
                        "acc_ops_maximum": "function",
                        "acc_ops_minimum": "function",
                        "acc_ops_max_pool2d": "function",
                        "acc_ops_squeeze": "function",
                        "acc_ops_add": "function",
                        "acc_ops_sub": "function",
                        "acc_ops_div": "function",
                        "acc_ops_mul": "function",
                        "acc_ops_pow": "function",
                        "acc_ops_unsqueeze": "function",
                        "acc_ops_topk": "function",
                        "acc_ops_adaptive_avg_pool2d": "function",
                        "acc_ops_avg_pool2d": "function",
                        "acc_ops_reshape": "function",
                        "acc_ops_slice_tensor": "function",
                        "acc_ops_split": "function",
                        "acc_ops_linear": "function",
                        "add_clamp": "function",
                        "acc_ops_clamp": "function",
                        "acc_ops_tuple_construct": "function",
                        "acc_ops_contiguous": "function",
                        "acc_ops_getitem": "function",
                        "acc_ops_cat": "function",
                        "acc_ops_matmul": "function",
                        "acc_ops_sigmoid": "function",
                        "acc_ops_permute": "function",
                        "acc_ops_quantize_per_tensor": "function",
                        "acc_ops_dequantize": "function"
                    },
                    "activation": {
                        "common_activation": "function",
                        "relu": "function",
                        "sigmoid": "function"
                    },
                    "adaptive_avgpool": {
                        "adaptive_avgpool2d": "function"
                    },
                    "add": {
                        "add": "function",
                        "quantized_add": "function",
                        "quantized_add_relu": "function"
                    },
                    "batchnorm": {
                        "common_batchnorm": "function",
                        "batchnorm2d": "function",
                        "quantized_batchnorm2d": "function"
                    },
                    "convolution": {
                        "common_conv": "function",
                        "common_conv_relu": "function",
                        "conv2d": "function",
                        "quantized_conv2d": "function",
                        "quantized_conv_relu2d": "function"
                    },
                    "helper_functions": {
                        "extend_attr_to_tuple": "function",
                        "to_numpy": "function",
                        "get_dyn_range": "function",
                        "mark_as_int8_layer": "function",
                        "get_inputs_from_args_and_kwargs": "function"
                    },
                    "linear": {
                        "common_linear": "function",
                        "linear": "function",
                        "quantized_linear": "function"
                    },
                    "maxpool": {
                        "common_maxpool": "function",
                        "maxpool2d": "function"
                    },
                    "mul": {
                        "mul": "function",
                        "quantized_mul": "function"
                    },
                    "quantization": {
                        "quantize_per_tensor_inputs": "variable",
                        "dequantize": "function",
                        "quantize": "function",
                        "identity": "function"
                    },
                    "transformation": {
                        "torch_flatten": "function"
                    }
                },
                "tools": {
                    "graph_util": {
                        "get_layer_name_type": "function",
                        "trt_network_to_dot_graph": "function"
                    },
                    "trt_minimizer": {
                        "lower_mod_default": "function",
                        "TensorRTMinizerSetting": "class",
                        "TensorRTMinimizer": "class"
                    },
                    "trt_splitter": {
                        "TRTOperatorSupport": "class",
                        "TRTSplitter": "class"
                    }
                },
                "fx2trt": {
                    "TRTInterpreterResult": "variable",
                    "torch_dtype_to_trt": "function",
                    "torch_dtype_from_trt": "function",
                    "TRTModule": "class",
                    "CONVERTERS": "variable",
                    "tensorrt_converter": "function",
                    "InputTensorSpec": "class",
                    "get_dynamic_dims": "function",
                    "create_inputs_from_specs": "function",
                    "TRTInterpreter": "class"
                }
            },
            "fx_acc": {
                "acc_normalizer": {
                    "ALIAS_MAP": "variable",
                    "ArgReplacementTuplesType": "variable",
                    "NormalizationInfo": "class",
                    "_insert_fun": "function",
                    "_get_dup_signature_tuples": "function",
                    "register_acc_op": "function",
                    "register_acc_op_mapping": "function",
                    "register_custom_acc_mapper_fn": "function",
                    "move_kwargs_to_acc_out_ty": "function",
                    "get_normalized_kwargs": "function",
                    "normalize": "function"
                },
                "acc_ops": {
                    "this_arg_is_optional": "variable",
                    "linear": "function",
                    "quantized_linear": "function",
                    "flatten": "function",
                    "squeeze": "function",
                    "max_pool2d": "function",
                    "adaptive_avg_pool2d": "function",
                    "avg_pool2d": "function",
                    "sign": "function",
                    "size": "function",
                    "custom_getattr_mapper": "function",
                    "tensor_size_mapper": "function",
                    "add": "function",
                    "unsqueeze": "function",
                    "stack_mapper": "function",
                    "clamp": "function",
                    "cat": "function",
                    "transpose_mapper": "function",
                    "contiguous": "function",
                    "softmax": "function",
                    "addmm_mapper": "function",
                    "t_mapper": "function",
                    "permute": "function",
                    "square_mapper": "function",
                    "matmul": "function",
                    "dropout_mapper": "function",
                    "quantized_add": "function",
                    "quantized_mul": "function",
                    "quantize_per_tensor": "function",
                    "dequantize": "function",
                    "sub": "function",
                    "mul": "function",
                    "div": "function",
                    "pow": "function",
                    "relu": "function",
                    "torch_log1p_mapper": "function",
                    "add_sum_mapper": "function",
                    "sum": "function",
                    "add_maximum_minimum_mapper": "function",
                    "max_full_reduce": "function",
                    "max_dim_reduce": "function",
                    "maximum": "function",
                    "min_full_reduce": "function",
                    "min_dim_reduce": "function",
                    "minimum": "function",
                    "sigmoid": "function",
                    "sinh": "function",
                    "cosh": "function",
                    "tanh": "function",
                    "asin": "function",
                    "acos": "function",
                    "atan": "function",
                    "exp": "function",
                    "log": "function",
                    "sqrt": "function",
                    "reciprocal": "function",
                    "abs": "function",
                    "neg": "function",
                    "floor": "function",
                    "ceil": "function",
                    "conv2d": "function",
                    "quantized_conv2d": "function",
                    "batch_norm": "function",
                    "layer_norm": "function",
                    "argmin_max_mapper_impl": "function",
                    "torch_argmin_mapper": "function",
                    "linalg_norm": "function",
                    "torch_split_mapper": "function",
                    "split": "function",
                    "tuple_construct": "function",
                    "quantized_batch_norm2d": "function",
                    "embedding_bag": "function",
                    "embedding_bag_byte_rowwise_offsets": "function",
                    "embedding_bag_4bit_rowwise_offsets": "function",
                    "sin": "function",
                    "cos": "function",
                    "tan": "function",
                    "topk": "function",
                    "getitem": "function",
                    "slice_tensor": "function",
                    "custom_narrow_mapper": "function",
                    "reshape": "function",
                    "custom_tensor_reshape_mapper": "function",
                    "to_dtype": "function",
                    "custom_tensor_to_mapper": "function",
                    "custom_torch_add_mapper": "function",
                    "packed_quantized_linear_mapper": "function",
                    "packed_quantized_conv2d_mapper": "function",
                    "add_relu_unfuse_mapper": "function",
                    "packed_quantized_convrelu2d_mapper": "function",
                    "custom_dequantize_mapper": "function"
                },
                "acc_tracer": {
                    "_get_exception_wrapper_attr_name": "function",
                    "Acc_Rewriter": "class",
                    "ConditionalExceptionWrapper": "class",
                    "AccRewritingTracer": "class",
                    "DEFAULT_REWRITE_ALLOW_LIST": "variable",
                    "_rewrite": "function",
                    "_remove_assertions": "function",
                    "_remove_exceptions": "function",
                    "trace": "function"
                },
                "acc_utils": {
                    "is_acc_op": "function",
                    "is_acc_op_with_kwarg": "function",
                    "get_field_from_acc_out_ty": "function",
                    "serialize_module_json_to_file": "function",
                    "build_raw_tensor_meta": "function",
                    "draw_graph": "function",
                    "print_model_info": "function",
                    "get_unique_attr_name_in_module": "function"
                }
            },
            "unification": {
                "multipledispatch": {
                    "conflict": {
                        "AmbiguityWarning": "class",
                        "supercedes": "function",
                        "consistent": "function",
                        "ambiguous": "function",
                        "ambiguities": "function",
                        "super_signature": "function",
                        "edge": "function",
                        "ordering": "function"
                    },
                    "core": {
                        "global_namespace": "variable",
                        "dispatch": "function",
                        "ismethod": "function"
                    },
                    "dispatcher": {
                        "MDNotImplementedError": "class",
                        "ambiguity_warn": "function",
                        "halt_ordering": "function",
                        "restart_ordering": "function",
                        "variadic_signature_matches_iter": "function",
                        "variadic_signature_matches": "function",
                        "Dispatcher": "class",
                        "source": "function",
                        "MethodDispatcher": "class",
                        "str_signature": "function",
                        "warning_text": "function"
                    },
                    "utils": {
                        "raises": "function",
                        "expand_tuples": "function",
                        "_toposort": "function",
                        "reverse_dict": "function",
                        "groupby": "function",
                        "typename": "function"
                    },
                    "variadic": {
                        "VariadicSignatureType": "class",
                        "isvariadic": "function",
                        "VariadicSignatureMeta": "class",
                        "Variadic": "class"
                    }
                },
                "core": {
                    "_reify": "function",
                    "reify": "function",
                    "seq": "variable",
                    "_unify": "function",
                    "unify": "function"
                },
                "dispatch": {
                    "namespace": "variable",
                    "dispatch": "variable"
                },
                "match": {
                    "Dispatcher": "class",
                    "VarDispatcher": "class",
                    "global_namespace": "variable",
                    "match": "function",
                    "supercedes": "function",
                    "edge": "function",
                    "ordering": "function"
                },
                "more": {
                    "unifiable": "function",
                    "reify_object": "function",
                    "_reify_object_dict": "function",
                    "_reify_object_slots": "function",
                    "_reify": "function",
                    "unify_object": "function",
                    "_unify": "function"
                },
                "unification_tools": {
                    "__all__": "variable",
                    "_get_factory": "function",
                    "merge": "function",
                    "merge_with": "function",
                    "valmap": "function",
                    "keymap": "function",
                    "itemmap": "function",
                    "valfilter": "function",
                    "keyfilter": "function",
                    "itemfilter": "function",
                    "assoc": "function",
                    "dissoc": "function",
                    "assoc_in": "function",
                    "update_in": "function",
                    "get_in": "function",
                    "getter": "function",
                    "groupby": "function",
                    "first": "function"
                },
                "utils": {
                    "hashable": "function",
                    "transitive_get": "function",
                    "raises": "function",
                    "_toposort": "function",
                    "reverse_dict": "function",
                    "xfail": "function",
                    "freeze": "function"
                },
                "variable": {
                    "_global_logic_variables": "variable",
                    "_glv": "variable",
                    "Var": "class",
                    "var": "function",
                    "vars": "function",
                    "isvar": "function",
                    "variables": "function"
                }
            },
            "accelerator_partitioner": {
                "DAGNode": "class",
                "DAG": "class",
                "PartitionResult": "class"
            },
            "const_fold": {
                "_make_tuple": "function",
                "FoldedGraphModule": "class",
                "split_const_subgraphs": "function"
            },
            "graph_gradual_typechecker": {
                "expand_to_tensor_dim": "function",
                "broadcast_types": "function",
                "register_inference_rule": "function",
                "register_refinement_rule": "function",
                "register_algebraic_expressions_inference_rule": "function",
                "add_inference_rule": "function",
                "get_attr_inference_rule": "function",
                "transpose_inference_rule": "function",
                "reshape_inference_rule": "function",
                "bn2d_inference_rule": "function",
                "calculate_out_dimension": "function",
                "get_greatest_upper_bound": "function",
                "conv2d_inference_rule": "function",
                "relu_inference_rule": "function",
                "maxpool2d_check": "function",
                "maxpool2d_inference_rule": "function",
                "linear_check": "function",
                "linear_inference_rule": "function",
                "adaptiveavgpool2d_check": "function",
                "adaptiveavgpool2d_inference_rule": "function",
                "flatten_check": "function",
                "flatten_inference_rule": "function",
                "GraphTypeChecker": "class",
                "conv_refinement_rule": "function",
                "linear_refinement_rule": "function",
                "all_eq": "function",
                "first_two_eq": "function",
                "element_wise_eq": "function",
                "flatten_refinement_rule": "function",
                "conv_rule": "function",
                "Refine": "class",
                "get_parameter": "function"
            },
            "merge_matmul": {
                "get_first_dim": "function",
                "legalize_graph": "function",
                "may_depend_on": "function",
                "are_nodes_independent": "function",
                "merge_matmul": "function"
            },
            "normalize": {
                "NormalizeArgs": "class",
                "NormalizeOperators": "class"
            },
            "optimization": {
                "_parent_name": "function",
                "matches_module_pattern": "function",
                "replace_node_module": "function",
                "fuse": "function",
                "remove_dropout": "function",
                "extract_subgraph": "function",
                "mkldnn_supported": "variable",
                "mkldnn_supported_unknown": "variable",
                "mkldnn_map": "variable",
                "modules_to_mkldnn": "function",
                "reset_modules": "function",
                "MklSubgraph": "class",
                "gen_mkl_autotuner": "function",
                "use_mkl_length": "function",
                "UnionFind": "class",
                "optimize_for_inference": "function"
            },
            "partitioner_utils": {
                "Partition": "class",
                "Device": "class",
                "NodeLatency": "class",
                "PartitionLatency": "class",
                "PartitionMode": "class",
                "PartitionerConfig": "class",
                "get_extra_size_of": "function",
                "get_latency_of_one_partition": "function",
                "get_partition_to_latency_mapping": "function",
                "get_comm_latency_between": "function",
                "get_latency_of_partitioned_graph": "function"
            },
            "refinement_types": {
                "Equality": "class"
            },
            "rewriter": {
                "AST_Rewriter": "class",
                "RewritingTracer": "class",
                "_rewrite": "function"
            },
            "schema_type_annotation": {
                "AnnotateTypesWithSchema": "class"
            },
            "unify_refinements": {
                "infer_symbolic_types_single_pass": "function",
                "infer_symbolic_types": "function",
                "convert_eq": "function",
                "unify_eq": "function",
                "substitute_solution_one_type": "function",
                "substitute_all_types": "function",
                "check_for_type_equality": "function"
            }
        },
        "passes": {
            "graph_drawer": {
                "_COLOR_MAP": "variable",
                "_HASH_COLOR_MAP": "variable",
                "_WEIGHT_TEMPLATE": "variable"
            },
            "graph_manipulation": {
                "replace_target_nodes_with": "function",
                "size_bytes": "class",
                "get_size_of_all_nodes": "function",
                "get_tensor_meta": "function",
                "get_size_of_node": "function",
                "serialize_shape": "function",
                "serialize_stride": "function",
                "serialize_tensor_quantization": "function",
                "serialize_weight": "function",
                "serialize_leaf_module": "function",
                "serialize_module": "function"
            },
            "net_min_base": {
                "_LOGGER": "variable",
                "FxNetMinimizerBadModuleError": "class",
                "FxNetMinimizerRunFuncError": "class",
                "FxNetMinimizerResultMismatchError": "class",
                "_MinimizerSettingBase": "class",
                "_MinimizerBase": "class"
            },
            "operator_support": {
                "OperatorSupport": "class"
            },
            "param_fetch": {
                "default_matching": "function",
                "extract_attrs_for_lowering": "function",
                "lift_lowering_attrs_to_nodes": "function"
            },
            "shape_prop": {
                "TensorMetadata": "class",
                "_extract_tensor_metadata": "function",
                "ShapeProp": "class"
            },
            "splitter_base": {
                "_LOGGER": "variable",
                "_SplitterSettingBase": "class",
                "FxNetAccNodesFinder": "class",
                "FxNetSplitterInternalError": "class",
                "Subgraph": "class",
                "_SplitterBase": "class"
            },
            "split_module": {
                "Partition": "class",
                "split_module": "function"
            },
            "split_utils": {
                "Component": "class",
                "HolderModule": "class",
                "split_by_tags": "function"
            },
            "tools_common": {
                "Tensors": "variable",
                "TensorOrTensors": "variable",
                "NodeList": "variable",
                "NodeSet": "variable",
                "Names": "variable",
                "CALLABLE_NODE_OPS": "variable",
                "get_node_target": "function",
                "is_node_output_tensor": "function",
                "FxNetAccFusionsFinder": "class"
            }
        },
        "annotate": {
            "annotate": "function"
        },
        "graph": {
            "_origin_type_map": "variable",
            "_CustomBuiltin": "class",
            "_register_custom_builtin": "function",
            "_is_magic": "function",
            "_snake_case": "function",
            "_is_from_torch": "function",
            "_Namespace": "class",
            "PythonCode": "class",
            "_format_args": "function",
            "_format_target": "function",
            "_InsertPoint": "class",
            "_node_list": "class",
            "_PyTreeInfo": "class",
            "Graph": "class",
            "forward": "function",
            "reflectable_magic_methods": "variable",
            "magic_methods": "variable"
        },
        "graph_module": {
            "_EvalCacheLoader": "class",
            "_loader": "variable",
            "_exec_with_source": "function",
            "_forward_from_src": "function",
            "_format_import_statement": "function",
            "_format_import_block": "function",
            "reduce_graph_module": "function",
            "reduce_package_graph_module": "function",
            "reduce_deploy_graph_module": "function",
            "_deserialize_graph_module": "function",
            "_copy_attr": "function",
            "_assign_attr": "function",
            "GraphModule": "class",
            "{module_name}": "class"
        },
        "immutable_collections": {
            "_help_mutation": "variable"
        },
        "interpreter": {
            "Interpreter": "class",
            "Transformer": "class"
        },
        "node": {
            "BaseArgumentTypes": "variable",
            "base_types": "variable",
            "Target": "variable",
            "Argument": "variable",
            "_find_module_of_method": "function",
            "_type_repr": "function",
            "_get_qualified_name": "function",
            "_format_arg": "function",
            "Node": "class",
            "map_arg": "function",
            "map_aggregate": "function"
        },
        "operator_schemas": {
            "ArgsKwargsPair": "class",
            "_nonzero_schemas": "function",
            "_manual_overrides[torch.nonzero]": "variable",
            "_FakeGlobalNamespace": "class",
            "_type_eval_globals": "variable",
            "_torchscript_type_to_python_type": "function",
            "_torchscript_schema_to_signature": "function",
            "check_for_mutable_operation": "function",
            "get_signature_for_torch_op": "function",
            "create_type_hint": "function",
            "type_matches": "function",
            "normalize_function": "function",
            "normalize_module": "function",
            "_args_kwargs_to_normalized_args_kwargs": "function"
        },
        "proxy": {
            "TracerBase": "class",
            "GraphAppendingTracer": "class",
            "TraceError": "class",
            "Proxy": "class",
            "Attribute": "class",
            "ParameterProxy": "class",
            "_define_reflectable": "function"
        },
        "subgraph_rewriter": {
            "Match": "class",
            "_SubgraphMatcher": "class",
            "_replace_submodules": "function",
            "replace_pattern": "function"
        },
        "tensor_type": {
            "TensorType": "class",
            "_DynType": "class",
            "Dyn": "variable",
            "is_consistent": "function",
            "is_more_precise": "function"
        },
        "_compatibility": {
            "compatibility": "function"
        },
        "_pytree": {
            "FlattenFuncSpec": "variable",
            "register_pytree_flatten_spec": "function",
            "tree_flatten_spec": "function",
            "_dict_flatten_spec": "function",
            "_list_flatten_spec": "function",
            "_tuple_flatten_spec": "function",
            "_namedtuple_flatten_spec": "function"
        },
        "_symbolic_trace": {
            "HAS_VARSTUFF": "variable",
            "ProxyableClassMeta": "class",
            "_patch_function": "function",
            "_CPatchManager": "class",
            "PHBase": "class",
            "PH": "variable",
            "Tracer": "class",
            "_find_proxy": "function",
            "_create_wrapped_func": "function",
            "_create_wrapped_method": "function",
            "_PatchedFn": "class",
            "_PatchedFnSetItem": "class",
            "_PatchedFnDel": "class",
            "_PatchedFnSetAttr": "class",
            "_Patcher": "class",
            "_patch_wrapped_functions": "function",
            "_autowrap_check": "function",
            "wrap": "function",
            "symbolic_trace": "function"
        }
    },
    "jit": {
        "mobile": {
            "": {
                "_load_for_lite_interpreter": "function",
                "LiteScriptModule": "class",
                "_export_operator_list": "function",
                "_get_model_bytecode_version": "function",
                "_backport_for_mobile": "function",
                "_backport_for_mobile_to_buffer": "function",
                "_get_model_ops_and_info": "function"
            }
        },
        "annotations": {
            "Module": "class",
            "EvalEnv": "class",
            "get_signature": "function",
            "is_function_or_method": "function",
            "is_vararg": "function",
            "get_param_names": "function",
            "check_fn": "function",
            "parse_type_line": "function",
            "get_type_line": "function",
            "split_type_line": "function",
            "try_real_annotations": "function",
            "get_enum_value_type": "function",
            "is_tensor": "function",
            "try_ann_to_type": "function",
            "ann_to_type": "function",
            "__all__": "variable"
        },
        "frontend": {
            "_IS_ASTUNPARSE_INSTALLED": "variable",
            "_reserved_prefix": "variable",
            "_reserved_names": "variable",
            "_identifier_chars": "variable",
            "is_reserved_name": "function",
            "pretty_node_names": "variable",
            "node_start_tokens": "variable",
            "FrontendError": "class",
            "NotSupportedError": "class",
            "UnsupportedNodeError": "class",
            "FrontendTypeError": "class",
            "build_withitems": "function",
            "build_stmts": "function",
            "get_class_properties": "function",
            "get_class_assigns": "function",
            "get_jit_class_def": "function",
            "get_jit_def": "function",
            "is_torch_jit_ignore_context_manager": "function",
            "Builder": "class",
            "build_class_def": "function",
            "build_def": "function",
            "_vararg_kwarg_err": "variable",
            "build_param_list": "function",
            "build_param": "function",
            "build_ignore_context_manager": "function",
            "get_default_args": "function",
            "get_default_args_for_class": "function",
            "WithItemBuilder": "class",
            "StmtBuilder": "class",
            "ExprBuilder": "class",
            "build_expr": "variable",
            "build_stmt": "variable",
            "build_withitem": "variable",
            "find_before": "function"
        },
        "quantized": {
            "QuantizedLinear": "class",
            "QuantizedLinearFP16": "class",
            "QuantizedRNNCellBase": "class",
            "QuantizedRNNCell": "class",
            "QuantizedLSTMCell": "class",
            "QuantizedGRUCell": "class",
            "apply_permutation": "function",
            "QuantizedRNNBase": "class",
            "QuantizedLSTM": "class",
            "QuantizedGRU": "class",
            "quantize_rnn_cell_modules": "function",
            "quantize_linear_modules": "function",
            "quantize_rnn_modules": "function"
        },
        "supported_ops": {
            "_hidden": "function",
            "_emit_type": "function",
            "_emit_arg": "function",
            "_emit_args": "function",
            "_emit_ret": "function",
            "_emit_rets": "function",
            "_emit_schema": "function",
            "_get_tensor_ops": "function",
            "_get_nn_functional_ops": "function",
            "_get_builtins_helper": "function",
            "_is_math_fn": "function",
            "_get_torchscript_builtins": "function",
            "_get_math_builtins": "function",
            "_get_global_builtins": "function",
            "_list_supported_ops": "function",
            "__doc__": "variable"
        },
        "unsupported_tensor_ops": {
            "execWrapper": "function",
            "_gen_unsupported_methods_properties": "function",
            "_list_unsupported_tensor_ops": "function",
            "__doc__": "variable"
        },
        "_async": {
            "fork": "function",
            "wait": "function"
        },
        "_builtins": {
            "_modules_containing_builtins": "variable",
            "_builtin_ops": "variable",
            "_gen_torch_functional_registered_ops": "function",
            "_functional_registered_ops": "variable",
            "_is_special_functional_bound_op": "function",
            "_get_builtin_table": "function",
            "_register_builtin": "function",
            "_find_builtin": "function"
        },
        "_check": {
            "AttributeTypeIsSupportedChecker": "class"
        },
        "_freeze": {
            "freeze": "function",
            "run_frozen_optimizations": "function",
            "optimize_for_inference": "function"
        },
        "_fuser": {
            "optimized_execution": "function",
            "fuser": "function",
            "last_executed_optimized_graph": "variable",
            "_get_differentiable_graph_node": "function",
            "_graph_for": "function"
        },
        "_logging": {
            "add_stat_value": "variable",
            "set_logger": "variable",
            "LockingLogger": "variable",
            "AggregationType": "variable",
            "NoopLogger": "variable",
            "time_point": "variable"
        },
        "_monkeytype_config": {
            "_IS_MONKEYTYPE_INSTALLED": "variable",
            "is_torch_native_class": "function",
            "get_type": "function",
            "get_optional_of_element_type": "function",
            "get_qualified_name": "function",
            "jit_code_filter": "function"
        },
        "_pickle": {
            "build_intlist": "function",
            "build_tensorlist": "function",
            "build_doublelist": "function",
            "build_boollist": "function",
            "build_tensor_from_id": "function",
            "restore_type_tag": "function"
        },
        "_recursive": {
            "ScriptMethodStub": "variable",
            "PropertyStub": "variable",
            "ignored_attributes": "variable",
            "_compile_and_register_class": "function",
            "make_stub": "function",
            "make_stub_from_method": "function",
            "make_stubs_from_exported_methods": "function",
            "jit_ignored_properties": "function",
            "_constant_types": "variable",
            "_get_valid_constant": "function",
            "SourceContext": "class",
            "infer_concrete_type_builder": "function",
            "ConcreteTypeStore": "class",
            "concrete_type_store": "variable",
            "create_methods_and_properties_from_stubs": "function",
            "create_hooks_from_stubs": "function",
            "get_module_concrete_type": "function",
            "create_script_class": "function",
            "create_script_module": "function",
            "create_script_module_impl": "function",
            "script_model_defines_attr": "function",
            "add_python_attr_to_scripted_model": "function",
            "get_overload_annotations": "function",
            "get_overload_name_mapping": "function",
            "_check_no_signature": "function",
            "make_stubs_for_overloads": "function",
            "check_module_initialized": "function",
            "infer_methods_to_compile": "function",
            "get_hook_stubs": "function",
            "get_property_stubs": "function",
            "interface_script": "function",
            "try_compile_fn": "function",
            "wrap_cpp_class": "function",
            "wrap_cpp_module": "function",
            "compile_unbound_method": "function",
            "lazy_bind": "function"
        },
        "_script": {
            "type_trace_db": "variable",
            "torch._C.ScriptMethod.graph_for": "variable",
            "torch._C.ScriptFunction.graph_for": "variable",
            "ScriptFunction": "variable",
            "ScriptFunction.__doc__": "variable",
            "_get_type_trace_db": "function",
            "_get_function_from_type": "function",
            "_is_new_style_class": "function",
            "OrderedDictWrapper": "class",
            "OrderedModuleDict": "class",
            "ScriptMeta": "class",
            "_CachedForward": "class",
            "ScriptWarning": "class",
            "script_method": "function",
            "ConstMap": "class",
            "unpackage_script_module": "function",
            "call_prepare_scriptable_func_impl": "function",
            "call_prepare_scriptable_func": "function",
            "create_script_dict": "function",
            "create_script_list": "function",
            "script": "function",
            "_check_overload_defaults": "function",
            "_compile_function_with_overload": "function",
            "_get_overloads": "function",
            "_check_directly_compile_overloaded": "function",
            "interface": "function",
            "_recursive_compile_class": "function",
            "CompilationUnit": "variable",
            "pad": "function",
            "_ScriptProfileColumn": "class",
            "_ScriptProfileTable": "class",
            "_ScriptProfile": "class",
            "_unwrap_optional": "function"
        },
        "_serialization": {
            "save": "function",
            "load": "function",
            "validate_map_location": "function"
        },
        "_state": {
            "EnabledProxy": "class",
            "_enabled": "variable",
            "disable": "function",
            "enable": "function",
            "_python_cu": "variable",
            "_script_classes": "variable",
            "_name_to_pyclass": "variable",
            "_add_script_class": "function",
            "_get_script_class": "function",
            "_get_python_class": "function",
            "_clear_class_state": "function",
            "_try_get_jit_cached_overloads": "function",
            "_set_jit_overload_cache": "function",
            "_try_get_jit_cached_function": "function",
            "_set_jit_function_cache": "function"
        },
        "_trace": {
            "_flatten": "variable",
            "_unflatten": "variable",
            "_create_interpreter_name_lookup_fn": "function",
            "_unique_state_dict": "function",
            "ONNXTracedModule": "class",
            "_clone_inputs": "function",
            "_JIT_TIME": "variable",
            "_JIT_DISABLE": "variable",
            "_JIT_STATS": "variable",
            "_time": "function",
            "verify": "function",
            "_verify_equal": "function",
            "indent": "function",
            "TracingCheckError": "class",
            "_check_trace": "function",
            "TracerWarning": "class",
            "make_tuple": "function",
            "make_module": "function",
            "wrap_check_inputs": "function",
            "trace": "function",
            "trace_module": "function",
            "is_tracing": "function",
            "TracedModule": "class",
            "TopLevelTracedModule": "class",
            "_script_if_tracing": "function",
            "_get_trace_graph": "function"
        },
        "": {
            "_fork": "variable",
            "_wait": "variable",
            "export_opnames": "function",
            "Error": "variable",
            "Error.__name__": "variable",
            "Error.__qualname__": "variable",
            "annotate": "function",
            "script_if_tracing": "function",
            "isinstance": "function",
            "_hide_source_ranges": "function"
        }
    },
    "multiprocessing": {
        "pool": {
            "clean_worker": "function",
            "Pool": "class"
        },
        "queue": {
            "ConnectionWrapper": "class",
            "Queue": "class",
            "SimpleQueue": "class"
        },
        "reductions": {
            "StorageWeakRef": "class",
            "SharedCache": "class",
            "shared_cache": "variable",
            "rebuild_event": "function",
            "reduce_event": "function",
            "rebuild_tensor": "function",
            "rebuild_cuda_tensor": "function",
            "reduce_tensor": "function",
            "fd_id": "function",
            "storage_from_cache": "function",
            "rebuild_storage_fd": "function",
            "rebuild_storage_filename": "function",
            "rebuild_storage_empty": "function",
            "reduce_storage": "function",
            "init_reductions": "function"
        },
        "spawn": {
            "ProcessException": "class",
            "ProcessRaisedException": "class",
            "ProcessExitedException": "class",
            "_wrap": "function",
            "ProcessContext": "class",
            "SpawnContext": "class",
            "start_processes": "function",
            "spawn": "function"
        },
        "_atfork": {
            "__all__": "variable",
            "register_after_fork": "function"
        },
        "": {
            "__all__": "variable"
        }
    },
    "nn": {
        "backends": {
            "thnn": {
                "_get_thnn_function_backend": "function"
            }
        },
        "intrinsic": {
            "modules": {
                "fused": {
                    "_FusedModule": "class",
                    "ConvReLU1d": "class",
                    "ConvReLU2d": "class",
                    "ConvReLU3d": "class",
                    "LinearReLU": "class",
                    "ConvBn1d": "class",
                    "ConvBn2d": "class",
                    "ConvBnReLU1d": "class",
                    "ConvBnReLU2d": "class",
                    "ConvBn3d": "class",
                    "ConvBnReLU3d": "class",
                    "BNReLU2d": "class",
                    "BNReLU3d": "class"
                },
                "": {
                    "__all__": "variable"
                }
            },
            "qat": {
                "modules": {
                    "conv_fused": {
                        "_BN_CLASS_MAP": "variable",
                        "MOD": "variable",
                        "_ConvBnNd": "class",
                        "ConvBn1d": "class",
                        "ConvBnReLU1d": "class",
                        "ConvBn2d": "class",
                        "ConvBnReLU2d": "class",
                        "ConvReLU2d": "class",
                        "ConvBn3d": "class",
                        "ConvBnReLU3d": "class",
                        "ConvReLU3d": "class",
                        "update_bn_stats": "function",
                        "freeze_bn_stats": "function"
                    },
                    "linear_relu": {
                        "LinearReLU": "class"
                    },
                    "": {
                        "__all__": "variable"
                    }
                }
            },
            "quantized": {
                "dynamic": {
                    "modules": {
                        "linear_relu": {
                            "LinearReLU": "class"
                        },
                        "": {
                            "__all__": "variable"
                        }
                    }
                },
                "modules": {
                    "bn_relu": {
                        "BNReLU2d": "class",
                        "BNReLU3d": "class"
                    },
                    "conv_relu": {
                        "_reverse_repeat_padding": "variable",
                        "ConvReLU1d": "class",
                        "ConvReLU2d": "class",
                        "ConvReLU3d": "class"
                    },
                    "linear_relu": {
                        "LinearReLU": "class"
                    },
                    "": {
                        "__all__": "variable"
                    }
                }
            }
        },
        "modules": {
            "activation": {
                "Threshold": "class",
                "ReLU": "class",
                "RReLU": "class",
                "Hardtanh": "class",
                "ReLU6": "class",
                "Sigmoid": "class",
                "Hardsigmoid": "class",
                "Tanh": "class",
                "SiLU": "class",
                "Mish": "class",
                "Hardswish": "class",
                "ELU": "class",
                "CELU": "class",
                "SELU": "class",
                "GLU": "class",
                "GELU": "class",
                "Hardshrink": "class",
                "LeakyReLU": "class",
                "LogSigmoid": "class",
                "Softplus": "class",
                "Softshrink": "class",
                "MultiheadAttention": "class",
                "PReLU": "class",
                "Softsign": "class",
                "Tanhshrink": "class",
                "Softmin": "class",
                "Softmax": "class",
                "Softmax2d": "class",
                "LogSoftmax": "class"
            },
            "adaptive": {
                "_ASMoutput": "variable",
                "AdaptiveLogSoftmaxWithLoss": "class"
            },
            "batchnorm": {
                "_NormBase": "class",
                "_BatchNorm": "class",
                "_LazyNormBase": "class",
                "BatchNorm1d": "class",
                "LazyBatchNorm1d": "class",
                "BatchNorm2d": "class",
                "LazyBatchNorm2d": "class",
                "BatchNorm3d": "class",
                "LazyBatchNorm3d": "class",
                "SyncBatchNorm": "class"
            },
            "channelshuffle": {
                "ChannelShuffle": "class"
            },
            "container": {
                "T": "variable",
                "Container": "class",
                "Sequential": "class",
                "ModuleList": "class",
                "ModuleDict": "class",
                "ParameterList": "class",
                "ParameterDict": "class"
            },
            "conv": {
                "convolution_notes": "variable",
                "_ConvNd": "class",
                "Conv1d": "class",
                "Conv2d": "class",
                "Conv3d": "class",
                "_ConvTransposeNd": "class",
                "ConvTranspose1d": "class",
                "ConvTranspose2d": "class",
                "ConvTranspose3d": "class",
                "_ConvTransposeMixin": "class",
                "_LazyConvXdMixin": "class",
                "LazyConv1d": "class",
                "LazyConv2d": "class",
                "LazyConv3d": "class",
                "LazyConvTranspose1d": "class",
                "LazyConvTranspose2d": "class",
                "LazyConvTranspose3d": "class"
            },
            "distance": {
                "PairwiseDistance": "class",
                "CosineSimilarity": "class"
            },
            "dropout": {
                "_DropoutNd": "class",
                "Dropout": "class",
                "Dropout2d": "class",
                "Dropout3d": "class",
                "AlphaDropout": "class",
                "FeatureAlphaDropout": "class"
            },
            "flatten": {
                "Flatten": "class",
                "Unflatten": "class"
            },
            "fold": {
                "Fold": "class",
                "Unfold": "class"
            },
            "instancenorm": {
                "_InstanceNorm": "class",
                "InstanceNorm1d": "class",
                "LazyInstanceNorm1d": "class",
                "InstanceNorm2d": "class",
                "LazyInstanceNorm2d": "class",
                "InstanceNorm3d": "class",
                "LazyInstanceNorm3d": "class"
            },
            "lazy": {
                "_LazyProtocol": "class",
                "LazyModuleMixin": "class"
            },
            "linear": {
                "Identity": "class",
                "Linear": "class",
                "NonDynamicallyQuantizableLinear": "class",
                "Bilinear": "class",
                "LazyLinear": "class"
            },
            "loss": {
                "_Loss": "class",
                "_WeightedLoss": "class",
                "L1Loss": "class",
                "NLLLoss": "class",
                "NLLLoss2d": "class",
                "PoissonNLLLoss": "class",
                "GaussianNLLLoss": "class",
                "KLDivLoss": "class",
                "MSELoss": "class",
                "BCELoss": "class",
                "BCEWithLogitsLoss": "class",
                "HingeEmbeddingLoss": "class",
                "MultiLabelMarginLoss": "class",
                "SmoothL1Loss": "class",
                "HuberLoss": "class",
                "SoftMarginLoss": "class",
                "CrossEntropyLoss": "class",
                "MultiLabelSoftMarginLoss": "class",
                "CosineEmbeddingLoss": "class",
                "MarginRankingLoss": "class",
                "MultiMarginLoss": "class",
                "TripletMarginLoss": "class",
                "TripletMarginWithDistanceLoss": "class",
                "CTCLoss": "class"
            },
            "module": {
                "_grad_t": "variable",
                "T": "variable",
                "_IncompatibleKeys": "class",
                "_addindent": "function"
            },
            "normalization": {
                "LocalResponseNorm": "class",
                "CrossMapLRN2d": "class",
                "_shape_t": "variable",
                "LayerNorm": "class",
                "GroupNorm": "class"
            },
            "padding": {
                "_ConstantPadNd": "class",
                "ConstantPad1d": "class",
                "ConstantPad2d": "class",
                "ConstantPad3d": "class",
                "_ReflectionPadNd": "class",
                "ReflectionPad1d": "class",
                "ReflectionPad2d": "class",
                "ReflectionPad3d": "class",
                "_ReplicationPadNd": "class",
                "ReplicationPad1d": "class",
                "ReplicationPad2d": "class",
                "ReplicationPad3d": "class",
                "ZeroPad2d": "class"
            },
            "pixelshuffle": {
                "PixelShuffle": "class",
                "PixelUnshuffle": "class"
            },
            "pooling": {
                "_MaxPoolNd": "class",
                "MaxPool1d": "class",
                "MaxPool2d": "class",
                "MaxPool3d": "class",
                "_MaxUnpoolNd": "class",
                "MaxUnpool1d": "class",
                "MaxUnpool2d": "class",
                "MaxUnpool3d": "class",
                "_AvgPoolNd": "class",
                "AvgPool1d": "class",
                "AvgPool2d": "class",
                "AvgPool3d": "class",
                "FractionalMaxPool2d": "class",
                "FractionalMaxPool3d": "class",
                "_LPPoolNd": "class",
                "LPPool1d": "class",
                "LPPool2d": "class",
                "_AdaptiveMaxPoolNd": "class",
                "AdaptiveMaxPool1d": "class",
                "AdaptiveMaxPool2d": "class",
                "AdaptiveMaxPool3d": "class",
                "_AdaptiveAvgPoolNd": "class",
                "AdaptiveAvgPool1d": "class",
                "AdaptiveAvgPool2d": "class",
                "AdaptiveAvgPool3d": "class"
            },
            "rnn": {
                "_rnn_impls": "variable",
                "apply_permutation": "function",
                "RNNBase": "class",
                "RNN": "class",
                "LSTM": "class",
                "GRU": "class",
                "RNNCellBase": "class",
                "RNNCell": "class",
                "LSTMCell": "class",
                "GRUCell": "class"
            },
            "sparse": {
                "Embedding": "class",
                "EmbeddingBag": "class"
            },
            "transformer": {
                "Transformer": "class",
                "TransformerEncoder": "class",
                "TransformerDecoder": "class",
                "TransformerEncoderLayer": "class",
                "TransformerDecoderLayer": "class",
                "_get_clones": "function",
                "_get_activation_fn": "function"
            },
            "upsampling": {
                "Upsample": "class",
                "UpsamplingNearest2d": "class",
                "UpsamplingBilinear2d": "class"
            },
            "utils": {
                "_ntuple": "function",
                "_single": "variable",
                "_pair": "variable",
                "_triple": "variable",
                "_quadruple": "variable",
                "_reverse_repeat_tuple": "function",
                "_list_with_default": "function",
                "consume_prefix_in_state_dict_if_present": "function"
            },
            "_functions": {
                "SyncBatchNorm": "class",
                "CrossMapLRN2d": "class",
                "BackwardHookFunction": "class"
            },
            "": {
                "__all__": "variable"
            }
        },
        "parallel": {
            "comm": {
                "broadcast": "function",
                "broadcast_coalesced": "function",
                "reduce_add": "function",
                "reduce_add_coalesced": "function",
                "scatter": "function",
                "gather": "function"
            },
            "data_parallel": {
                "_check_balance": "function",
                "DataParallel": "class",
                "data_parallel": "function"
            },
            "distributed": {
                "RPC_AVAILABLE": "variable",
                "_tree_flatten_with_rref": "function",
                "_tree_unflatten_with_rref": "function",
                "_find_tensors": "function",
                "_dump_DDP_relevant_env_vars": "function",
                "_DDPSink": "class",
                "_DDPJoinHook": "class",
                "DistributedDataParallel": "class"
            },
            "parallel_apply": {
                "get_a_var": "function",
                "parallel_apply": "function"
            },
            "replicate": {
                "_is_script_module": "function",
                "_is_script_method": "function",
                "_init_script_module": "function",
                "_is_jit_enabled": "function",
                "_replicatable_module": "function",
                "_broadcast_coalesced_reshape": "function",
                "replicate": "function"
            },
            "scatter_gather": {
                "is_namedtuple": "function",
                "scatter": "function",
                "scatter_kwargs": "function",
                "gather": "function"
            },
            "_functions": {
                "Broadcast": "class",
                "ReduceAddCoalesced": "class",
                "Gather": "class",
                "Scatter": "class",
                "_get_stream": "function"
            },
            "": {
                "__all__": "variable",
                "DistributedDataParallelCPU": "function"
            }
        },
        "qat": {
            "modules": {
                "conv": {
                    "Conv2d": "class",
                    "Conv3d": "class"
                },
                "linear": {
                    "Linear": "class"
                },
                "": {
                    "__all__": "variable"
                }
            }
        },
        "quantizable": {
            "modules": {
                "activation": {
                    "MultiheadAttention": "class"
                },
                "rnn": {
                    "LSTMCell": "class",
                    "_LSTMSingleLayer": "class",
                    "_LSTMLayer": "class",
                    "LSTM": "class"
                },
                "": {
                    "__all__": "variable"
                }
            }
        },
        "quantized": {
            "dynamic": {
                "modules": {
                    "linear": {
                        "Linear": "class"
                    },
                    "rnn": {
                        "apply_permutation": "function",
                        "PackedParameter": "class",
                        "RNNBase": "class",
                        "LSTM": "class",
                        "GRU": "class",
                        "RNNCellBase": "class",
                        "RNNCell": "class",
                        "LSTMCell": "class",
                        "GRUCell": "class"
                    },
                    "": {
                        "__all__": "variable"
                    }
                }
            },
            "modules": {
                "activation": {
                    "ReLU6": "class",
                    "Hardswish": "class",
                    "ELU": "class",
                    "LeakyReLU": "class",
                    "Sigmoid": "class"
                },
                "batchnorm": {
                    "BatchNorm2d": "class",
                    "BatchNorm3d": "class"
                },
                "embedding_ops": {
                    "EmbeddingPackedParams": "class",
                    "Embedding": "class",
                    "EmbeddingBag": "class"
                },
                "functional_modules": {
                    "FloatFunctional": "class",
                    "FXFloatFunctional": "class",
                    "QFunctional": "class"
                },
                "linear": {
                    "LinearPackedParams": "class",
                    "Linear": "class"
                },
                "normalization": {
                    "LayerNorm": "class",
                    "GroupNorm": "class",
                    "InstanceNorm1d": "class",
                    "InstanceNorm2d": "class",
                    "InstanceNorm3d": "class"
                },
                "utils": {
                    "_quantize_weight": "function",
                    "_ntuple_from_first": "function",
                    "hide_packed_params_repr": "function",
                    "_pair_from_first": "variable"
                },
                "": {
                    "Quantize": "class",
                    "DeQuantize": "class",
                    "__all__": "variable"
                }
            },
            "_reference": {
                "modules": {
                    "conv": {
                        "_ConvNd": "class",
                        "Conv1d": "class",
                        "Conv2d": "class",
                        "Conv3d": "class"
                    },
                    "linear": {
                        "Linear": "class"
                    },
                    "utils": {
                        "_quantize_and_dequantize_weight": "function",
                        "_save_weight_qparams": "function",
                        "_get_weight_qparam_keys": "function"
                    },
                    "": {
                        "__all__": "variable"
                    }
                }
            }
        },
        "utils": {
            "clip_grad": {
                "_tensor_or_tensors": "variable",
                "clip_grad_norm_": "function",
                "clip_grad_norm": "function",
                "clip_grad_value_": "function"
            },
            "convert_parameters": {
                "parameters_to_vector": "function",
                "vector_to_parameters": "function",
                "_check_param_device": "function"
            },
            "fusion": {
                "fuse_conv_bn_eval": "function",
                "fuse_conv_bn_weights": "function",
                "fuse_linear_bn_eval": "function",
                "fuse_linear_bn_weights": "function"
            },
            "init": {
                "skip_init": "function"
            },
            "memory_format": {
                "convert_conv2d_weight_memory_format": "function"
            },
            "parametrizations": {
                "_is_orthogonal": "function",
                "_make_orthogonal": "function",
                "_OrthMaps": "class",
                "_Orthogonal": "class",
                "orthogonal": "function",
                "_SpectralNorm": "class",
                "spectral_norm": "function"
            },
            "parametrize": {
                "_cache_enabled": "variable",
                "cached": "function",
                "_register_parameter_or_buffer": "function",
                "ParametrizationList": "class",
                "_inject_new_class": "function",
                "_inject_property": "function",
                "register_parametrization": "function",
                "is_parametrized": "function",
                "remove_parametrizations": "function"
            },
            "prune": {
                "BasePruningMethod": "class",
                "PruningContainer": "class",
                "Identity": "class",
                "RandomUnstructured": "class",
                "L1Unstructured": "class",
                "RandomStructured": "class",
                "LnStructured": "class",
                "CustomFromMask": "class",
                "identity": "function",
                "random_unstructured": "function",
                "l1_unstructured": "function",
                "random_structured": "function",
                "ln_structured": "function",
                "global_unstructured": "function",
                "custom_from_mask": "function",
                "remove": "function",
                "is_pruned": "function",
                "_validate_pruning_amount_init": "function",
                "_validate_pruning_amount": "function",
                "_validate_structured_pruning": "function",
                "_compute_nparams_toprune": "function",
                "_validate_pruning_dim": "function",
                "_compute_norm": "function"
            },
            "rnn": {
                "PackedSequence_": "variable",
                "PackedSequence_.__annotations__": "variable",
                "bind": "function",
                "PackedSequence": "class",
                "_packed_sequence_init_args": "function",
                "_packed_sequence_init": "function",
                "invert_permutation": "function",
                "pack_padded_sequence": "function",
                "pad_packed_sequence": "function",
                "pad_sequence": "function",
                "pack_sequence": "function"
            },
            "spectral_norm": {
                "SpectralNorm": "class",
                "SpectralNormLoadStateDictPreHook": "class",
                "SpectralNormStateDictHook": "class",
                "T_module": "variable",
                "spectral_norm": "function",
                "remove_spectral_norm": "function"
            },
            "weight_norm": {
                "WeightNorm": "class",
                "T_module": "variable",
                "weight_norm": "function",
                "remove_weight_norm": "function"
            }
        },
        "common_types": {
            "T": "variable",
            "_scalar_or_tuple_any_t": "variable",
            "_scalar_or_tuple_1_t": "variable",
            "_scalar_or_tuple_2_t": "variable",
            "_scalar_or_tuple_3_t": "variable",
            "_scalar_or_tuple_4_t": "variable",
            "_scalar_or_tuple_5_t": "variable",
            "_scalar_or_tuple_6_t": "variable",
            "_size_any_t": "variable",
            "_size_1_t": "variable",
            "_size_2_t": "variable",
            "_size_3_t": "variable",
            "_size_4_t": "variable",
            "_size_5_t": "variable",
            "_size_6_t": "variable",
            "_size_any_opt_t": "variable",
            "_size_2_opt_t": "variable",
            "_size_3_opt_t": "variable",
            "_ratio_2_t": "variable",
            "_ratio_3_t": "variable",
            "_ratio_any_t": "variable",
            "_tensor_list_t": "variable",
            "_maybe_indices_t": "variable"
        },
        "functional": {
            "avg_pool1d": "variable",
            "avg_pool3d": "variable",
            "adaptive_avg_pool2d": "function",
            "adaptive_avg_pool3d": "function",
            "dropout": "function",
            "alpha_dropout": "function",
            "dropout2d": "function",
            "dropout3d": "function",
            "feature_alpha_dropout": "function",
            "_threshold": "function",
            "threshold": "variable",
            "threshold_": "variable",
            "glu": "function",
            "hardtanh": "function",
            "hardtanh_": "variable",
            "selu": "function",
            "selu_": "variable",
            "leaky_relu": "function",
            "leaky_relu_": "variable",
            "logsigmoid": "variable",
            "_get_softmax_dim": "function",
            "softmin": "function",
            "softmax": "function",
            "gumbel_softmax": "function",
            "log_softmax": "function",
            "softshrink": "variable",
            "pixel_unshuffle": "variable",
            "upsample": "function",
            "upsample.__doc__": "variable",
            "interpolate": "function",
            "interpolate.__doc__": "variable",
            "upsample_nearest": "function",
            "upsample_nearest.__doc__": "variable",
            "upsample_bilinear": "function",
            "upsample_bilinear.__doc__": "variable",
            "GRID_SAMPLE_INTERPOLATION_MODES": "variable",
            "GRID_SAMPLE_PADDING_MODES": "variable",
            "grid_sample": "function",
            "affine_grid": "function",
            "_pad": "function",
            "pad": "variable",
            "pairwise_distance": "function",
            "pdist": "variable",
            "one_hot": "variable"
        },
        "init": {
            "_no_grad_uniform_": "function",
            "_no_grad_normal_": "function",
            "_no_grad_trunc_normal_": "function",
            "_no_grad_fill_": "function",
            "_no_grad_zero_": "function",
            "calculate_gain": "function",
            "uniform_": "function",
            "normal_": "function",
            "trunc_normal_": "function",
            "constant_": "function",
            "ones_": "function",
            "zeros_": "function",
            "eye_": "function",
            "dirac_": "function",
            "_calculate_fan_in_and_fan_out": "function",
            "xavier_uniform_": "function",
            "xavier_normal_": "function",
            "_calculate_correct_fan": "function",
            "kaiming_uniform_": "function",
            "kaiming_normal_": "function",
            "orthogonal_": "function",
            "sparse_": "function",
            "_make_deprecate": "function",
            "uniform": "variable",
            "normal": "variable",
            "constant": "variable",
            "eye": "variable",
            "dirac": "variable",
            "xavier_uniform": "variable",
            "xavier_normal": "variable",
            "kaiming_uniform": "variable",
            "kaiming_normal": "variable",
            "orthogonal": "variable",
            "sparse": "variable"
        },
        "parameter": {
            "Parameter": "class",
            "UninitializedTensorMixin": "class",
            "is_lazy": "function",
            "UninitializedParameter": "class",
            "UninitializedBuffer": "class"
        },
        "_reduction": {
            "get_enum": "function",
            "legacy_get_string": "function",
            "legacy_get_enum": "function"
        },
        "": {
            "factory_kwargs": "function"
        }
    },
    "onnx": {
        "operators": {
            "shape_as_tensor": "function",
            "reshape_from_tensor_shape": "function"
        },
        "symbolic_caffe2": {
            "register_quantized_ops": "function",
            "_permute_helper": "function",
            "nchw2nhwc": "function",
            "nhwc2nchw": "function",
            "linear_prepack": "function",
            "linear": "function",
            "conv_prepack": "function",
            "conv2d": "function",
            "conv2d_relu": "function",
            "add": "function",
            "relu": "function",
            "quantize_per_tensor": "function",
            "dequantize": "function",
            "_empty_affine_quantized": "function",
            "upsample_nearest2d": "function",
            "max_pool2d": "function",
            "avg_pool2d": "function",
            "reshape": "function",
            "slice": "function",
            "cat": "function",
            "sigmoid": "function"
        },
        "symbolic_helper": {
            "_sum": "variable",
            "_parse_arg": "function",
            "_maybe_get_const": "function",
            "_maybe_get_scalar": "function",
            "_get_const": "function",
            "_unpack_list": "function",
            "_is_packed_list": "function",
            "parse_args": "function",
            "_scalar": "function",
            "_if_scalar_type_as": "function",
            "_is_none": "function",
            "_is_value": "function",
            "_is_constant": "function",
            "_is_tensor": "function",
            "_is_list": "function",
            "_is_tensor_list": "function",
            "_is_scalar_list": "function",
            "_get_tensor_rank": "function",
            "_get_tensor_sizes": "function",
            "_get_tensor_dim_size": "function",
            "_unimplemented": "function",
            "_onnx_unsupported": "function",
            "_onnx_opset_unsupported": "function",
            "_onnx_opset_unsupported_detailed": "function",
            "_block_list_in_opset": "function",
            "_try_get_scalar_type": "function",
            "_select_helper": "function",
            "_slice_helper": "function",
            "_is_fp": "function",
            "_dtype_is_fp": "function",
            "_generate_wrapped_number": "function",
            "_sort_helper": "function",
            "_topk_helper": "function",
            "_interpolate_warning": "function",
            "_unsqueeze_helper": "function",
            "_squeeze_helper": "function",
            "_reducesum_helper": "function",
            "_interpolate_size_to_scales": "function",
            "_interpolate_get_scales_if_available": "function",
            "_get_interpolate_attributes": "function",
            "_interpolate_get_scales": "function",
            "_interpolate_get_scales_and_mode": "function",
            "_interpolate_helper": "function",
            "__interpolate_helper": "function",
            "_unbind_helper": "function",
            "_scatter_helper": "function",
            "_repeat_interleave_split_helper": "function",
            "_arange_cast_helper": "function",
            "_arange_helper": "function",
            "_size_helper": "function",
            "_index_fill_reshape_helper": "function",
            "_reshape_helper": "function",
            "_batchnorm_helper": "function",
            "_avgpool_helper": "function",
            "check_training_mode": "function",
            "_flatten_helper": "function",
            "_is_split_static": "function",
            "_optional_input_placeholder_tensor": "function",
            "_handle_reduce_dim_none": "function",
            "_default_onnx_opset_version": "variable",
            "_onnx_main_opset": "variable",
            "_onnx_stable_opsets": "variable",
            "_export_onnx_opset_version": "variable",
            "_set_opset_version": "function",
            "_operator_export_type": "variable",
            "_set_operator_export_type": "function",
            "_training_mode": "variable",
            "_set_training_mode": "function",
            "_onnx_shape_inference": "variable",
            "_set_onnx_shape_inference": "function",
            "cast_pytorch_to_onnx": "variable",
            "scalar_name_to_pytorch": "variable",
            "scalar_type_to_pytorch_type": "variable",
            "_cast_func_template": "function",
            "scalar_type_to_onnx": "variable"
        },
        "symbolic_opset10": {
            "div": "function",
            "_div_rounding_mode": "function",
            "_floor_divide": "function",
            "sort": "function",
            "topk": "function",
            "_max_pool": "function",
            "max_pool1d": "variable",
            "max_pool2d": "variable",
            "max_pool3d": "variable",
            "max_pool1d_with_indices": "variable",
            "max_pool2d_with_indices": "variable",
            "max_pool3d_with_indices": "variable",
            "_avg_pool": "function",
            "avg_pool1d": "variable",
            "avg_pool2d": "variable",
            "avg_pool3d": "variable",
            "_interpolate": "function",
            "upsample_nearest1d": "variable",
            "upsample_nearest2d": "variable",
            "upsample_nearest3d": "variable",
            "upsample_linear1d": "variable",
            "upsample_bilinear2d": "variable",
            "upsample_trilinear3d": "variable",
            "__interpolate": "function",
            "_slice": "function",
            "slice": "function",
            "flip": "function",
            "fmod": "function",
            "embedding_bag": "function",
            "fake_quantize_per_tensor_affine": "function",
            "isinf": "function"
        },
        "symbolic_opset11": {
            "hardtanh": "function",
            "clamp": "function",
            "clamp_min": "function",
            "clamp_max": "function",
            "relu6": "function",
            "select": "function",
            "index_put": "function",
            "pixel_shuffle": "function",
            "_interpolate": "function",
            "upsample_nearest1d": "variable",
            "upsample_nearest2d": "variable",
            "upsample_nearest3d": "variable",
            "upsample_linear1d": "variable",
            "upsample_bilinear2d": "variable",
            "upsample_trilinear3d": "variable",
            "upsample_bicubic2d": "variable",
            "__interpolate": "function",
            "gather": "function",
            "scatter": "function",
            "cumsum": "function",
            "masked_select": "function",
            "masked_scatter": "function",
            "_len": "function",
            "__getitem_": "function",
            "_set_item": "function",
            "append": "function",
            "add": "function",
            "insert": "function",
            "pop": "function",
            "Delete": "function",
            "cat": "function",
            "stack": "function",
            "_unique2": "function",
            "_avg_pool": "function",
            "avg_pool1d": "variable",
            "avg_pool2d": "variable",
            "avg_pool3d": "variable",
            "unique_dim": "function",
            "topk": "function",
            "sort": "function",
            "round": "function",
            "split": "function",
            "split_with_sizes": "function",
            "unbind": "function",
            "_prepare_onnx_paddings": "function",
            "constant_pad_nd": "function",
            "reflection_pad": "function",
            "replication_pad": "function",
            "reflection_pad1d": "variable",
            "reflection_pad2d": "variable",
            "reflection_pad3d": "variable",
            "replication_pad1d": "variable",
            "replication_pad2d": "variable",
            "replication_pad3d": "variable",
            "linalg_det": "function",
            "logdet": "function",
            "arange": "function",
            "_dim_arange": "function",
            "size": "function",
            "squeeze": "function",
            "unsqueeze": "function",
            "mm": "function",
            "index": "function",
            "index_fill": "function",
            "index_copy": "function",
            "__rshift_": "function",
            "__lshift_": "function",
            "_get_im2col_indices_along_dim": "function",
            "_get_im2col_padded_input": "function",
            "_get_im2col_output_shape": "function",
            "im2col": "function",
            "narrow": "function",
            "flatten": "function",
            "embedding_bag": "function",
            "prim_ConstantChunk": "function",
            "chunk": "function",
            "normal": "function"
        },
        "symbolic_opset12": {
            "einsum": "function",
            "outer": "function",
            "dropout": "function",
            "nll_loss": "function",
            "nll_loss2d": "function",
            "nll_loss_nd": "function",
            "cross_entropy_loss": "function",
            "binary_cross_entropy_with_logits": "function",
            "celu": "function",
            "argmax": "function",
            "argmin": "function",
            "pow": "function",
            "ge": "function",
            "le": "function",
            "unfold": "function",
            "tensordot": "function"
        },
        "symbolic_opset13": {
            "softmax": "function",
            "log_softmax": "function",
            "frobenius_norm": "function",
            "split": "function",
            "split_with_sizes": "function",
            "unsafe_split": "function",
            "unsafe_split_with_sizes": "function",
            "unbind": "function",
            "nonzero_numpy": "function",
            "where": "function",
            "fake_quantize_per_channel_affine": "function",
            "_reduce_op_symbolic": "function",
            "_reduce_with_dtype": "function",
            "sum": "variable",
            "unsafe_chunk": "function",
            "repeat_interleave": "function"
        },
        "symbolic_opset14": {
            "hardswish": "function",
            "tril": "function",
            "triu": "function",
            "reshape": "function",
            "batch_norm": "function"
        },
        "symbolic_opset7": {
            "block_listed_operators": "variable",
            "max": "function",
            "min": "function",
            "div": "function",
            "_div_rounding_mode": "function",
            "_floor_divide": "function"
        },
        "symbolic_opset8": {
            "block_listed_operators": "variable",
            "_interpolate": "function",
            "upsample_nearest1d": "variable",
            "upsample_nearest2d": "variable",
            "upsample_nearest3d": "variable",
            "upsample_linear1d": "variable",
            "upsample_bilinear2d": "variable",
            "upsample_trilinear3d": "variable",
            "__interpolate": "function",
            "_try_cast_integer_to_float": "function",
            "_cast_to_type": "function",
            "_comparison_operator": "function",
            "gt": "function",
            "lt": "function",
            "bmm": "function",
            "matmul": "function",
            "prelu": "function",
            "mm": "function",
            "addmm": "function",
            "flatten": "function",
            "_constant_fill": "function",
            "empty": "function",
            "empty_like": "function",
            "zeros": "function",
            "zeros_like": "function",
            "ones": "function",
            "ones_like": "function",
            "full": "function",
            "full_like": "function",
            "repeat": "function"
        },
        "symbolic_opset9": {
            "unused": "function",
            "_shape_as_tensor": "function",
            "_reshape_from_tensor": "function",
            "reshape": "function",
            "reshape_as": "function",
            "add": "function",
            "sub": "function",
            "rsub": "function",
            "mul": "function",
            "div": "function",
            "_div_rounding_mode": "function",
            "_trunc_divide": "function",
            "_floor_divide": "function",
            "floor_divide": "function",
            "floordiv": "function",
            "true_divide": "function",
            "reciprocal": "function",
            "cat": "function",
            "stack": "function",
            "_list": "function",
            "mm": "function",
            "bmm": "function",
            "matmul": "function",
            "addmm": "function",
            "neg": "function",
            "sqrt": "function",
            "rsqrt": "function",
            "tanh": "function",
            "sin": "function",
            "cos": "function",
            "tan": "function",
            "asin": "function",
            "acos": "function",
            "atan": "function",
            "sigmoid": "function",
            "sign": "function",
            "_slice": "function",
            "_maybe_cast_reduce_op_input": "function",
            "_reduce_op_symbolic": "function",
            "overload_by_arg_count": "function",
            "_reduce_with_dtype": "function",
            "sum": "variable",
            "mean": "variable",
            "prod": "variable",
            "cumsum": "function",
            "_sample_dirichlet": "function",
            "_standard_gamma": "function",
            "t": "function",
            "expand": "function",
            "expand_as": "function",
            "embedding": "function",
            "embedding_bag": "function",
            "size": "function",
            "transpose": "function",
            "permute": "function",
            "view": "function",
            "view_as": "function",
            "prim_ConstantSplit": "function",
            "prim_ConstantChunk": "function",
            "unsafe_chunk": "function",
            "split": "function",
            "unsafe_split": "function",
            "split_with_sizes": "function",
            "unsafe_split_with_sizes": "function",
            "unbind": "function",
            "select": "function",
            "square": "function",
            "squeeze": "function",
            "prelu": "function",
            "silu": "function",
            "mish": "function",
            "relu": "function",
            "relu6": "function",
            "ceil": "function",
            "floor": "function",
            "_len": "function",
            "threshold": "function",
            "leaky_relu": "function",
            "glu": "function",
            "softmax": "function",
            "softplus": "function",
            "get_pool_ceil_padding": "function",
            "_max_pool": "function",
            "max_pool1d": "variable",
            "max_pool2d": "variable",
            "max_pool3d": "variable",
            "max_pool1d_with_indices": "variable",
            "max_pool2d_with_indices": "variable",
            "max_pool3d_with_indices": "variable",
            "_avg_pool": "function",
            "avg_pool1d": "variable",
            "avg_pool2d": "variable",
            "avg_pool3d": "variable",
            "_adaptive_pool": "function",
            "adaptive_avg_pool1d": "variable",
            "adaptive_avg_pool2d": "variable",
            "adaptive_avg_pool3d": "variable",
            "adaptive_max_pool1d": "variable",
            "adaptive_max_pool2d": "variable",
            "adaptive_max_pool3d": "variable",
            "_prepare_onnx_paddings": "function",
            "_convert_padding_node": "function",
            "constant_pad_nd": "function",
            "reflection_pad": "function",
            "replication_pad": "function",
            "reflection_pad1d": "variable",
            "reflection_pad2d": "variable",
            "reflection_pad3d": "variable",
            "replication_pad1d": "variable",
            "replication_pad2d": "variable",
            "replication_pad3d": "variable",
            "_interpolate": "function",
            "upsample_nearest1d": "variable",
            "upsample_nearest2d": "variable",
            "upsample_nearest3d": "variable",
            "upsample_linear1d": "variable",
            "upsample_bilinear2d": "variable",
            "upsample_trilinear3d": "variable",
            "__interpolate": "function",
            "bitwise_not": "function",
            "wrap_logical_op_with_cast_to": "function",
            "wrap_logical_op_with_cast_to_and_from": "function",
            "wrap_logical_op_with_negation": "function",
            "__not_": "function",
            "eq": "function",
            "ne": "function",
            "gt": "function",
            "gt_impl": "function",
            "lt": "function",
            "lt_impl": "function",
            "ge": "function",
            "le": "function",
            "__and_": "function",
            "__or_": "function",
            "logical_and": "function",
            "logical_or": "function",
            "logical_xor": "function",
            "__rshift_": "function",
            "__lshift_": "function",
            "where": "function",
            "log_softmax": "function",
            "_convolution": "function",
            "conv1d": "function",
            "conv2d": "function",
            "conv3d": "function",
            "conv_transpose1d": "function",
            "conv_transpose2d": "function",
            "conv_transpose3d": "function",
            "batch_norm": "function",
            "layer_norm": "function",
            "instance_norm": "function",
            "unfold": "function",
            "elu": "function",
            "selu": "function",
            "index_select": "function",
            "index_put": "function",
            "index_fill": "function",
            "index_copy": "function",
            "type_as": "function",
            "cosine_similarity": "function",
            "clone": "function",
            "abs": "function",
            "log": "function",
            "log1p": "function",
            "pow": "function",
            "clamp": "function",
            "clamp_min": "function",
            "clamp_max": "function",
            "max": "function",
            "min": "function",
            "exp": "function",
            "dropout": "function",
            "_unsupported_dropout": "function",
            "feature_dropout": "variable",
            "alpha_dropout": "variable",
            "feature_alpha_dropout": "variable",
            "dropout_": "variable",
            "feature_dropout_": "variable",
            "alpha_dropout_": "variable",
            "feature_alpha_dropout_": "variable",
            "norm": "function",
            "conv_tbc": "function",
            "_unique": "function",
            "_unique2": "function",
            "empty": "function",
            "empty_like": "function",
            "new_empty": "function",
            "scalar_tensor": "function",
            "tensor": "function",
            "as_tensor": "function",
            "zeros": "function",
            "zeros_like": "function",
            "new_zeros": "function",
            "ones": "function",
            "ones_like": "function",
            "new_ones": "function",
            "full": "function",
            "full_like": "function",
            "new_full": "function",
            "eye": "function",
            "slice": "function",
            "hardtanh": "function",
            "hardswish": "function",
            "hardsigmoid": "function",
            "alias": "function",
            "unsqueeze": "function",
            "sort": "function",
            "numel": "function",
            "topk": "function",
            "to": "function",
            "repeat": "function",
            "repeat_interleave": "function",
            "pixel_shuffle": "function",
            "_generic_rnn": "function",
            "_lstm_full": "function",
            "_lstm_packed": "function",
            "lstm": "function",
            "lstm_cell": "function",
            "_one_hidden_rnn": "function",
            "gru": "variable",
            "rnn_tanh": "variable",
            "rnn_relu": "variable",
            "_dim_arange": "function",
            "detach": "function",
            "contiguous": "function",
            "_pack_padded_sequence": "function",
            "_pad_packed_sequence": "function",
            "randn": "function",
            "rand": "function",
            "randn_like": "function",
            "rand_like": "function",
            "rrelu": "function",
            "bernoulli": "function",
            "log_sigmoid": "function",
            "erf": "function",
            "flatten": "function",
            "nonzero": "function",
            "nonzero_numpy": "function",
            "isnan": "function",
            "_any": "function",
            "_all": "function",
            "narrow": "function",
            "argmax": "function",
            "argmin": "function",
            "scatter": "function",
            "scatter_add": "function",
            "log2": "function",
            "prim_shape": "function",
            "prim_max": "function",
            "prim_min": "function",
            "prim_data": "function",
            "is_floating_point": "function",
            "__isnot_": "function",
            "prim_unchecked_cast": "function",
            "prim_dtype": "function",
            "prim_tolist": "function",
            "one_hot": "function",
            "gather": "function",
            "_var_mean": "function",
            "std": "function",
            "var": "function",
            "var_mean": "function",
            "std_mean": "function",
            "logsumexp": "function",
            "arange": "function",
            "linspace": "function",
            "masked_fill": "function",
            "index": "function",
            "frobenius_norm": "function",
            "multinomial": "function",
            "baddbmm": "function",
            "meshgrid": "function",
            "remainder": "function",
            "gelu": "function",
            "group_norm": "function",
            "_weight_norm": "function",
            "dim": "function",
            "__getitem_": "function",
            "item": "function",
            "take": "function",
            "_kl_div_log_target_impl": "function",
            "_kl_div_non_log_target_impl": "function",
            "kl_div": "function",
            "as_strided": "function",
            "__derive_index": "function",
            "__range_length": "function",
            "linear": "function",
            "hann_window": "function",
            "mv": "function",
            "dot": "function",
            "fill": "function",
            "index_add": "function",
            "roll": "function",
            "broadcast_tensors": "function"
        },
        "symbolic_registry": {
            "register_version": "function",
            "register_ops_helper": "function",
            "register_ops_in_version": "function",
            "get_ops_in_version": "function",
            "is_registered_version": "function",
            "register_op": "function",
            "is_registered_op": "function",
            "unregister_op": "function",
            "get_op_supported_version": "function",
            "get_registered_op": "function"
        },
        "utils": {
            "__IN_ONNX_EXPORT": "variable",
            "ONNXCheckerError": "class",
            "is_in_onnx_export": "function",
            "_params_dict": "variable",
            "select_model_mode_for_export": "function",
            "export": "function",
            "_is_constant_tensor_list": "function",
            "_split_tensor_list_constants": "function",
            "_optimize_graph": "function",
            "warn_on_static_input_change": "function",
            "_resolve_args_by_export_type": "function",
            "_decide_keep_init_as_input": "function",
            "_decide_add_node_names": "function",
            "_decide_constant_folding": "function",
            "_decide_external_data_format": "function",
            "_decide_input_format": "function",
            "_trace": "function",
            "_trace_and_get_graph_from_model": "function",
            "_get_param_count_list": "function",
            "_create_jit_graph": "function",
            "_get_named_param_dict": "function",
            "_get_example_outputs": "function",
            "_model_to_graph": "function",
            "export_to_pretty_string": "function",
            "_export_to_pretty_string": "function",
            "_find_missing_ops_onnx_export": "function",
            "_export": "function",
            "_set_input_and_output_names": "function",
            "attr_pattern": "variable",
            "_run_symbolic_method": "function",
            "_is_onnx_list": "function",
            "_add_attribute": "function",
            "_scalar": "function",
            "_newNode": "function",
            "_graph_op": "function",
            "_block_op": "function",
            "_add_block": "function",
            "_add_input_to_block": "function",
            "_add_output_to_block": "function",
            "_find_symbolic_in_registry": "function",
            "_run_symbolic_function": "function",
            "_graph_at": "function",
            "_graph_constant": "function",
            "_node_getitem": "function",
            "get_ns_op_name_from_custom_op": "function",
            "register_custom_op_symbolic": "function",
            "unregister_custom_op_symbolic": "function",
            "_validate_dynamic_axes": "function",
            "torch._C.Graph.op": "variable",
            "torch._C.Graph.at": "variable",
            "torch._C.Block.op": "variable",
            "torch._C.Graph.constant": "variable",
            "torch._C.Node.__getitem__": "variable"
        },
        "": {
            "TensorProtoDataType": "variable",
            "OperatorExportTypes": "variable",
            "TrainingMode": "variable",
            "PYTORCH_ONNX_CAFFE2_BUNDLE": "variable",
            "ONNX_ARCHIVE_MODEL_PROTO_NAME": "variable",
            "ir_version": "variable",
            "producer_name": "variable",
            "producer_version": "variable",
            "constant_folding_opset_versions": "variable",
            "ExportTypes": "class",
            "_export": "function",
            "export": "function",
            "export_to_pretty_string": "function",
            "_export_to_pretty_string": "function",
            "_optimize_trace": "function",
            "select_model_mode_for_export": "function",
            "_run_symbolic_function": "function",
            "_run_symbolic_method": "function",
            "is_in_onnx_export": "function",
            "register_custom_op_symbolic": "function",
            "unregister_custom_op_symbolic": "function"
        }
    },
    "optim": {
        "_multi_tensor": {
            "adadelta": {
                "Adadelta": "class"
            },
            "adagrad": {
                "Adagrad": "class"
            },
            "adam": {
                "Adam": "class"
            },
            "adamax": {
                "Adamax": "class"
            },
            "adamw": {
                "AdamW": "class"
            },
            "asgd": {
                "ASGD": "class"
            },
            "nadam": {
                "NAdam": "class"
            },
            "radam": {
                "RAdam": "class"
            },
            "rmsprop": {
                "RMSprop": "class"
            },
            "rprop": {
                "Rprop": "class"
            },
            "sgd": {
                "SGD": "class"
            }
        },
        "adadelta": {
            "Adadelta": "class"
        },
        "adagrad": {
            "Adagrad": "class"
        },
        "adam": {
            "Adam": "class"
        },
        "adamax": {
            "Adamax": "class"
        },
        "adamw": {
            "AdamW": "class"
        },
        "asgd": {
            "ASGD": "class"
        },
        "lbfgs": {
            "_cubic_interpolate": "function",
            "_strong_wolfe": "function",
            "LBFGS": "class"
        },
        "lr_scheduler": {
            "EPOCH_DEPRECATION_WARNING": "variable",
            "_LRScheduler": "class",
            "LambdaLR": "class",
            "MultiplicativeLR": "class",
            "StepLR": "class",
            "MultiStepLR": "class",
            "ConstantLR": "class",
            "LinearLR": "class",
            "ExponentialLR": "class",
            "SequentialLR": "class",
            "CosineAnnealingLR": "class",
            "ChainedScheduler": "class",
            "ReduceLROnPlateau": "class",
            "CyclicLR": "class",
            "CosineAnnealingWarmRestarts": "class",
            "OneCycleLR": "class"
        },
        "nadam": {
            "NAdam": "class"
        },
        "optimizer": {
            "_RequiredParameter": "class",
            "required": "variable",
            "Optimizer": "class"
        },
        "radam": {
            "RAdam": "class"
        },
        "rmsprop": {
            "RMSprop": "class"
        },
        "rprop": {
            "Rprop": "class"
        },
        "sgd": {
            "SGD": "class"
        },
        "sparse_adam": {
            "SparseAdam": "class"
        },
        "swa_utils": {
            "AveragedModel": "class",
            "update_bn": "function",
            "SWALR": "class"
        }
    },
    "package": {
        "analyze": {
            "is_from_package": {
                "is_from_package": "function"
            },
            "trace_dependencies": {
                "trace_dependencies": "function"
            }
        },
        "file_structure_representation": {
            "Directory": "class",
            "_create_directory_from_file_list": "function"
        },
        "find_file_dependencies": {
            "_ExtractModuleReferences": "class",
            "find_files_source_depends_on": "variable"
        },
        "glob_group": {
            "GlobPattern": "variable",
            "GlobGroup": "class"
        },
        "importer": {
            "ObjNotFoundError": "class",
            "ObjMismatchError": "class",
            "Importer": "class",
            "_SysImporter": "class",
            "sys_importer": "variable",
            "OrderedImporter": "class"
        },
        "package_exporter": {
            "_gate_torchscript_serialization": "variable",
            "ActionHook": "variable",
            "_ModuleProviderAction": "class",
            "PackagingErrorReason": "class",
            "_PatternInfo": "class",
            "EmptyMatchError": "class",
            "PackagingError": "class",
            "PackageExporter": "class",
            "rankdir": "variable",
            "_read_file": "function"
        },
        "package_importer": {
            "PackageImporter": "class",
            "_NEEDS_LOADING": "variable",
            "_ERR_MSG_PREFIX": "variable",
            "_ERR_MSG": "variable",
            "_PathNode": "class",
            "_PackageNode": "class",
            "_ModuleNode": "class",
            "_ExternNode": "class",
            "_orig_getfile": "variable",
            "patched_getfile": "function",
            "inspect.getfile": "variable",
            "_PackageResourceReader": "class"
        },
        "_digraph": {
            "DiGraph": "class"
        },
        "_directory_reader": {
            "_dtype_to_storage": "variable",
            "_HasStorage": "class",
            "DirectoryReader": "class"
        },
        "_importlib": {
            "_zip_searchorder": "variable",
            "_normalize_line_endings": "function",
            "_resolve_name": "function",
            "_sanity_check": "function",
            "_calc___package__": "function",
            "_normalize_path": "function"
        },
        "_mangling": {
            "_mangle_index": "variable",
            "PackageMangler": "class",
            "is_mangled": "function",
            "demangle": "function",
            "get_mangle_prefix": "function"
        },
        "_mock": {
            "_magic_methods": "variable",
            "MockedObject": "class",
            "install_method": "function"
        },
        "_package_unpickler": {
            "PackageUnpickler": "class"
        },
        "_stdlib": {
            "is_stdlib_module": "function",
            "_get_stdlib_modules": "function",
            "stdlib3_6": "variable",
            "stdlib3_7": "variable",
            "stdlib3_8": "variable",
            "stdlib3_9": "variable"
        }
    },
    "profiler": {
        "profiler": {
            "ProfilerAction": "class",
            "schedule": "function",
            "_default_schedule_fn": "function",
            "tensorboard_trace_handler": "function",
            "supported_activities": "function",
            "profile": "class"
        }
    },
    "quantization": {
        "fx": {
            "backend_config_dict": {
                "fbgemm": {
                    "get_fbgemm_backend_config_dict": "function"
                },
                "tensorrt": {
                    "get_tensorrt_backend_config_dict": "function"
                },
                "": {
                    "validate_backend_config_dict": "function"
                }
            },
            "convert": {
                "WEIGHT_PREPACK_OPS": "variable",
                "run_weight_observers": "function",
                "fold_weight": "function",
                "restore_state": "function",
                "convert": "function"
            },
            "fuse": {
                "Fuser": "class"
            },
            "fusion_patterns": {
                "FuseHandler": "class",
                "ConvBNReLUFusion": "class",
                "ModuleReLUFusion": "class"
            },
            "graph_module": {
                "FusedGraphModule": "class",
                "ObservedGraphModule": "class",
                "is_observed_module": "function",
                "ObservedStandaloneGraphModule": "class",
                "is_observed_standalone_module": "function",
                "_save_packed_weight": "function",
                "QuantizedGraphModule": "class"
            },
            "lower_to_fbgemm": {
                "lower_to_fbgemm": "function"
            },
            "lower_to_qnnpack": {
                "lower_to_qnnpack": "function"
            },
            "match_utils": {
                "MatchResult": "variable",
                "MatchAllNode": "class",
                "is_match": "function",
                "find_matches": "function"
            },
            "pattern_utils": {
                "QuantizeHandler": "variable",
                "MatchResult": "variable",
                "DEFAULT_FUSION_PATTERNS": "variable",
                "register_fusion_pattern": "function",
                "get_default_fusion_patterns": "function",
                "DEFAULT_QUANTIZATION_PATTERNS": "variable",
                "DEFAULT_OUTPUT_ACTIVATION_POST_PROCESS_MAP": "variable",
                "register_quant_pattern": "function",
                "get_default_quant_patterns": "function",
                "get_default_output_activation_post_process_map": "function"
            },
            "prepare": {
                "is_activation_post_process_node": "function",
                "node_arg_is_weight": "function",
                "CONV_OPS_WITH_BIAS": "variable",
                "CONV_BIAS_ARG_INDEX": "variable",
                "node_arg_is_bias": "function",
                "get_standalone_module_configs": "function",
                "qat_swap_modules": "function",
                "update_qconfig_for_qat": "function",
                "update_qconfig_for_fusion": "function",
                "insert_observer": "function",
                "get_target_activation_dtype_for_node": "function",
                "maybe_insert_input_observer_for_arg_or_kwarg": "function",
                "maybe_insert_input_observers_for_node": "function",
                "maybe_insert_input_equalization_observers_for_node": "function",
                "maybe_insert_output_observer_for_node": "function",
                "maybe_insert_observers_before_graph_output": "function",
                "maybe_propagate_dtype_for_node": "function",
                "propagate_dtypes_for_known_nodes": "function",
                "maybe_make_input_output_share_observers": "function",
                "remove_output_observer": "function",
                "swap_custom_module_to_observed": "function",
                "insert_observers_for_model": "function",
                "run_prepare_fx_on_standalone_modules": "function",
                "save_state": "function",
                "prepare": "function"
            },
            "qconfig_utils": {
                "get_flattened_qconfig_dict": "function",
                "convert_dict_to_ordered_dict": "function",
                "get_object_type_qconfig": "function",
                "get_module_name_regex_qconfig": "function",
                "maybe_adjust_qconfig_for_module_name_object_type_order": "function",
                "get_module_name_qconfig": "function",
                "maybe_adjust_qconfig_for_module_type_or_name": "function",
                "generate_qconfig_map": "function",
                "check_is_valid_config_dict": "function",
                "check_is_valid_qconfig_dict": "function",
                "check_is_valid_prepare_custom_config_dict": "function",
                "check_is_valid_convert_custom_config_dict": "function",
                "check_is_valid_fuse_custom_config_dict": "function"
            },
            "quantization_patterns": {
                "QuantizeHandler": "class",
                "all_dtypes": "variable",
                "fp16_dtypes": "variable",
                "int8_dtypes": "variable",
                "default_op_supported_dtypes": "variable",
                "QAT_CONV_MODULE_CLASSES": "variable",
                "_load_weight_qparams": "function",
                "_save_weight_qparams": "function",
                "_to_reference": "function",
                "BinaryOpQuantizeHandler": "class",
                "CatQuantizeHandler": "class",
                "ConvReluQuantizeHandler": "class",
                "LinearReLUQuantizeHandler": "class",
                "BatchNormQuantizeHandler": "class",
                "EmbeddingQuantizeHandler": "class",
                "RNNDynamicQuantizeHandler": "class",
                "ARGS_TO_SKIP": "variable",
                "DefaultNodeQuantizeHandler": "class",
                "FixedQParamsOpQuantizeHandler": "class",
                "CopyNodeQuantizeHandler": "class",
                "CustomModuleQuantizeHandler": "class",
                "GeneralTensorShapeOpQuantizeHandler": "class",
                "StandaloneModuleQuantizeHandler": "class",
                "ConvReLUQuantizeHandlerNew": "class",
                "LinearReLUQuantizeHandlerNew": "class"
            },
            "quantization_types": {
                "Pattern": "variable",
                "QuantizerCls": "variable"
            },
            "quantized_fusion_patterns_and_replacements": {
                "relu_inplace_pattern": "function",
                "relu_non_inplace_pattern": "function",
                "relu_replacement": "function",
                "_get_all_patterns_and_replacements": "function",
                "get_fbgemm_patterns_and_replacements": "function",
                "get_qnnpack_patterns_and_replacements": "function"
            },
            "utils": {
                "WEIGHT_INDEX_DICT": "variable",
                "NON_QUANTIZABLE_WEIGHT_OPS": "variable",
                "FUNCTIONAL_OPS_WITH_BIAS": "variable",
                "_parent_name": "function",
                "graph_pretty_str": "function",
                "get_per_tensor_qparams": "function",
                "get_quantize_node_info": "function",
                "quantize_node": "function",
                "get_custom_module_class_keys": "function",
                "get_linear_prepack_op_for_dtype": "function",
                "get_qconv_prepack_op": "function",
                "get_qconv_op": "function",
                "get_new_attr_name_with_prefix": "function",
                "collect_producer_nodes": "function",
                "graph_module_from_producer_nodes": "function",
                "assert_and_get_unique_device": "function",
                "create_getattr_from_value": "function",
                "create_qparam_nodes": "function",
                "all_node_args_have_no_tensors": "function",
                "node_return_type_is_int": "function",
                "node_bool_tensor_arg_indexes": "function",
                "is_get_tensor_info_node": "function",
                "maybe_get_next_module": "function"
            },
            "_equalize": {
                "reshape_scale": "function",
                "_InputEqualizationObserver": "class",
                "_WeightEqualizationObserver": "class",
                "calculate_equalization_scale": "function",
                "EqualizationQConfig": "class",
                "input_equalization_observer": "variable",
                "weight_equalization_observer": "variable",
                "default_equalization_qconfig": "variable",
                "fused_module_supports_equalization": "function",
                "nn_module_supports_equalization": "function",
                "node_supports_equalization": "function",
                "is_equalization_observer": "function",
                "get_op_node_and_weight_eq_obs": "function",
                "maybe_get_weight_eq_obs_node": "function",
                "maybe_get_next_input_eq_obs": "function",
                "maybe_get_next_equalization_scale": "function",
                "scale_input_observer": "function",
                "scale_weight_node": "function",
                "scale_weight_functional": "function",
                "clear_weight_quant_obs_node": "function",
                "remove_node": "function",
                "update_obs_for_equalization": "function",
                "convert_eq_obs": "function",
                "_convert_equalization_ref": "function",
                "get_layer_sqnr_dict": "function",
                "get_equalization_qconfig_dict": "function"
            },
            "_lower_to_native_backend": {
                "_lower_to_native_backend": "function"
            }
        },
        "quantize_fx": {
            "_check_is_graph_module": "function",
            "_swap_ff_with_fxff": "function",
            "_fuse_fx": "function",
            "Scope": "class",
            "ScopeContextManager": "class",
            "QuantizationTracer": "class",
            "_prepare_fx": "function",
            "_prepare_standalone_module_fx": "function",
            "fuse_fx": "function",
            "prepare_fx": "function",
            "prepare_qat_fx": "function",
            "_convert_fx": "function",
            "convert_fx": "function",
            "_convert_standalone_module_fx": "function"
        },
        "": {
            "default_eval_fn": "function",
            "_all__": "variable"
        }
    },
    "sparse": {
        "": {
            "__all__": "variable",
            "addmm": "function",
            "mm": "function",
            "sum": "function",
            "softmax": "function",
            "log_softmax": "function"
        }
    },
    "special": {
        "": {
            "__all__": "variable",
            "Tensor": "variable",
            "entr": "variable",
            "psi": "variable",
            "erfinv": "variable",
            "logit": "variable",
            "logsumexp": "variable",
            "sinc": "variable",
            "round": "variable"
        }
    },
    "utils": {
        "sox_utils": {
            "set_seed": "function",
            "set_verbosity": "function",
            "set_buffer_size": "function",
            "set_use_threads": "function",
            "list_effects": "function",
            "list_read_formats": "function",
            "list_write_formats": "function",
            "get_buffer_size": "function"
        }
    },
    "autocast_mode": {
        "autocast": "class"
    },
    "functional": {
        "filtering": {
            "_dB2Linear": "function",
            "_generate_wave_table": "function",
            "allpass_biquad": "function",
            "band_biquad": "function",
            "bandpass_biquad": "function",
            "bandreject_biquad": "function",
            "bass_biquad": "function",
            "biquad": "function",
            "contrast": "function",
            "dcshift": "function",
            "deemph_biquad": "function",
            "_add_noise_shaping": "function",
            "_apply_probability_distribution": "function",
            "dither": "function",
            "equalizer_biquad": "function",
            "filtfilt": "function",
            "flanger": "function",
            "gain": "function",
            "highpass_biquad": "function",
            "_lfilter_core_generic_loop": "function",
            "_lfilter_core": "function",
            "lfilter": "function",
            "lowpass_biquad": "function",
            "_overdrive_core_loop_generic": "function",
            "overdrive": "function",
            "phaser": "function",
            "riaa_biquad": "function",
            "treble_biquad": "function",
            "_measure": "function",
            "vad": "function"
        },
        "functional": {
            "__all__": "variable",
            "spectrogram": "function",
            "inverse_spectrogram": "function",
            "_get_complex_dtype": "function",
            "griffinlim": "function",
            "amplitude_to_DB": "function",
            "DB_to_amplitude": "function",
            "_hz_to_mel": "function",
            "_mel_to_hz": "function",
            "_create_triangular_filterbank": "function",
            "create_fb_matrix": "function",
            "melscale_fbanks": "function",
            "linear_fbanks": "function",
            "create_dct": "function",
            "mu_law_encoding": "function",
            "mu_law_decoding": "function",
            "complex_norm": "function",
            "angle": "function",
            "magphase": "function",
            "phase_vocoder": "function",
            "mask_along_axis_iid": "function",
            "mask_along_axis": "function",
            "compute_deltas": "function",
            "_compute_nccf": "function",
            "_combine_max": "function",
            "_find_max_per_frame": "function",
            "_median_smoothing": "function",
            "detect_pitch_frequency": "function",
            "sliding_window_cmn": "function",
            "spectral_centroid": "function",
            "apply_codec": "function",
            "compute_kaldi_pitch": "function",
            "_get_sinc_resample_kernel": "function",
            "_apply_sinc_resample_kernel": "function",
            "resample": "function",
            "edit_distance": "function",
            "pitch_shift": "function",
            "rnnt_loss": "function"
        },
        "": {
            "__all__": "variable"
        }
    },
    "hub": {
        "HASH_REGEX": "variable",
        "ENV_GITHUB_TOKEN": "variable",
        "ENV_TORCH_HOME": "variable",
        "ENV_XDG_CACHE_HOME": "variable",
        "DEFAULT_CACHE_DIR": "variable",
        "VAR_DEPENDENCY": "variable",
        "MODULE_HUBCONF": "variable",
        "READ_DATA_CHUNK": "variable",
        "_hub_dir": "variable",
        "import_module": "function",
        "_remove_if_exists": "function",
        "_git_archive_link": "function",
        "_load_attr_from_module": "function",
        "_get_torch_home": "function",
        "_parse_repo_info": "function",
        "_read_url": "function",
        "_validate_not_a_forked_repo": "function",
        "_get_cache_or_reload": "function",
        "_check_module_exists": "function",
        "_check_dependencies": "function",
        "_load_entry_from_hubconf": "function",
        "get_dir": "function",
        "set_dir": "function",
        "list": "function",
        "help": "function",
        "load": "function",
        "_load_local": "function",
        "download_url_to_file": "function",
        "_download_url_to_file": "function",
        "_is_legacy_zip_format": "function",
        "_legacy_zip_load": "function",
        "load_state_dict_from_url": "function"
    },
    "overrides": {
        "__all__": "variable",
        "get_ignored_functions": "function",
        "get_default_nowrap_functions": "function",
        "get_testing_overrides": "function",
        "wrap_torch_function": "function",
        "_get_overloaded_args": "function",
        "handle_torch_function": "function",
        "has_torch_function": "variable",
        "has_torch_function_unary": "variable",
        "has_torch_function_variadic": "variable",
        "get_overridable_functions": "function",
        "_get_tensor_methods": "function",
        "is_tensor_method_or_property": "function",
        "is_tensor_like": "function"
    },
    "quasirandom": {
        "SobolEngine": "class"
    },
    "serialization": {
        "DEFAULT_PROTOCOL": "variable",
        "LONG_SIZE": "variable",
        "INT_SIZE": "variable",
        "SHORT_SIZE": "variable",
        "MAGIC_NUMBER": "variable",
        "PROTOCOL_VERSION": "variable",
        "STORAGE_KEY_SEPARATOR": "variable",
        "SourceChangeWarning": "class",
        "mkdtemp": "function",
        "_package_registry": "variable",
        "_is_zipfile": "function",
        "register_package": "function",
        "check_module_version_greater_or_equal": "function",
        "_cpu_tag": "function",
        "_cuda_tag": "function",
        "_cpu_deserialize": "function",
        "validate_cuda_device": "function",
        "_cuda_deserialize": "function",
        "location_tag": "function",
        "default_restore_location": "function",
        "normalize_storage_type": "function",
        "storage_to_tensor_type": "function",
        "_is_path": "function",
        "_opener": "class",
        "_open_file": "class",
        "_open_buffer_reader": "class",
        "_open_buffer_writer": "class",
        "_open_file_like": "function",
        "_open_zipfile_reader": "class",
        "_open_zipfile_writer_file": "class",
        "_open_zipfile_writer_buffer": "class",
        "_open_zipfile_writer": "function",
        "_is_compressed_file": "function",
        "_should_read_directly": "function",
        "_check_seekable": "function",
        "_check_dill_version": "function",
        "save": "function",
        "_legacy_save": "function",
        "_save": "function",
        "load": "function",
        "_get_layout": "function",
        "_get_layout.cache": "variable",
        "_legacy_load": "function",
        "_maybe_decode_ascii": "function",
        "_get_restore_location": "function",
        "_load": "function",
        "_is_torchscript_zip": "function"
    },
    "storage": {
        "T": "variable",
        "_StorageBase": "class",
        "_load_from_bytes": "function",
        "_StorageBase.type": "variable",
        "_StorageBase.cuda": "variable"
    },
    "torch_version": {
        "Version": "variable",
        "InvalidVersion": "variable",
        "TorchVersion": "class",
        "__version__": "variable"
    },
    "types": {
        "_TensorOrTensors": "variable",
        "_int": "variable",
        "_float": "variable",
        "_bool": "variable",
        "_dtype": "variable",
        "_device": "variable",
        "_qscheme": "variable",
        "_size": "variable",
        "_layout": "variable",
        "Number": "variable",
        "Device": "variable",
        "Storage": "class"
    },
    "_appdirs": {
        "__version__": "variable",
        "__version_info__": "variable",
        "unicode": "variable",
        "user_data_dir": "function",
        "site_data_dir": "function",
        "user_config_dir": "function",
        "site_config_dir": "function",
        "user_cache_dir": "function",
        "user_state_dir": "function",
        "user_log_dir": "function",
        "AppDirs": "class",
        "_get_win_folder_from_registry": "function",
        "_get_win_folder_with_pywin32": "function",
        "_get_win_folder_with_ctypes": "function",
        "_get_win_folder_with_jna": "function"
    },
    "_classes": {
        "_ClassNamespace": "class",
        "_Classes": "class",
        "classes": "variable"
    },
    "_deploy": {
        "_save_storages": "function",
        "_load_storages": "function",
        "_get_package": "function"
    },
    "_jit_internal": {
        "createResolutionCallbackFromEnv": "function",
        "createResolutionCallbackFromFrame": "function",
        "get_closure": "function",
        "createResolutionCallbackFromClosure": "function",
        "can_compile_class": "function",
        "get_callable_argument_names": "function",
        "get_annotation_str": "function",
        "get_type_hint_captures": "function",
        "createResolutionCallbackForClassMethods": "function",
        "boolean_dispatch": "function",
        "FunctionModifiers": "class",
        "export": "function",
        "unused": "function",
        "_IgnoreContextManager": "class",
        "ignore": "function",
        "_copy_to_script_wrapper": "function",
        "module_has_exports": "function",
        "should_drop": "function",
        "is_ignored_fn": "function",
        "is_static_fn": "function",
        "get_static_fn": "function",
        "get_torchscript_modifier": "function",
        "copy_torchscript_modifier": "function",
        "_OVERLOAD_EXAMPLE": "variable",
        "my_function": "function"
    },
    "_linalg_utils": {
        "is_sparse": "function",
        "get_floating_dtype": "function",
        "matmul": "function",
        "conjugate": "function",
        "transpose": "function",
        "transjugate": "function",
        "bform": "function",
        "qform": "function",
        "basis": "function",
        "symeig": "function"
    },
    "_lobpcg": {
        "__all__": "variable",
        "_symeig_backward_complete_eigenspace": "function",
        "_polynomial_coefficients_given_roots": "function",
        "_polynomial_value": "function",
        "_matrix_polynomial_value": "function",
        "_vector_polynomial_value": "function",
        "_symeig_backward_partial_eigenspace": "function",
        "_symeig_backward": "function",
        "LOBPCGAutogradFunction": "class",
        "lobpcg": "function",
        "_lobpcg": "function",
        "LOBPCG": "class",
        "LOBPCG_call_tracker_orig": "variable",
        "LOBPCG_call_tracker": "function"
    },
    "_lowrank": {
        "__all__": "variable",
        "get_approximate_basis": "function",
        "svd_lowrank": "function",
        "_svd_lowrank": "function",
        "pca_lowrank": "function"
    },
    "_namedtensor_internals": {
        "check_serializing_named_tensor": "function",
        "build_dim_map": "function",
        "unzip_namedshape": "function",
        "namer_api_name": "function",
        "is_ellipsis": "function",
        "single_ellipsis_index": "function",
        "expand_single_ellipsis": "function",
        "replace_ellipsis_by_position": "function",
        "resolve_ellipsis": "function",
        "update_names_with_list": "function",
        "update_names_with_mapping": "function",
        "update_names": "function"
    },
    "_ops": {
        "_SET_GLOBAL_FLAGS": "variable",
        "dl_open_guard": "function",
        "_OpNamespace": "class",
        "_Ops": "class",
        "ops": "variable"
    },
    "_python_dispatcher": {
        "PythonDispatcher": "class"
    },
    "_six": {
        "inf": "variable",
        "nan": "variable",
        "string_classes": "variable",
        "PY37": "variable",
        "with_metaclass": "function"
    },
    "_sources": {
        "get_source_lines_and_file": "function",
        "normalize_source_lines": "function",
        "SourceContext": "class",
        "make_source_context": "function",
        "fake_range": "function",
        "ParsedDef": "class",
        "parse_def": "function"
    },
    "_tensor": {
        "_wrap_type_error_to_not_implemented": "function",
        "_rebuild_from_type": "function",
        "_rebuild_from_type_v2": "function",
        "Tensor": "class",
        "_convert": "function"
    },
    "_tensor_docs": {
        "new_common_args": "variable",
        "``dimension": "variable"
    },
    "_tensor_str": {
        "__PrinterOptions": "class",
        "PRINT_OPTS": "variable",
        "set_printoptions": "function",
        "_Formatter": "class",
        "_scalar_str": "function",
        "_vector_str": "function",
        "_tensor_str_with_formatter": "function",
        "_tensor_str": "function",
        "_add_suffixes": "function",
        "get_summarized_data": "function",
        "_str_intern": "function",
        "_str": "function"
    },
    "_torch_docs": {
        "reduceops_common_args": "variable",
        "factory_common_args": "variable",
        "factory_data_common_args": "variable",
        ":math:`w": "variable",
        ":math:`\\mu_x^*": "variable",
        ":attr:`diagonal`": "variable",
        ":attr:`offset`": "variable"
    },
    "_utils": {
        "_type": "function",
        "_cuda": "function",
        "_get_async_or_non_blocking": "function",
        "_rebuild_tensor": "function",
        "_rebuild_tensor_v2": "function",
        "_validate_loaded_sparse_tensors": "function",
        "_rebuild_sparse_tensor": "function",
        "_rebuild_device_tensor_from_numpy": "function",
        "_rebuild_xla_tensor": "variable",
        "_rebuild_mlc_tensor": "variable",
        "_rebuild_meta_tensor_no_storage": "function",
        "_rebuild_qtensor": "function",
        "_rebuild_parameter": "function",
        "_import_dotted_name": "function",
        "_accumulate": "function",
        "_flatten_dense_tensors": "function",
        "_flatten_sparse_tensors": "function",
        "_unflatten_dense_tensors": "function",
        "_unflatten_sparse_tensors": "function",
        "_reorder_tensors_as": "function",
        "_take_tensors": "function",
        "annotate": "function",
        "KeyErrorMessage": "class",
        "ExceptionWrapper": "class",
        "_get_available_device_type": "function",
        "_get_device_attr": "function",
        "_get_current_device_index": "function",
        "_get_all_device_indices": "function",
        "_get_devices_properties": "function",
        "get_current_device_index": "function",
        "_get_device_index": "function",
        "_handle_complex": "function"
    },
    "_utils_internal": {
        "get_file_path": "function",
        "get_file_path_2": "function",
        "get_writable_path": "function",
        "prepare_multiprocessing_environment": "function",
        "resolve_library_path": "function",
        "TEST_MASTER_ADDR": "variable",
        "TEST_MASTER_PORT": "variable",
        "USE_GLOBAL_DEPS": "variable",
        "USE_RTLD_GLOBAL_WITH_LIBTORCH": "variable"
    },
    "_VF": {
        "VFModule": "class",
        "sys.modules[__name__]": "variable"
    },
    "_vmap_internals": {
        "in_dims_t": "variable",
        "out_dims_t": "variable",
        "_validate_and_get_batch_size": "function",
        "_num_outputs": "function",
        "_as_tuple": "function",
        "_create_batched_inputs": "function",
        "_unwrap_batched": "function",
        "_validate_outputs": "function",
        "_check_out_dims_is_int_or_int_tuple": "function",
        "_get_name": "function",
        "vmap": "function",
        "_vmap": "function"
    },
    "__future__": {
        "_overwrite_module_params_on_conversion": "variable",
        "set_overwrite_module_params_on_conversion": "function",
        "get_overwrite_module_params_on_conversion": "function"
    },
    "backend": {
        "common": {
            "AudioMetaData": "class"
        },
        "no_backend": {
            "load": "function",
            "save": "function",
            "info": "function"
        },
        "sox_io_backend": {
            "info": "function",
            "load": "function",
            "save": "function"
        }
    },
    "compliance": {
        "kaldi": {
            "__all__": "variable",
            "EPSILON": "variable",
            "MILLISECONDS_TO_SECONDS": "variable",
            "HAMMING": "variable",
            "HANNING": "variable",
            "POVEY": "variable",
            "RECTANGULAR": "variable",
            "BLACKMAN": "variable",
            "WINDOWS": "variable",
            "_get_epsilon": "function",
            "_next_power_of_2": "function",
            "_get_strided": "function",
            "_feature_window_function": "function",
            "_get_log_energy": "function",
            "_get_waveform_and_window_properties": "function",
            "_get_window": "function",
            "_subtract_column_mean": "function",
            "spectrogram": "function",
            "inverse_mel_scale_scalar": "function",
            "inverse_mel_scale": "function",
            "mel_scale_scalar": "function",
            "mel_scale": "function",
            "vtln_warp_freq": "function",
            "vtln_warp_mel_freq": "function",
            "get_mel_banks": "function",
            "fbank": "function",
            "_get_dct_matrix": "function",
            "_get_lifter_coeffs": "function",
            "mfcc": "function"
        },
        "": {
            "__all__": "variable"
        }
    },
    "datasets": {
        "cmuarctic": {
            "URL": "variable",
            "FOLDER_IN_ARCHIVE": "variable",
            "_CHECKSUMS": "variable",
            "load_cmuarctic_item": "function",
            "CMUARCTIC": "class"
        },
        "cmudict": {
            "_CHECKSUMS": "variable",
            "_PUNCTUATIONS": "variable",
            "_parse_dictionary": "function",
            "CMUDict": "class"
        },
        "commonvoice": {
            "load_commonvoice_item": "function",
            "COMMONVOICE": "class"
        },
        "gtzan": {
            "gtzan_genres": "variable",
            "filtered_test": "variable",
            "filtered_train": "variable",
            "filtered_valid": "variable",
            "URL": "variable",
            "FOLDER_IN_ARCHIVE": "variable",
            "_CHECKSUMS": "variable",
            "load_gtzan_item": "function",
            "GTZAN": "class"
        },
        "librimix": {
            "SampleType": "variable",
            "LibriMix": "class"
        },
        "librispeech": {
            "URL": "variable",
            "FOLDER_IN_ARCHIVE": "variable",
            "_CHECKSUMS": "variable",
            "load_librispeech_item": "function",
            "LIBRISPEECH": "class"
        },
        "libritts": {
            "URL": "variable",
            "FOLDER_IN_ARCHIVE": "variable",
            "_CHECKSUMS": "variable",
            "load_libritts_item": "function",
            "LIBRITTS": "class"
        },
        "ljspeech": {
            "_RELEASE_CONFIGS": "variable",
            "LJSPEECH": "class"
        },
        "speechcommands": {
            "FOLDER_IN_ARCHIVE": "variable",
            "URL": "variable",
            "HASH_DIVIDER": "variable",
            "EXCEPT_FOLDER": "variable",
            "_CHECKSUMS": "variable",
            "_load_list": "function",
            "load_speechcommands_item": "function",
            "SPEECHCOMMANDS": "class"
        },
        "tedlium": {
            "_RELEASE_CONFIGS": "variable",
            "TEDLIUM": "class"
        },
        "utils": {
            "stream_url": "function",
            "download_url": "function",
            "validate_file": "function",
            "extract_archive": "function",
            "_DiskCache": "class",
            "diskcache_iterator": "function",
            "_ThreadedIterator": "class",
            "bg_iterator": "function"
        },
        "vctk": {
            "URL": "variable",
            "FOLDER_IN_ARCHIVE": "variable",
            "_CHECKSUMS": "variable",
            "load_vctk_item": "function",
            "VCTK": "class",
            "SampleType": "variable",
            "VCTK_092": "class"
        },
        "yesno": {
            "_RELEASE_CONFIGS": "variable",
            "YESNO": "class"
        },
        "": {
            "__all__": "variable"
        }
    },
    "models": {
        "wav2vec2": {
            "utils": {
                "import_fairseq": {
                    "_parse_config": "function",
                    "_map_key": "function",
                    "_convert_state_dict": "function",
                    "import_fairseq_model": "function",
                    "_import_wav2vec2_finetuning": "function",
                    "_import_wav2vec2_pretraining": "function",
                    "_import_hubert_finetuning": "function",
                    "_import_hubert_pretraining": "function"
                },
                "import_huggingface": {
                    "_LG": "variable",
                    "_get_config": "function",
                    "_build": "function",
                    "import_huggingface_model": "function"
                },
                "": {
                    "__all__": "variable"
                }
            },
            "components": {
                "_LG": "variable",
                "LayerNorm": "class",
                "ConvLayerBlock": "class",
                "FeatureExtractor": "class",
                "FeatureProjection": "class",
                "ConvolutionalPositionalEmbedding": "class",
                "SelfAttention": "class",
                "FeedForward": "class",
                "EncoderLayer": "class",
                "Transformer": "class",
                "Encoder": "class",
                "_get_feature_extractor": "function",
                "_get_encoder": "function"
            },
            "model": {
                "Wav2Vec2Model": "class",
                "wav2vec2_model": "function",
                "wav2vec2_base": "function",
                "wav2vec2_large": "function",
                "wav2vec2_large_lv60k": "function",
                "hubert_base": "function",
                "hubert_large": "function",
                "hubert_xlarge": "function"
            },
            "": {
                "__all__": "variable"
            }
        },
        "conv_tasnet": {
            "ConvBlock": "class",
            "MaskGenerator": "class",
            "ConvTasNet": "class"
        },
        "deepspeech": {
            "__all__": "variable",
            "FullyConnected": "class",
            "DeepSpeech": "class"
        },
        "tacotron2": {
            "__all__": "variable",
            "_get_linear_layer": "function",
            "_get_conv1d_layer": "function",
            "_get_mask_from_lengths": "function",
            "_LocationLayer": "class",
            "_Attention": "class",
            "_Prenet": "class",
            "_Postnet": "class",
            "_Encoder": "class",
            "_Decoder": "class",
            "Tacotron2": "class"
        },
        "wav2letter": {
            "__all__": "variable",
            "Wav2Letter": "class"
        },
        "wavernn": {
            "__all__": "variable",
            "ResBlock": "class",
            "MelResNet": "class",
            "Stretch2d": "class",
            "UpsampleNetwork": "class",
            "WaveRNN": "class"
        },
        "": {
            "__all__": "variable"
        }
    },
    "pipelines": {
        "_tts": {
            "impl": {
                "__all__": "variable",
                "_BASE_URL": "variable",
                "_EnglishCharProcessor": "class",
                "_EnglishPhoneProcessor": "class",
                "_WaveRNNVocoder": "class",
                "_GriffinLimVocoder": "class",
                "_CharMixin": "class",
                "_PhoneMixin": "class",
                "_Tacotron2Mixin": "class",
                "_WaveRNNMixin": "class",
                "_GriffinLimMixin": "class",
                "_Tacotron2WaveRNNCharBundle": "class",
                "_Tacotron2WaveRNNPhoneBundle": "class",
                "_Tacotron2GriffinLimCharBundle": "class",
                "_Tacotron2GriffinLimPhoneBundle": "class",
                "TACOTRON2_GRIFFINLIM_CHAR_LJSPEECH": "variable",
                "TACOTRON2_GRIFFINLIM_CHAR_LJSPEECH.__doc__": "variable",
                "TACOTRON2_WAVERNN_CHAR_LJSPEECH": "variable",
                "TACOTRON2_WAVERNN_CHAR_LJSPEECH.__doc__": "variable"
            },
            "interface": {
                "_TextProcessor": "class",
                "_Vocoder": "class",
                "Tacotron2TTSBundle": "class"
            },
            "utils": {
                "_get_chars": "function",
                "_get_phones": "function",
                "_to_tensor": "function",
                "_load_phonemizer": "function",
                "_unnormalize_waveform": "function",
                "_get_taco_params": "function",
                "_get_wrnn_params": "function"
            },
            "": {
                "__all__": "variable"
            }
        },
        "_wav2vec2": {
            "__all__": "variable",
            "Wav2Vec2Bundle": "class",
            "Wav2Vec2ASRBundle": "class",
            "_get_labels": "function",
            "WAV2VEC2_BASE": "variable",
            "WAV2VEC2_BASE.__doc__": "variable",
            "WAV2VEC2_ASR_BASE_100H": "variable",
            "WAV2VEC2_ASR_BASE_100H.__doc__": "variable",
            "WAV2VEC2_LARGE": "variable",
            "WAV2VEC2_LARGE.__doc__": "variable",
            "WAV2VEC2_ASR_LARGE_100H": "variable",
            "WAV2VEC2_ASR_LARGE_100H.__doc__": "variable",
            "WAV2VEC2_LARGE_LV60K": "variable",
            "WAV2VEC2_LARGE_LV60K.__doc__": "variable",
            "WAV2VEC2_ASR_LARGE_LV60K_100H": "variable",
            "WAV2VEC2_ASR_LARGE_LV60K_100H.__doc__": "variable",
            "WAV2VEC2_XLSR53": "variable",
            "WAV2VEC2_XLSR53.__doc__": "variable",
            "HUBERT_LARGE": "variable",
            "HUBERT_LARGE.__doc__": "variable",
            "HUBERT_ASR_LARGE": "variable",
            "HUBERT_ASR_LARGE.__doc__": "variable"
        },
        "": {
            "__all__": "variable"
        }
    },
    "sox_effects": {
        "sox_effects": {
            "init_sox_effects": "function",
            "shutdown_sox_effects": "function",
            "effect_names": "function",
            "apply_effects_tensor": "function",
            "apply_effects_file": "function"
        },
        "": {
            "__all__": "variable"
        }
    },
    "_internal": {
        "module_utils": {
            "is_module_available": "function",
            "requires_module": "function",
            "deprecated": "function",
            "is_kaldi_available": "function",
            "requires_kaldi": "function",
            "_check_soundfile_importable": "function",
            "_is_soundfile_importable": "variable",
            "is_soundfile_available": "function",
            "requires_soundfile": "function",
            "is_sox_available": "function",
            "requires_sox": "function"
        }
    },
    "kaldi_io": {
        "__all__": "variable",
        "_convert_method_output_to_tensor": "function",
        "read_vec_int_ark": "function",
        "read_vec_flt_scp": "function",
        "read_vec_flt_ark": "function",
        "read_mat_scp": "function",
        "read_mat_ark": "function"
    },
    "_extension": {
        "_init_extension": "function"
    }
}